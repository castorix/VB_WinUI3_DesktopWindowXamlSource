//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//       LottieGen version:
//           7.1.1+g046e9eb0a2
//       
//       Command:
//           LottieGen -Language CSharp -Public -WinUIVersion 3.0 -InputFile Cow.json
//       
//       Input file:
//           Cow.json (171729 bytes created 8:54+02:00 Apr 19 2025)
//       
//       LottieGen source:
//           http://aka.ms/Lottie
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// ____________________________________
// |       Object stats       | Count |
// |__________________________|_______|
// | All CompositionObjects   |   938 |
// |--------------------------+-------|
// | Expression animators     |   107 |
// | KeyFrame animators       |    88 |
// | Reference parameters     |   106 |
// | Expression operations    |     0 |
// |--------------------------+-------|
// | Animated brushes         |     - |
// | Animated gradient stops  |     - |
// | ExpressionAnimations     |     2 |
// | PathKeyFrameAnimations   |     5 |
// |--------------------------+-------|
// | ContainerVisuals         |    16 |
// | ShapeVisuals             |    16 |
// |--------------------------+-------|
// | ContainerShapes          |    41 |
// | CompositionSpriteShapes  |    97 |
// |--------------------------+-------|
// | Brushes                  |    34 |
// | Gradient stops           |     - |
// | CompositionVisualSurface |    12 |
// ------------------------------------
using Microsoft.Graphics.Canvas;
using Microsoft.Graphics.Canvas.Effects;
using Microsoft.Graphics.Canvas.Geometry;
using Microsoft.UI.Composition;
using System;
using System.Collections.Generic;
using System.Numerics;
using Windows.Graphics;
using Windows.UI;

namespace AnimatedVisuals
{
    // Name:        Cow Drink Milk
    // Frame rate:  60 fps
    // Frame count: 415
    // Duration:    6916.7 mS
    public sealed class Cow
        : Microsoft.UI.Xaml.Controls.IAnimatedVisualSource
    {
        // Animation duration: 6.917 seconds.
        internal const long c_durationTicks = 69166666;

        public Microsoft.UI.Xaml.Controls.IAnimatedVisual TryCreateAnimatedVisual(Compositor compositor)
        {
            object ignored = null;
            return TryCreateAnimatedVisual(compositor, out ignored);
        }

        public Microsoft.UI.Xaml.Controls.IAnimatedVisual TryCreateAnimatedVisual(Compositor compositor, out object diagnostics)
        {
            diagnostics = null;

            var res =
                new Cow_AnimatedVisual(
                    compositor
                    );
            res.CreateAnimations();
            return res;
        }

        /// <summary>
        /// Gets the number of frames in the animation.
        /// </summary>
        public double FrameCount => 415d;

        /// <summary>
        /// Gets the frame rate of the animation.
        /// </summary>
        public double Framerate => 60d;

        /// <summary>
        /// Gets the duration of the animation.
        /// </summary>
        public TimeSpan Duration => TimeSpan.FromTicks(c_durationTicks);

        /// <summary>
        /// Converts a zero-based frame number to the corresponding progress value denoting the
        /// start of the frame.
        /// </summary>
        public double FrameToProgress(double frameNumber)
        {
            return frameNumber / 415d;
        }

        /// <summary>
        /// Returns a map from marker names to corresponding progress values.
        /// </summary>
        public IReadOnlyDictionary<string, double> Markers =>
            new Dictionary<string, double>
            {
            };

        /// <summary>
        /// Sets the color property with the given name, or does nothing if no such property
        /// exists.
        /// </summary>
        public void SetColorProperty(string propertyName, Color value)
        {
        }

        /// <summary>
        /// Sets the scalar property with the given name, or does nothing if no such property
        /// exists.
        /// </summary>
        public void SetScalarProperty(string propertyName, double value)
        {
        }

        sealed class Cow_AnimatedVisual : Microsoft.UI.Xaml.Controls.IAnimatedVisual2
        {
            const long c_durationTicks = 69166666;
            readonly Compositor _c;
            readonly ExpressionAnimation _reusableExpressionAnimation;
            BooleanKeyFrameAnimation _isVisibleBooleanAnimation_0;
            BooleanKeyFrameAnimation _isVisibleBooleanAnimation_1;
            BooleanKeyFrameAnimation _isVisibleBooleanAnimation_2;
            BooleanKeyFrameAnimation _isVisibleBooleanAnimation_3;
            CanvasGeometry _geometry_41;
            CompositionColorBrush _colorBrush_AlmostDarkGray_FFB099C5;
            CompositionColorBrush _colorBrush_AlmostGoldenrod_FFECD12E;
            CompositionColorBrush _colorBrush_AlmostLightPink_FFFFAEBD;
            CompositionColorBrush _colorBrush_AlmostNavy_FF000071;
            CompositionColorBrush _colorBrush_AlmostNavy_FF000072;
            CompositionColorBrush _colorBrush_AlmostOrange_FFFF9B00;
            CompositionColorBrush _colorBrush_AlmostRed_FFDF0000;
            CompositionColorBrush _colorBrush_SemiTransparentAlmostLightPink_FCFFAFBE;
            CompositionColorBrush _colorBrush_SemiTransparentAlmostNavy_FC000072;
            CompositionColorBrush _colorBrush_SemiTransparentWhite_0;
            CompositionColorBrush _colorBrush_White;
            CompositionContainerShape _containerShape_00;
            CompositionContainerShape _containerShape_01;
            CompositionContainerShape _containerShape_02;
            CompositionContainerShape _containerShape_03;
            CompositionContainerShape _containerShape_04;
            CompositionContainerShape _containerShape_05;
            CompositionContainerShape _containerShape_06;
            CompositionContainerShape _containerShape_07;
            CompositionContainerShape _containerShape_08;
            CompositionContainerShape _containerShape_09;
            CompositionContainerShape _containerShape_10;
            CompositionContainerShape _containerShape_11;
            CompositionContainerShape _containerShape_12;
            CompositionContainerShape _containerShape_13;
            CompositionContainerShape _containerShape_14;
            CompositionContainerShape _containerShape_15;
            CompositionContainerShape _containerShape_16;
            CompositionContainerShape _containerShape_17;
            CompositionContainerShape _containerShape_18;
            CompositionContainerShape _containerShape_19;
            CompositionContainerShape _containerShape_20;
            CompositionContainerShape _containerShape_21;
            CompositionContainerShape _containerShape_22;
            CompositionContainerShape _containerShape_23;
            CompositionContainerShape _containerShape_24;
            CompositionContainerShape _containerShape_25;
            CompositionContainerShape _containerShape_26;
            CompositionContainerShape _containerShape_27;
            CompositionContainerShape _containerShape_28;
            CompositionContainerShape _containerShape_29;
            CompositionContainerShape _containerShape_30;
            CompositionContainerShape _containerShape_31;
            CompositionContainerShape _containerShape_32;
            CompositionContainerShape _containerShape_33;
            CompositionContainerShape _containerShape_34;
            CompositionContainerShape _containerShape_35;
            CompositionContainerShape _containerShape_36;
            CompositionContainerShape _containerShape_37;
            CompositionContainerShape _containerShape_38;
            CompositionContainerShape _containerShape_39;
            CompositionContainerShape _containerShape_40;
            CompositionPath _path_00;
            CompositionPath _path_01;
            CompositionPath _path_02;
            CompositionPath _path_03;
            CompositionPath _path_04;
            CompositionPath _path_05;
            CompositionPath _path_06;
            CompositionPath _path_07;
            CompositionPath _path_08;
            CompositionPath _path_09;
            CompositionPath _path_10;
            CompositionPath _path_11;
            CompositionPath _path_12;
            CompositionPath _path_13;
            CompositionPath _path_14;
            CompositionPathGeometry _pathGeometry_02;
            CompositionPathGeometry _pathGeometry_03;
            CompositionPathGeometry _pathGeometry_04;
            CompositionPathGeometry _pathGeometry_05;
            CompositionPathGeometry _pathGeometry_27;
            CompositionPathGeometry _pathGeometry_29;
            CompositionPathGeometry _pathGeometry_48;
            CompositionPathGeometry _pathGeometry_53;
            CompositionPathGeometry _pathGeometry_54;
            CompositionPathGeometry _pathGeometry_55;
            CompositionPathGeometry _pathGeometry_56;
            CompositionPathGeometry _pathGeometry_57;
            CompositionSpriteShape _spriteShape_52;
            ContainerVisual _containerVisual_09;
            ContainerVisual _containerVisual_10;
            ContainerVisual _root;
            CubicBezierEasingFunction _cubicBezierEasingFunction_00;
            CubicBezierEasingFunction _cubicBezierEasingFunction_01;
            CubicBezierEasingFunction _cubicBezierEasingFunction_02;
            CubicBezierEasingFunction _cubicBezierEasingFunction_03;
            CubicBezierEasingFunction _cubicBezierEasingFunction_04;
            CubicBezierEasingFunction _cubicBezierEasingFunction_05;
            CubicBezierEasingFunction _cubicBezierEasingFunction_06;
            CubicBezierEasingFunction _cubicBezierEasingFunction_07;
            CubicBezierEasingFunction _cubicBezierEasingFunction_08;
            CubicBezierEasingFunction _cubicBezierEasingFunction_09;
            CubicBezierEasingFunction _cubicBezierEasingFunction_10;
            CubicBezierEasingFunction _cubicBezierEasingFunction_11;
            CubicBezierEasingFunction _cubicBezierEasingFunction_12;
            CubicBezierEasingFunction _cubicBezierEasingFunction_13;
            CubicBezierEasingFunction _cubicBezierEasingFunction_14;
            CubicBezierEasingFunction _cubicBezierEasingFunction_15;
            CubicBezierEasingFunction _cubicBezierEasingFunction_16;
            CubicBezierEasingFunction _cubicBezierEasingFunction_17;
            CubicBezierEasingFunction _cubicBezierEasingFunction_18;
            ExpressionAnimation _rootProgress;
            ScalarKeyFrameAnimation _rotationAngleInDegreesScalarAnimation_0_to_m176;
            ScalarKeyFrameAnimation _rotationAngleInDegreesScalarAnimation_m496_to_0;
            ShapeVisual _shapeVisual_01;
            ShapeVisual _shapeVisual_02;
            ShapeVisual _shapeVisual_03;
            ShapeVisual _shapeVisual_04;
            ShapeVisual _shapeVisual_05;
            ShapeVisual _shapeVisual_06;
            ShapeVisual _shapeVisual_14;
            ShapeVisual _shapeVisual_15;
            StepEasingFunction _holdThenStepEasingFunction;
            StepEasingFunction _stepThenHoldEasingFunction;
            Vector2KeyFrameAnimation _offsetVector2Animation_02;
            Vector2KeyFrameAnimation _offsetVector2Animation_05;
            Vector2KeyFrameAnimation _offsetVector2Animation_06;
            Vector2KeyFrameAnimation _offsetVector2Animation_07;
            Vector2KeyFrameAnimation _offsetVector2Animation_08;
            Vector2KeyFrameAnimation _offsetVector2Animation_09;
            Vector2KeyFrameAnimation _scaleVector2Animation_1;
            Vector2KeyFrameAnimation _scaleVector2Animation_2;
            Vector2KeyFrameAnimation _scaleVector2Animation_3;
            Vector2KeyFrameAnimation _scaleVector2Animation_4;

            static void StartProgressBoundAnimation(
                CompositionObject target,
                string animatedPropertyName,
                CompositionAnimation animation,
                ExpressionAnimation controllerProgressExpression)
            {
                target.StartAnimation(animatedPropertyName, animation);
                var controller = target.TryGetAnimationController(animatedPropertyName);
                controller.Pause();
                controller.StartAnimation("Progress", controllerProgressExpression);
            }

            void BindProperty(
                CompositionObject target,
                string animatedPropertyName,
                string expression,
                string referenceParameterName,
                CompositionObject referencedObject)
            {
                _reusableExpressionAnimation.ClearAllParameters();
                _reusableExpressionAnimation.Expression = expression;
                _reusableExpressionAnimation.SetReferenceParameter(referenceParameterName, referencedObject);
                target.StartAnimation(animatedPropertyName, _reusableExpressionAnimation);
            }

            BooleanKeyFrameAnimation CreateBooleanKeyFrameAnimation(float initialProgress, bool initialValue)
            {
                var result = _c.CreateBooleanKeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(initialProgress, initialValue);
                return result;
            }

            PathKeyFrameAnimation CreatePathKeyFrameAnimation(float initialProgress, CompositionPath initialValue, CompositionEasingFunction initialEasingFunction)
            {
                var result = _c.CreatePathKeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
                return result;
            }

            ScalarKeyFrameAnimation CreateScalarKeyFrameAnimation(float initialProgress, float initialValue, CompositionEasingFunction initialEasingFunction)
            {
                var result = _c.CreateScalarKeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
                return result;
            }

            Vector2KeyFrameAnimation CreateVector2KeyFrameAnimation(float initialProgress, Vector2 initialValue, CompositionEasingFunction initialEasingFunction)
            {
                var result = _c.CreateVector2KeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
                return result;
            }

            Vector3KeyFrameAnimation CreateVector3KeyFrameAnimation(float initialProgress, Vector3 initialValue, CompositionEasingFunction initialEasingFunction)
            {
                var result = _c.CreateVector3KeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
                return result;
            }

            CompositionSpriteShape CreateSpriteShape(CompositionGeometry geometry, Matrix3x2 transformMatrix, CompositionBrush fillBrush)
            {
                var result = _c.CreateSpriteShape(geometry);
                result.TransformMatrix = transformMatrix;
                result.FillBrush = fillBrush;
                return result;
            }

            BooleanKeyFrameAnimation IsVisibleBooleanAnimation_0()
            {
                // Frame 0.
                if (_isVisibleBooleanAnimation_0 != null) { return _isVisibleBooleanAnimation_0; }
                var result = _isVisibleBooleanAnimation_0 = CreateBooleanKeyFrameAnimation(0F, true);
                // Frame 109.
                result.InsertKeyFrame(0.262650609F, false);
                return result;
            }

            BooleanKeyFrameAnimation IsVisibleBooleanAnimation_1()
            {
                // Frame 0.
                if (_isVisibleBooleanAnimation_1 != null) { return _isVisibleBooleanAnimation_1; }
                var result = _isVisibleBooleanAnimation_1 = CreateBooleanKeyFrameAnimation(0F, false);
                // Frame 163.
                result.InsertKeyFrame(0.392771095F, true);
                // Frame 302.
                result.InsertKeyFrame(0.727710843F, false);
                return result;
            }

            BooleanKeyFrameAnimation IsVisibleBooleanAnimation_2()
            {
                // Frame 0.
                if (_isVisibleBooleanAnimation_2 != null) { return _isVisibleBooleanAnimation_2; }
                var result = _isVisibleBooleanAnimation_2 = CreateBooleanKeyFrameAnimation(0F, false);
                // Frame 302.
                result.InsertKeyFrame(0.727710843F, true);
                return result;
            }

            BooleanKeyFrameAnimation IsVisibleBooleanAnimation_3()
            {
                // Frame 0.
                if (_isVisibleBooleanAnimation_3 != null) { return _isVisibleBooleanAnimation_3; }
                var result = _isVisibleBooleanAnimation_3 = CreateBooleanKeyFrameAnimation(0F, false);
                // Frame 109.
                result.InsertKeyFrame(0.262650609F, true);
                // Frame 163.
                result.InsertKeyFrame(0.392771095F, false);
                return result;
            }

            // - - - - Layer aggregator
            // - - -  Scale:0.7,0.7, Offset:<960, 540>
            // - - ShapeGroup: Group 1 Offset:<237.88, 144.564>
            CanvasGeometry Geometry_00()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(205.826996F, 69.3069992F));
                    builder.AddCubicBezier(new Vector2(205.770996F, 69.4609985F), new Vector2(205.699997F, 69.6009979F), new Vector2(205.630997F, 69.7549973F));
                    builder.AddLine(new Vector2(136.688004F, 144.313995F));
                    builder.AddCubicBezier(new Vector2(136.688004F, 144.313995F), new Vector2(95.0419998F, 169.658005F), new Vector2(4.04199982F, 169.313995F));
                    builder.AddCubicBezier(new Vector2(-87.5599976F, 168.968002F), new Vector2(-114.953003F, 144.313995F), new Vector2(-114.953003F, 144.313995F));
                    builder.AddCubicBezier(new Vector2(-114.953003F, 144.313995F), new Vector2(-200.854996F, 71.6179962F), new Vector2(-205.518005F, 69.7549973F));
                    builder.AddCubicBezier(new Vector2(-237.630005F, -1.37199998F), new Vector2(-203.464996F, -89.538002F), new Vector2(-141.343002F, -161.098999F));
                    builder.AddCubicBezier(new Vector2(-84.2340012F, -143.466995F), new Vector2(-33.8479996F, -133.244003F), new Vector2(24.1159992F, -136.171005F));
                    builder.AddCubicBezier(new Vector2(65.6380005F, -138.244003F), new Vector2(92.3710022F, -149.181F), new Vector2(134.313004F, -161.813004F));
                    builder.AddCubicBezier(new Vector2(196.309998F, -90.4049988F), new Vector2(237.630997F, -1.66600001F), new Vector2(205.826996F, 69.3069992F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Layer aggregator
            // - - -  Scale:0.7,0.7, Offset:<960, 540>
            // - - Transforms: Layer 39 Outlines Offset:<14.484005, -1.151001>
            // Path 1
            CanvasGeometry Geometry_01()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-28.1229992F, 72.8219986F));
                    builder.AddCubicBezier(new Vector2(-24.0189991F, 74.4599991F), new Vector2(42.4300003F, 130.477005F), new Vector2(58.8149986F, 144.313004F));
                    builder.AddLine(new Vector2(45.4269981F, 144.313004F));
                    builder.AddCubicBezier(new Vector2(45.4269981F, 144.313004F), new Vector2(-40.4749985F, 71.6169968F), new Vector2(-45.1380005F, 69.7549973F));
                    builder.AddCubicBezier(new Vector2(-77.2490005F, -1.37199998F), new Vector2(-50.5859985F, -72.7519989F), new Vector2(11.5369997F, -144.313995F));
                    builder.AddCubicBezier(new Vector2(16.7740002F, -142.703003F), new Vector2(22.0119991F, -141.175995F), new Vector2(27.25F, -139.733994F));
                    builder.AddCubicBezier(new Vector2(-33.9210014F, -68.6910019F), new Vector2(-60.0110016F, 2.19899988F), new Vector2(-28.1229992F, 72.8219986F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_02()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-129.5F, -305F));
                    builder.AddCubicBezier(new Vector2(-159.25F, -309.25F), new Vector2(-207F, -329.5F), new Vector2(-225.5F, -339F));
                    builder.AddCubicBezier(new Vector2(-234.550995F, -343.64801F), new Vector2(-276.5F, -349.25F), new Vector2(-294F, -318.5F));
                    builder.AddCubicBezier(new Vector2(-299.558014F, -308.734985F), new Vector2(-303.75F, -283.5F), new Vector2(-290.5F, -259F));
                    builder.AddCubicBezier(new Vector2(-287.626007F, -253.686005F), new Vector2(-258.25F, -212.5F), new Vector2(-198F, -223F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_03()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-129.5F, -305F));
                    builder.AddCubicBezier(new Vector2(-159.25F, -309.25F), new Vector2(-193.977005F, -333.88501F), new Vector2(-210.850006F, -346.042999F));
                    builder.AddCubicBezier(new Vector2(-219.104996F, -351.990997F), new Vector2(-259.747009F, -363.798004F), new Vector2(-281.644989F, -336.007996F));
                    builder.AddCubicBezier(new Vector2(-288.598999F, -327.183014F), new Vector2(-296.514008F, -302.858002F), new Vector2(-287.074005F, -276.653015F));
                    builder.AddCubicBezier(new Vector2(-285.026001F, -270.968994F), new Vector2(-258.25F, -212.5F), new Vector2(-198F, -223F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - - - Layer aggregator
            // - - - - - -  Scale:0.7,0.7, Offset:<960, 540>
            // - - - - - Transforms: Head Controler
            // - - - - Transforms: Head
            // - - - Transforms: Left ear Offset:<254.30798, 358.042>
            // - Path
            CanvasGeometry Geometry_04()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-129.5F, -305F));
                    builder.AddCubicBezier(new Vector2(-159.25F, -309.25F), new Vector2(-195.207001F, -328.786011F), new Vector2(-211.029007F, -342.28299F));
                    builder.AddCubicBezier(new Vector2(-218.770004F, -348.885986F), new Vector2(-258.30899F, -363.979004F), new Vector2(-282.407013F, -338.072998F));
                    builder.AddCubicBezier(new Vector2(-290.059998F, -329.846008F), new Vector2(-299.938995F, -306.25F), new Vector2(-292.673004F, -279.360992F));
                    builder.AddCubicBezier(new Vector2(-291.096985F, -273.528992F), new Vector2(-258.25F, -212.5F), new Vector2(-198F, -223F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_05()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-129.5F, -305F));
                    builder.AddCubicBezier(new Vector2(-159.25F, -309.25F), new Vector2(-230.664993F, -319.770996F), new Vector2(-251.248993F, -316.804993F));
                    builder.AddCubicBezier(new Vector2(-261.319F, -315.354004F), new Vector2(-298.765015F, -295.631989F), new Vector2(-295.227997F, -260.428009F));
                    builder.AddCubicBezier(new Vector2(-294.105011F, -249.248001F), new Vector2(-282.911987F, -226.246002F), new Vector2(-257.923004F, -213.942993F));
                    builder.AddCubicBezier(new Vector2(-252.503006F, -211.274002F), new Vector2(-258.25F, -212.5F), new Vector2(-198F, -223F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_06()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-163.75F, -274.5F));
                    builder.AddCubicBezier(new Vector2(-163.75F, -274.5F), new Vector2(-190.75F, -273F), new Vector2(-209F, -281.25F));
                    builder.AddCubicBezier(new Vector2(-227.25F, -289.5F), new Vector2(-242.231003F, -299.889008F), new Vector2(-246.875F, -300F));
                    builder.AddCubicBezier(new Vector2(-252.125F, -300.125F), new Vector2(-258.25F, -299.75F), new Vector2(-261.75F, -297.25F));
                    builder.AddCubicBezier(new Vector2(-265.25F, -294.75F), new Vector2(-273F, -287.875F), new Vector2(-267.75F, -275F));
                    builder.AddCubicBezier(new Vector2(-262.937012F, -263.196014F), new Vector2(-244.25F, -235.25F), new Vector2(-187.25F, -244.25F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_07()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-163.75F, -274.5F));
                    builder.AddCubicBezier(new Vector2(-163.75F, -274.5F), new Vector2(-186.352997F, -275.59201F), new Vector2(-203.164993F, -286.476013F));
                    builder.AddCubicBezier(new Vector2(-219.977005F, -297.359985F), new Vector2(-233.238007F, -309.872009F), new Vector2(-237.813004F, -310.674988F));
                    builder.AddCubicBezier(new Vector2(-242.985001F, -311.583008F), new Vector2(-249.098007F, -312.127014F), new Vector2(-252.932007F, -310.178009F));
                    builder.AddCubicBezier(new Vector2(-256.765991F, -308.229004F), new Vector2(-265.455994F, -302.589996F), new Vector2(-262.188995F, -289.075012F));
                    builder.AddCubicBezier(new Vector2(-259.194F, -276.68399F), new Vector2(-244.25F, -235.25F), new Vector2(-187.25F, -244.25F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - - - Layer aggregator
            // - - - - - -  Scale:0.7,0.7, Offset:<960, 540>
            // - - - - - Transforms: Head Controler
            // - - - - Transforms: Head
            // - - - Transforms: Left ear Offset:<254.30798, 358.042>
            // - Path
            CanvasGeometry Geometry_08()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-163.75F, -274.5F));
                    builder.AddCubicBezier(new Vector2(-163.75F, -274.5F), new Vector2(-192.375F, -270.063995F), new Vector2(-208.240997F, -282.286987F));
                    builder.AddCubicBezier(new Vector2(-224.106995F, -294.51001F), new Vector2(-236.300003F, -308.063995F), new Vector2(-240.794006F, -309.239014F));
                    builder.AddCubicBezier(new Vector2(-245.875F, -310.566986F), new Vector2(-251.921997F, -311.609985F), new Vector2(-255.903F, -309.980988F));
                    builder.AddCubicBezier(new Vector2(-259.884003F, -308.35199F), new Vector2(-269.006012F, -303.441986F), new Vector2(-266.855011F, -289.704987F));
                    builder.AddCubicBezier(new Vector2(-264.882996F, -277.110992F), new Vector2(-244.25F, -235.25F), new Vector2(-187.25F, -244.25F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_09()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-163.75F, -274.5F));
                    builder.AddCubicBezier(new Vector2(-163.75F, -274.5F), new Vector2(-184.701996F, -283.11499F), new Vector2(-204.358002F, -279.273987F));
                    builder.AddCubicBezier(new Vector2(-224.014008F, -275.433014F), new Vector2(-242.244003F, -275.230011F), new Vector2(-246.093994F, -272.631012F));
                    builder.AddCubicBezier(new Vector2(-250.447006F, -269.692993F), new Vector2(-255.223999F, -265.841003F), new Vector2(-256.630005F, -261.776001F));
                    builder.AddCubicBezier(new Vector2(-258.036011F, -257.710999F), new Vector2(-260.373993F, -247.617996F), new Vector2(-248.639008F, -240.160995F));
                    builder.AddCubicBezier(new Vector2(-237.880005F, -233.324005F), new Vector2(-244.25F, -235.25F), new Vector2(-187.25F, -244.25F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_10()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-299.205994F, -305F));
                    builder.AddCubicBezier(new Vector2(-268.661987F, -309.25F), new Vector2(-219.638F, -329.5F), new Vector2(-200.643997F, -339F));
                    builder.AddCubicBezier(new Vector2(-191.352005F, -343.64801F), new Vector2(-148.281998F, -349.25F), new Vector2(-130.315002F, -318.5F));
                    builder.AddCubicBezier(new Vector2(-124.609001F, -308.734985F), new Vector2(-120.305F, -283.5F), new Vector2(-133.908997F, -259F));
                    builder.AddCubicBezier(new Vector2(-136.860001F, -253.686005F), new Vector2(-167.020004F, -212.5F), new Vector2(-228.878006F, -223F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_11()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-299.205994F, -305F));
                    builder.AddCubicBezier(new Vector2(-268.661987F, -309.25F), new Vector2(-233.244995F, -327.342987F), new Vector2(-217.826996F, -341.947998F));
                    builder.AddCubicBezier(new Vector2(-210.283997F, -349.092987F), new Vector2(-170.697006F, -366.958008F), new Vector2(-144.576996F, -342.747986F));
                    builder.AddCubicBezier(new Vector2(-136.281998F, -335.059998F), new Vector2(-124.836998F, -312.161011F), new Vector2(-130.742004F, -284.766998F));
                    builder.AddCubicBezier(new Vector2(-132.022995F, -278.825012F), new Vector2(-167.020004F, -212.5F), new Vector2(-228.878006F, -223F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - - - Layer aggregator
            // - - - - - -  Scale:0.7,0.7, Offset:<960, 540>
            // - - - - - Transforms: Head Controler
            // - - - - Transforms: Head
            // - - - Transforms: Right ear Offset:<684.11304, 355.501>
            // - Path
            CanvasGeometry Geometry_12()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-299.205994F, -305F));
                    builder.AddCubicBezier(new Vector2(-268.661987F, -309.25F), new Vector2(-227.507996F, -333.70401F), new Vector2(-209.815994F, -345.451996F));
                    builder.AddCubicBezier(new Vector2(-201.160995F, -351.200012F), new Vector2(-159.098007F, -362.019989F), new Vector2(-137.509995F, -333.694F));
                    builder.AddCubicBezier(new Vector2(-130.654007F, -324.697998F), new Vector2(-123.301003F, -300.178009F), new Vector2(-133.811005F, -274.200012F));
                    builder.AddCubicBezier(new Vector2(-136.091003F, -268.565002F), new Vector2(-167.020004F, -212.5F), new Vector2(-228.878006F, -223F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_13()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-299.205994F, -305F));
                    builder.AddCubicBezier(new Vector2(-268.661987F, -309.25F), new Vector2(-191.037003F, -315.919006F), new Vector2(-170.039001F, -312.743011F));
                    builder.AddCubicBezier(new Vector2(-159.766006F, -311.188995F), new Vector2(-121.334F, -290.958008F), new Vector2(-124.361F, -255.473007F));
                    builder.AddCubicBezier(new Vector2(-125.321999F, -244.203995F), new Vector2(-136.339996F, -221.097F), new Vector2(-161.572998F, -208.906998F));
                    builder.AddCubicBezier(new Vector2(-167.046005F, -206.263F), new Vector2(-167.020004F, -212.5F), new Vector2(-228.878006F, -223F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_14()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-299.205994F, -305F));
                    builder.AddCubicBezier(new Vector2(-268.661987F, -309.25F), new Vector2(-254.960007F, -337.337006F), new Vector2(-242.279007F, -354.246002F));
                    builder.AddCubicBezier(new Vector2(-236.074997F, -362.518005F), new Vector2(-200.227997F, -386.67099F), new Vector2(-170.550995F, -367.291992F));
                    builder.AddCubicBezier(new Vector2(-161.126007F, -361.138F), new Vector2(-146.065002F, -340.588989F), new Vector2(-147.272995F, -312.726013F));
                    builder.AddCubicBezier(new Vector2(-147.535004F, -306.682007F), new Vector2(-167.020004F, -212.5F), new Vector2(-228.878006F, -223F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_15()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-264.041992F, -274.5F));
                    builder.AddCubicBezier(new Vector2(-264.041992F, -274.5F), new Vector2(-236.320999F, -273F), new Vector2(-217.584F, -281.25F));
                    builder.AddCubicBezier(new Vector2(-198.847F, -289.5F), new Vector2(-183.466003F, -299.889008F), new Vector2(-178.697998F, -300F));
                    builder.AddCubicBezier(new Vector2(-173.307999F, -300.125F), new Vector2(-167.018997F, -299.75F), new Vector2(-163.425995F, -297.25F));
                    builder.AddCubicBezier(new Vector2(-159.832993F, -294.75F), new Vector2(-151.876007F, -287.875F), new Vector2(-157.266006F, -275F));
                    builder.AddCubicBezier(new Vector2(-162.207993F, -263.196014F), new Vector2(-181.393997F, -235.25F), new Vector2(-239.914993F, -244.25F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_16()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-264.041992F, -274.5F));
                    builder.AddCubicBezier(new Vector2(-264.041992F, -274.5F), new Vector2(-232.807999F, -268.433014F), new Vector2(-217.272995F, -281.766998F));
                    builder.AddCubicBezier(new Vector2(-201.738007F, -295.101013F), new Vector2(-190.035004F, -309.509003F), new Vector2(-185.505005F, -310.998993F));
                    builder.AddCubicBezier(new Vector2(-180.382996F, -312.683014F), new Vector2(-174.255997F, -314.149994F), new Vector2(-170.091995F, -312.800995F));
                    builder.AddCubicBezier(new Vector2(-165.927994F, -311.451996F), new Vector2(-156.317993F, -307.182007F), new Vector2(-157.738007F, -293.296997F));
                    builder.AddCubicBezier(new Vector2(-159.039993F, -280.566986F), new Vector2(-178.391998F, -240.212997F), new Vector2(-237.455002F, -244.373993F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - - - Layer aggregator
            // - - - - - -  Scale:0.7,0.7, Offset:<960, 540>
            // - - - - - Transforms: Head Controler
            // - - - - Transforms: Head
            // - - - Transforms: Right ear Offset:<684.11304, 355.501>
            // - Path
            CanvasGeometry Geometry_17()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-264.041992F, -274.5F));
                    builder.AddCubicBezier(new Vector2(-264.041992F, -274.5F), new Vector2(-237.166F, -275.589996F), new Vector2(-219.576996F, -286.06601F));
                    builder.AddCubicBezier(new Vector2(-201.988007F, -296.541992F), new Vector2(-187.990997F, -308.731995F), new Vector2(-183.272003F, -309.424011F));
                    builder.AddCubicBezier(new Vector2(-177.936996F, -310.205994F), new Vector2(-171.649994F, -310.601013F), new Vector2(-167.778F, -308.55899F));
                    builder.AddCubicBezier(new Vector2(-163.906006F, -306.516998F), new Vector2(-155.169006F, -300.665009F), new Vector2(-158.947006F, -287.227997F));
                    builder.AddCubicBezier(new Vector2(-162.410004F, -274.908997F), new Vector2(-178.039993F, -244.830002F), new Vector2(-237.222F, -246.615997F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_18()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-264.041992F, -274.5F));
                    builder.AddCubicBezier(new Vector2(-264.041992F, -274.5F), new Vector2(-237.625F, -275.071991F), new Vector2(-217.153F, -275.29599F));
                    builder.AddCubicBezier(new Vector2(-196.414001F, -275.52301F), new Vector2(-178.526993F, -270.877991F), new Vector2(-174.565994F, -268.221985F));
                    builder.AddCubicBezier(new Vector2(-170.087997F, -265.218994F), new Vector2(-165.164001F, -261.290985F), new Vector2(-163.667007F, -257.177002F));
                    builder.AddCubicBezier(new Vector2(-162.169998F, -253.063004F), new Vector2(-159.626007F, -242.860001F), new Vector2(-171.449005F, -235.440994F));
                    builder.AddCubicBezier(new Vector2(-182.287994F, -228.639008F), new Vector2(-202.304993F, -239.244003F), new Vector2(-242.703995F, -246.520004F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_19()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-264.041992F, -274.5F));
                    builder.AddCubicBezier(new Vector2(-264.041992F, -274.5F), new Vector2(-244.671005F, -279.617004F), new Vector2(-231.662003F, -295.299011F));
                    builder.AddCubicBezier(new Vector2(-218.653F, -310.980988F), new Vector2(-209.584F, -327.074005F), new Vector2(-205.389008F, -329.294006F));
                    builder.AddCubicBezier(new Vector2(-200.645996F, -331.803986F), new Vector2(-194.880997F, -334.266998F), new Vector2(-190.570007F, -333.640991F));
                    builder.AddCubicBezier(new Vector2(-186.259003F, -333.015015F), new Vector2(-176.115997F, -330.436005F), new Vector2(-175.184998F, -316.575989F));
                    builder.AddCubicBezier(new Vector2(-174.332001F, -303.868988F), new Vector2(-181.393997F, -235.25F), new Vector2(-239.914993F, -244.25F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - - Layer aggregator
            // - - - - -  Scale:0.7,0.7, Offset:<960, 540>
            // - - - - Transforms: Head Controler
            // - - - Transforms: Head
            // - - Transforms: Head White Offset:<5.524002, 5.284012>
            // Path 1
            CanvasGeometry Geometry_20()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(231.973007F, 106.361F));
                    builder.AddCubicBezier(new Vector2(197.425003F, 180.639008F), new Vector2(112.040001F, 212.317001F), new Vector2(-6.09899998F, 211.391998F));
                    builder.AddCubicBezier(new Vector2(-124.237999F, 212.317001F), new Vector2(-209.621002F, 180.639008F), new Vector2(-244.169998F, 106.361F));
                    builder.AddCubicBezier(new Vector2(-254.630997F, 78.9690018F), new Vector2(-253.735001F, 48.8470001F), new Vector2(-245.695999F, 17.1410007F));
                    builder.AddCubicBezier(new Vector2(-236.326996F, -19.8579998F), new Vector2(-217.238998F, -59.0139999F), new Vector2(-195.154999F, -98.5619965F));
                    builder.AddCubicBezier(new Vector2(-179.945999F, -125.786003F), new Vector2(-163.701996F, -148.710999F), new Vector2(-143.873001F, -166.636993F));
                    builder.AddCubicBezier(new Vector2(-111.355003F, -196.046005F), new Vector2(-69.1740036F, -212.022995F), new Vector2(-6.09899998F, -211.533005F));
                    builder.AddCubicBezier(new Vector2(95.4309998F, -212.317001F), new Vector2(142.807999F, -170.460007F), new Vector2(182.957993F, -98.5619965F));
                    builder.AddCubicBezier(new Vector2(223.977005F, -25.1100006F), new Vector2(254.632004F, 47.0250015F), new Vector2(231.973007F, 106.361F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - - - Layer aggregator
            // - - - - - -  Scale:0.7,0.7, Offset:<960, 540>
            // - - - - - Transforms: Head Controler
            // - - - - Transforms: Head
            // - - - Transforms: Left Eye
            // - - ShapeGroup: Group 3 Offset:<37.448, 49.273>
            // Path 1
            CanvasGeometry Geometry_21()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(2.3210001F, -47.7840004F));
                    builder.AddCubicBezier(new Vector2(-17.5149994F, -49.0239983F), new Vector2(-34.6339989F, -28.6350002F), new Vector2(-35.9160004F, -2.24499989F));
                    builder.AddCubicBezier(new Vector2(-37.1980019F, 24.1450005F), new Vector2(-22.1569996F, 46.5439987F), new Vector2(-2.31999993F, 47.7840004F));
                    builder.AddCubicBezier(new Vector2(17.5149994F, 49.0239983F), new Vector2(34.6349983F, 28.6359997F), new Vector2(35.9169998F, 2.24600005F));
                    builder.AddCubicBezier(new Vector2(37.1980019F, -24.1439991F), new Vector2(22.1560001F, -46.5439987F), new Vector2(2.3210001F, -47.7840004F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - - - Layer aggregator
            // - - - - - -  Scale:0.7,0.7, Offset:<960, 540>
            // - - - - - Transforms: Head Controler
            // - - - - Transforms: Head
            // - - - Transforms: Left Eye
            // - - ShapeGroup: Group 2 Offset:<45.201, 28.023>
            // Path 1
            CanvasGeometry Geometry_22()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-6.20599985F, -15.4720001F));
                    builder.AddCubicBezier(new Vector2(-12.3599997F, -12.8690004F), new Vector2(-14.5710001F, -3.83100009F), new Vector2(-11.1429996F, 4.71400023F));
                    builder.AddCubicBezier(new Vector2(-7.71400023F, 13.2580004F), new Vector2(0.0529999994F, 18.0750008F), new Vector2(6.20699978F, 15.4720001F));
                    builder.AddCubicBezier(new Vector2(12.3610001F, 12.8699999F), new Vector2(14.5719995F, 3.83299994F), new Vector2(11.1440001F, -4.71199989F));
                    builder.AddCubicBezier(new Vector2(7.71600008F, -13.257F), new Vector2(-0.0520000011F, -18.0750008F), new Vector2(-6.20599985F, -15.4720001F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - - - Layer aggregator
            // - - - - - -  Scale:0.7,0.7, Offset:<960, 540>
            // - - - - - Transforms: Head Controler
            // - - - - Transforms: Head
            // - - - Transforms: Left Eye
            // - - ShapeGroup: Group 1 Offset:<25.963, 76.979>
            // Path 1
            CanvasGeometry Geometry_23()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-4.98999977F, -7.22399998F));
                    builder.AddCubicBezier(new Vector2(-7.85500002F, -5.11000013F), new Vector2(-7.94299984F, -0.160999998F), new Vector2(-5.1869998F, 3.8269999F));
                    builder.AddCubicBezier(new Vector2(-2.43099999F, 7.81699991F), new Vector2(2.12599993F, 9.33699989F), new Vector2(4.98999977F, 7.22300005F));
                    builder.AddCubicBezier(new Vector2(7.85400009F, 5.11000013F), new Vector2(7.94299984F, 0.162F), new Vector2(5.18599987F, -3.8269999F));
                    builder.AddCubicBezier(new Vector2(2.43099999F, -7.81599998F), new Vector2(-2.12599993F, -9.33699989F), new Vector2(-4.98999977F, -7.22399998F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - - - Layer aggregator
            // - - - - - -  Scale:0.7,0.7, Offset:<960, 540>
            // - - - - - Transforms: Head Controler
            // - - - - Transforms: Head
            // - - - Transforms: Right Eye
            // - - ShapeGroup: Group 3 Offset:<37.448, 49.273>
            // Path 1
            CanvasGeometry Geometry_24()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-2.3210001F, -47.7840004F));
                    builder.AddCubicBezier(new Vector2(17.5149994F, -49.0239983F), new Vector2(34.6339989F, -28.6350002F), new Vector2(35.9150009F, -2.24499989F));
                    builder.AddCubicBezier(new Vector2(37.1980019F, 24.1450005F), new Vector2(22.1569996F, 46.5439987F), new Vector2(2.3210001F, 47.7840004F));
                    builder.AddCubicBezier(new Vector2(-17.5149994F, 49.0239983F), new Vector2(-34.6349983F, 28.6359997F), new Vector2(-35.9169998F, 2.24600005F));
                    builder.AddCubicBezier(new Vector2(-37.1980019F, -24.1439991F), new Vector2(-22.1569996F, -46.5439987F), new Vector2(-2.3210001F, -47.7840004F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - - - Layer aggregator
            // - - - - - -  Scale:0.7,0.7, Offset:<960, 540>
            // - - - - - Transforms: Head Controler
            // - - - - Transforms: Head
            // - - - Transforms: Right Eye
            // - - ShapeGroup: Group 2 Offset:<29.694, 28.023>
            // Path 1
            CanvasGeometry Geometry_25()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(6.20699978F, -15.4720001F));
                    builder.AddCubicBezier(new Vector2(12.3610001F, -12.8690004F), new Vector2(14.5710001F, -3.83100009F), new Vector2(11.1440001F, 4.71400023F));
                    builder.AddCubicBezier(new Vector2(7.71500015F, 13.2580004F), new Vector2(-0.0529999994F, 18.0750008F), new Vector2(-6.20699978F, 15.4720001F));
                    builder.AddCubicBezier(new Vector2(-12.3610001F, 12.8699999F), new Vector2(-14.5710001F, 3.83299994F), new Vector2(-11.1440001F, -4.71199989F));
                    builder.AddCubicBezier(new Vector2(-7.71500015F, -13.257F), new Vector2(0.0529999994F, -18.0750008F), new Vector2(6.20699978F, -15.4720001F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - - - Layer aggregator
            // - - - - - -  Scale:0.7,0.7, Offset:<960, 540>
            // - - - - - Transforms: Head Controler
            // - - - - Transforms: Head
            // - - - Transforms: Right Eye
            // - - ShapeGroup: Group 1 Offset:<48.932, 76.979>
            // Path 1
            CanvasGeometry Geometry_26()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(4.99100018F, -7.22399998F));
                    builder.AddCubicBezier(new Vector2(7.85500002F, -5.11000013F), new Vector2(7.94299984F, -0.160999998F), new Vector2(5.1869998F, 3.8269999F));
                    builder.AddCubicBezier(new Vector2(2.43099999F, 7.81699991F), new Vector2(-2.12400007F, 9.33699989F), new Vector2(-4.98799992F, 7.22300005F));
                    builder.AddCubicBezier(new Vector2(-7.85400009F, 5.11000013F), new Vector2(-7.94199991F, 0.162F), new Vector2(-5.18599987F, -3.8269999F));
                    builder.AddCubicBezier(new Vector2(-2.43000007F, -7.81599998F), new Vector2(2.12700009F, -9.33699989F), new Vector2(4.99100018F, -7.22399998F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - - - Layer aggregator
            // - - - - - -  Scale:0.7,0.7, Offset:<960, 540>
            // - - - - - Transforms: Head Controler
            // - - - - Transforms: Head
            // - - - Transforms: Mouth Outline
            // - - Transforms: Mouth Offset:<-8.242996, 4.833>
            // Path 1
            CanvasGeometry Geometry_27()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(91.8119965F, 88.7070007F));
                    builder.AddCubicBezier(new Vector2(34.4830017F, 98.7809982F), new Vector2(-27.0279999F, 97.9929962F), new Vector2(-91.810997F, 88.7070007F));
                    builder.AddCubicBezier(new Vector2(-183.229996F, 66.3980026F), new Vector2(-194.658005F, 3.51999998F), new Vector2(-154.507996F, -47.3569984F));
                    builder.AddCubicBezier(new Vector2(-127.704002F, -81.3460007F), new Vector2(-66.1409988F, -98.7809982F), new Vector2(0F, -98.7109985F));
                    builder.AddCubicBezier(new Vector2(66.1419983F, -98.7809982F), new Vector2(127.704002F, -81.3460007F), new Vector2(154.507996F, -47.3569984F));
                    builder.AddCubicBezier(new Vector2(194.658005F, 3.51999998F), new Vector2(183.231003F, 66.3980026F), new Vector2(91.8119965F, 88.7070007F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - - Layer aggregator
            // - - - - -  Scale:0.7,0.7, Offset:<960, 540>
            // - - - - Transforms: Head Controler
            // - - - Transforms: Head
            // - - ShapeGroup: Group 1 Offset:<261.016, 218.068>
            CanvasGeometry Geometry_28()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-1.67700005F, 216.798004F));
                    builder.AddCubicBezier(new Vector2(-3.36599994F, 216.798004F), new Vector2(-5.04699993F, 216.791F), new Vector2(-6.75199986F, 216.779007F));
                    builder.AddCubicBezier(new Vector2(-134.158997F, 217.817993F), new Vector2(-215.979004F, 181.347F), new Vector2(-249.860001F, 108.508003F));
                    builder.AddCubicBezier(new Vector2(-249.914993F, 108.388F), new Vector2(-249.966003F, 108.265999F), new Vector2(-250.013F, 108.143997F));
                    builder.AddCubicBezier(new Vector2(-260.203003F, 81.4599991F), new Vector2(-260.765991F, 51.1720009F), new Vector2(-251.735992F, 15.5469999F));
                    builder.AddCubicBezier(new Vector2(-243.539001F, -16.8250008F), new Vector2(-227.785004F, -52.9259987F), new Vector2(-200.656006F, -101.510002F));
                    builder.AddCubicBezier(new Vector2(-183.628006F, -131.990997F), new Vector2(-166.970993F, -154.074005F), new Vector2(-148.238998F, -171.007996F));
                    builder.AddCubicBezier(new Vector2(-112.753998F, -203.098999F), new Vector2(-67.7409973F, -217.817993F), new Vector2(-6.66499996F, -217.352997F));
                    builder.AddCubicBezier(new Vector2(-5.73899984F, -217.358994F), new Vector2(-4.80000019F, -217.363007F), new Vector2(-3.88400006F, -217.363007F));
                    builder.AddCubicBezier(new Vector2(100.947998F, -217.363007F), new Vector2(148.416F, -171.031998F), new Vector2(187.238998F, -101.510002F));
                    builder.AddCubicBezier(new Vector2(227.158005F, -30.0259991F), new Vector2(260.765991F, 44.848999F), new Vector2(236.597F, 108.143997F));
                    builder.AddCubicBezier(new Vector2(236.550003F, 108.265999F), new Vector2(236.498993F, 108.388F), new Vector2(236.442001F, 108.508003F));
                    builder.AddCubicBezier(new Vector2(203.014999F, 180.373993F), new Vector2(122.904999F, 216.798004F), new Vector2(-1.67700005F, 216.798004F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    builder.BeginFigure(new Vector2(-6.75199986F, 205.574997F));
                    builder.AddCubicBezier(new Vector2(-5.07999992F, 205.587997F), new Vector2(-3.40799999F, 205.593994F), new Vector2(-1.75199997F, 205.593994F));
                    builder.AddCubicBezier(new Vector2(118.075996F, 205.593994F), new Vector2(194.720001F, 171.417999F), new Vector2(226.201004F, 103.961998F));
                    builder.AddCubicBezier(new Vector2(248.591995F, 44.9990005F), new Vector2(216.011993F, -27.0079994F), new Vector2(177.459F, -96.0469971F));
                    builder.AddCubicBezier(new Vector2(139.522995F, -163.975998F), new Vector2(95.8160019F, -206.158997F), new Vector2(-3.898F, -206.158997F));
                    builder.AddCubicBezier(new Vector2(-4.81899977F, -206.158997F), new Vector2(-5.73400021F, -206.156998F), new Vector2(-6.66499996F, -206.149002F));
                    builder.AddCubicBezier(new Vector2(-64.8619995F, -206.647003F), new Vector2(-107.447998F, -192.792007F), new Vector2(-140.725006F, -162.699005F));
                    builder.AddCubicBezier(new Vector2(-158.524994F, -146.606995F), new Vector2(-174.460999F, -125.428001F), new Vector2(-190.875F, -96.0459976F));
                    builder.AddCubicBezier(new Vector2(-217.507004F, -48.3530006F), new Vector2(-232.927994F, -13.0880003F), new Vector2(-240.876007F, 18.2999992F));
                    builder.AddCubicBezier(new Vector2(-249.300003F, 51.5279999F), new Vector2(-248.888F, 79.5500031F), new Vector2(-239.617004F, 103.961998F));
                    builder.AddCubicBezier(new Vector2(-208.138F, 171.414993F), new Vector2(-131.481003F, 205.593994F), new Vector2(-11.7469997F, 205.593994F));
                    builder.AddCubicBezier(new Vector2(-10.0869999F, 205.593994F), new Vector2(-8.4289999F, 205.587997F), new Vector2(-6.75199986F, 205.574997F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    builder.BeginFigure(new Vector2(231.363007F, 106.144997F));
                    builder.AddLine(new Vector2(231.376999F, 106.144997F));
                    builder.AddLine(new Vector2(231.363007F, 106.144997F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - - Layer aggregator
            // - - - - -  Scale:0.7,0.7, Offset:<960, 540>
            // - - - - Transforms: Head Controler
            // - - - Transforms: Head
            // - - Transforms: left Sing Offset:<116.132996, -63.604>
            // Path 1
            CanvasGeometry Geometry_29()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(38.4230003F, 21.3220005F));
                    builder.AddLine(new Vector2(-24.2639999F, -44.0359993F));
                    builder.AddCubicBezier(new Vector2(-29.4440002F, -49.4379997F), new Vector2(-38.4230003F, -44.4360008F), new Vector2(-36.5559998F, -37.1879997F));
                    builder.AddLine(new Vector2(-16.2779999F, 41.5530014F));
                    builder.AddCubicBezier(new Vector2(-1.11699998F, 49.4379997F), new Vector2(33.7649994F, 43.2939987F), new Vector2(38.4230003F, 21.3220005F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - - Layer aggregator
            // - - - - -  Scale:0.7,0.7, Offset:<960, 540>
            // - - - - Transforms: Head Controler
            // - - - Transforms: Head
            // - - Transforms: left Sing Offset:<116.132996, -63.604>
            // Path 1
            CanvasGeometry Geometry_30()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(18.2740002F, 45.5690002F));
                    builder.AddCubicBezier(new Vector2(12.1269999F, 45.5690002F), new Vector2(6.44099998F, 44.4630013F), new Vector2(2.25300002F, 42.2919998F));
                    builder.AddLine(new Vector2(-18.0249996F, -36.4529991F));
                    builder.AddCubicBezier(new Vector2(-19.8869991F, -43.6940002F), new Vector2(-10.9110003F, -48.6930008F), new Vector2(-5.72900009F, -43.3019981F));
                    builder.AddLine(new Vector2(-2.03200006F, -39.4510002F));
                    builder.AddCubicBezier(new Vector2(-3.09599996F, -37.882F), new Vector2(-3.54399991F, -35.8790016F), new Vector2(-2.97000003F, -33.6529999F));
                    builder.AddLine(new Vector2(17.3080006F, 45.0929985F));
                    builder.AddCubicBezier(new Vector2(17.6159992F, 45.2610016F), new Vector2(17.9379997F, 45.4150009F), new Vector2(18.2740002F, 45.5690002F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - - Layer aggregator
            // - - - - -  Scale:0.7,0.7, Offset:<960, 540>
            // - - - - Transforms: Head Controler
            // - - - Transforms: Head
            // - - Transforms: left Sing Offset:<116.132996, -63.604>
            CanvasGeometry Geometry_31()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-0.657000005F, 51.8050003F));
                    builder.AddCubicBezier(new Vector2(-7.62799978F, 51.8050003F), new Vector2(-14.1960001F, 50.5040016F), new Vector2(-19.2749996F, 47.8610001F));
                    builder.AddCubicBezier(new Vector2(-20.6860008F, 47.1279984F), new Vector2(-21.7189999F, 45.8300018F), new Vector2(-22.1149998F, 44.2890015F));
                    builder.AddLine(new Vector2(-42.3930016F, -34.4529991F));
                    builder.AddCubicBezier(new Vector2(-43.875F, -40.2080002F), new Vector2(-41.382F, -46.019001F), new Vector2(-36.1889992F, -48.9109993F));
                    builder.AddCubicBezier(new Vector2(-30.9960003F, -51.8050003F), new Vector2(-24.7450008F, -50.8639984F), new Vector2(-20.6329994F, -46.5740013F));
                    builder.AddLine(new Vector2(42.0530014F, 18.7830009F));
                    builder.AddCubicBezier(new Vector2(43.3370018F, 20.1219997F), new Vector2(43.875F, 22.0090008F), new Vector2(43.4900017F, 23.8220005F));
                    builder.AddCubicBezier(new Vector2(41.4620018F, 33.3899994F), new Vector2(34.4990005F, 41.4199982F), new Vector2(23.8850002F, 46.4309998F));
                    builder.AddCubicBezier(new Vector2(16.3409996F, 49.993F), new Vector2(7.5630002F, 51.8050003F), new Vector2(-0.657000005F, 51.8050003F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    builder.BeginFigure(new Vector2(-11.9449997F, 38.8590012F));
                    builder.AddCubicBezier(new Vector2(-4.46099997F, 41.5629997F), new Vector2(8.30799961F, 41.3969994F), new Vector2(19.1000004F, 36.2999992F));
                    builder.AddCubicBezier(new Vector2(23.6830006F, 34.137001F), new Vector2(29.3050003F, 30.3500004F), new Vector2(31.7220001F, 24.1970005F));
                    builder.AddLine(new Vector2(-28.7189999F, -38.8199997F));
                    builder.AddCubicBezier(new Vector2(-29.3110008F, -39.4360008F), new Vector2(-29.9869995F, -39.5429993F), new Vector2(-30.7380009F, -39.1230011F));
                    builder.AddCubicBezier(new Vector2(-31.4869995F, -38.7060013F), new Vector2(-31.7579994F, -38.0760002F), new Vector2(-31.5450001F, -37.2449989F));
                    builder.AddLine(new Vector2(-11.9449997F, 38.8590012F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - - Layer aggregator
            // - - - - -  Scale:0.7,0.7, Offset:<960, 540>
            // - - - - Transforms: Head Controler
            // - - - Transforms: Head
            // - - Transforms: Right Sing Offset:<304.233, -63.603>
            // Path 1
            CanvasGeometry Geometry_32()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-38.4230003F, 21.3220005F));
                    builder.AddLine(new Vector2(24.2639999F, -44.0359993F));
                    builder.AddCubicBezier(new Vector2(29.4440002F, -49.4379997F), new Vector2(38.4230003F, -44.4360008F), new Vector2(36.5559998F, -37.1879997F));
                    builder.AddLine(new Vector2(16.2779999F, 41.5530014F));
                    builder.AddCubicBezier(new Vector2(1.11699998F, 49.4379997F), new Vector2(-33.7659988F, 43.2939987F), new Vector2(-38.4230003F, 21.3220005F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - - Layer aggregator
            // - - - - -  Scale:0.7,0.7, Offset:<960, 540>
            // - - - - Transforms: Head Controler
            // - - - Transforms: Head
            // - - Transforms: Right Sing Offset:<304.233, -63.603>
            // Path 1
            CanvasGeometry Geometry_33()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(37.3660011F, -33.2739983F));
                    builder.AddLine(new Vector2(37.0719986F, -32.1399994F));
                    builder.AddCubicBezier(new Vector2(36.4560013F, -31.7900009F), new Vector2(35.882F, -31.3409996F), new Vector2(35.3349991F, -30.7810001F));
                    builder.AddLine(new Vector2(-27.3479996F, 34.5760002F));
                    builder.AddCubicBezier(new Vector2(-26.7320004F, 37.4469986F), new Vector2(-25.6110001F, 40.0519981F), new Vector2(-24.0709991F, 42.3909988F));
                    builder.AddCubicBezier(new Vector2(-30.8209991F, 38.512001F), new Vector2(-36.0159988F, 32.8110008F), new Vector2(-37.612999F, 25.2350006F));
                    builder.AddLine(new Vector2(25.0699997F, -40.1220016F));
                    builder.AddCubicBezier(new Vector2(30.2520008F, -45.5139999F), new Vector2(39.2280006F, -40.5139999F), new Vector2(37.3660011F, -33.2739983F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - - Layer aggregator
            // - - - - -  Scale:0.7,0.7, Offset:<960, 540>
            // - - - - Transforms: Head Controler
            // - - - Transforms: Head
            // - - Transforms: Right Sing Offset:<304.233, -63.603>
            CanvasGeometry Geometry_34()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(0.657000005F, 51.8050003F));
                    builder.AddCubicBezier(new Vector2(-7.56400013F, 51.8050003F), new Vector2(-16.3409996F, 49.993F), new Vector2(-23.8850002F, 46.4300003F));
                    builder.AddCubicBezier(new Vector2(-34.4990005F, 41.4189987F), new Vector2(-41.4620018F, 33.3889999F), new Vector2(-43.4910011F, 23.8209991F));
                    builder.AddCubicBezier(new Vector2(-43.875F, 22.0079994F), new Vector2(-43.3370018F, 20.1219997F), new Vector2(-42.0530014F, 18.7830009F));
                    builder.AddLine(new Vector2(20.6329994F, -46.5760002F));
                    builder.AddCubicBezier(new Vector2(24.7450008F, -50.8650017F), new Vector2(30.9969997F, -51.8040009F), new Vector2(36.1889992F, -48.9109993F));
                    builder.AddCubicBezier(new Vector2(41.382F, -46.019001F), new Vector2(43.875F, -40.2089996F), new Vector2(42.3930016F, -34.4529991F));
                    builder.AddLine(new Vector2(22.1149998F, 44.2890015F));
                    builder.AddCubicBezier(new Vector2(21.7180004F, 45.8300018F), new Vector2(20.6849995F, 47.1279984F), new Vector2(19.2740002F, 47.8619995F));
                    builder.AddCubicBezier(new Vector2(14.1969995F, 50.5040016F), new Vector2(7.62799978F, 51.8050003F), new Vector2(0.657000005F, 51.8050003F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    builder.BeginFigure(new Vector2(-31.7220001F, 24.1959991F));
                    builder.AddCubicBezier(new Vector2(-29.3050003F, 30.3490009F), new Vector2(-23.684F, 34.1360016F), new Vector2(-19.1009998F, 36.2999992F));
                    builder.AddCubicBezier(new Vector2(-8.30900002F, 41.3979988F), new Vector2(4.45599985F, 41.5620003F), new Vector2(11.9440002F, 38.8590012F));
                    builder.AddLine(new Vector2(31.5450001F, -37.2449989F));
                    builder.AddCubicBezier(new Vector2(31.757F, -38.0750008F), new Vector2(31.4860001F, -38.7060013F), new Vector2(30.7380009F, -39.1230011F));
                    builder.AddCubicBezier(new Vector2(29.9909992F, -39.5400009F), new Vector2(29.3129997F, -39.4379997F), new Vector2(28.7189999F, -38.8209991F));
                    builder.AddLine(new Vector2(-31.7220001F, 24.1959991F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - - - Layer aggregator
            // - - - - - -  Scale:0.7,0.7, Offset:<960, 540>
            // - - - - - Transforms: Head Controler
            // - - - - Transforms: Head
            // - - - Transforms: Mouth Outline
            // - - ShapeGroup: Group 1 Offset:<186.666, 99.112>
            // Path 1
            CanvasGeometry Geometry_35()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(88.060997F, 97.2890015F));
                    builder.AddCubicBezier(new Vector2(85.8539963F, 97.2890015F), new Vector2(83.848999F, 95.7890015F), new Vector2(83.3030014F, 93.5490036F));
                    builder.AddCubicBezier(new Vector2(82.6620026F, 90.9189987F), new Vector2(84.2720032F, 88.2669983F), new Vector2(86.9020004F, 87.625F));
                    builder.AddCubicBezier(new Vector2(128.742996F, 77.4140015F), new Vector2(157.179993F, 64.6019974F), new Vector2(166.201996F, 38.4119987F));
                    builder.AddCubicBezier(new Vector2(173.955994F, 15.8970003F), new Vector2(169.854996F, -15.2539997F), new Vector2(150.666F, -39.5740013F));
                    builder.AddCubicBezier(new Vector2(126.571999F, -70.1110001F), new Vector2(69.0270004F, -89.0579987F), new Vector2(0.42899999F, -89.0579987F));
                    builder.AddLine(new Vector2(-0.416999996F, -89.0579987F));
                    builder.AddCubicBezier(new Vector2(-69.0309982F, -89.0579987F), new Vector2(-126.57F, -70.1139984F), new Vector2(-150.666F, -39.5740013F));
                    builder.AddCubicBezier(new Vector2(-169.854004F, -15.2539997F), new Vector2(-176.151001F, 10.54F), new Vector2(-168.395996F, 33.0550003F));
                    builder.AddCubicBezier(new Vector2(-159.376007F, 59.2449989F), new Vector2(-132.492004F, 78.4850006F), new Vector2(-90.6520004F, 88.6959991F));
                    builder.AddCubicBezier(new Vector2(-88.0220032F, 89.3379974F), new Vector2(-86.4110031F, 91.9899979F), new Vector2(-87.0530014F, 94.6200027F));
                    builder.AddCubicBezier(new Vector2(-87.6930008F, 97.25F), new Vector2(-90.3470001F, 98.8619995F), new Vector2(-92.9769974F, 98.2190018F));
                    builder.AddCubicBezier(new Vector2(-150.134003F, 84.2699966F), new Vector2(-170.580002F, 56.8199997F), new Vector2(-177.664993F, 36.2470016F));
                    builder.AddCubicBezier(new Vector2(-186.416F, 10.842F), new Vector2(-179.378998F, -19.007F), new Vector2(-158.360992F, -45.6469994F));
                    builder.AddCubicBezier(new Vector2(-132.059998F, -78.9800034F), new Vector2(-73.0469971F, -98.8619995F), new Vector2(-0.444999993F, -98.8619995F));
                    builder.AddLine(new Vector2(0.456999987F, -98.8619995F));
                    builder.AddCubicBezier(new Vector2(73.0530014F, -98.8619995F), new Vector2(132.059006F, -78.9830017F), new Vector2(158.362F, -45.6469994F));
                    builder.AddCubicBezier(new Vector2(179.380005F, -19.007F), new Vector2(184.220001F, 16.1989994F), new Vector2(175.470001F, 41.6040001F));
                    builder.AddCubicBezier(new Vector2(168.384995F, 62.1769981F), new Vector2(146.384003F, 83.1989975F), new Vector2(89.2269974F, 97.1480026F));
                    builder.AddCubicBezier(new Vector2(88.8359985F, 97.2440033F), new Vector2(88.4459991F, 97.2890015F), new Vector2(88.060997F, 97.2890015F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - - - Layer aggregator
            // - - - - - -  Scale:0.7,0.7, Offset:<960, 540>
            // - - - - - Transforms: Head Controler
            // - - - - Transforms: Head
            // - - - Transforms: Left Eye Bro
            // - - ShapeGroup: Group 1 Offset:<31.095, 12.947>
            // Path 1
            CanvasGeometry Geometry_36()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-30.493F, 6.61999989F));
                    builder.AddCubicBezier(new Vector2(-27.6170006F, 1.22300005F), new Vector2(-23.2870007F, -3.46799994F), new Vector2(-17.882F, -6.99800014F));
                    builder.AddCubicBezier(new Vector2(-12.4840002F, -10.4890003F), new Vector2(-5.84000015F, -12.698F), new Vector2(1.05700004F, -12.6330004F));
                    builder.AddCubicBezier(new Vector2(7.93200016F, -12.6300001F), new Vector2(14.8920002F, -10.2089996F), new Vector2(20.0629997F, -5.95800018F));
                    builder.AddCubicBezier(new Vector2(25.2870007F, -1.76999998F), new Vector2(28.9239998F, 3.83200002F), new Vector2(30.5319996F, 9.82199955F));
                    builder.AddCubicBezier(new Vector2(30.8449993F, 10.9910002F), new Vector2(30.1520004F, 12.1929998F), new Vector2(28.9829998F, 12.507F));
                    builder.AddCubicBezier(new Vector2(28.2749996F, 12.698F), new Vector2(27.5550003F, 12.5170002F), new Vector2(27.0270004F, 12.0860004F));
                    builder.AddLine(new Vector2(26.9580002F, 12.0299997F));
                    builder.AddCubicBezier(new Vector2(22.5310001F, 8.36800003F), new Vector2(18.3990002F, 5.28100014F), new Vector2(14.0769997F, 3.19300008F));
                    builder.AddCubicBezier(new Vector2(9.77799988F, 1.07799995F), new Vector2(5.37900019F, 0.0450000018F), new Vector2(0.865999997F, -0.0579999983F));
                    builder.AddCubicBezier(new Vector2(-3.648F, -0.151999995F), new Vector2(-8.30799961F, 0.757000029F), new Vector2(-13.0059996F, 2.49099994F));
                    builder.AddCubicBezier(new Vector2(-17.7369995F, 4.18599987F), new Vector2(-22.4020004F, 6.7249999F), new Vector2(-27.4449997F, 9.51299953F));
                    builder.AddLine(new Vector2(-27.5149994F, 9.55200005F));
                    builder.AddCubicBezier(new Vector2(-28.5690002F, 10.1339998F), new Vector2(-29.8939991F, 9.7510004F), new Vector2(-30.4759998F, 8.69799995F));
                    builder.AddCubicBezier(new Vector2(-30.8449993F, 8.03299999F), new Vector2(-30.8199997F, 7.24599981F), new Vector2(-30.493F, 6.61999989F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - - - Layer aggregator
            // - - - - - -  Scale:0.7,0.7, Offset:<960, 540>
            // - - - - - Transforms: Head Controler
            // - - - - Transforms: Head
            // - - - Transforms: Roght Eye Bro
            // - - ShapeGroup: Group 1 Offset:<31.13, 13.023>
            // Path 1
            CanvasGeometry Geometry_37()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(27.2679996F, 9.43500042F));
                    builder.AddCubicBezier(new Vector2(22.2250004F, 6.64699984F), new Vector2(17.559F, 4.11000013F), new Vector2(12.8280001F, 2.41400003F));
                    builder.AddCubicBezier(new Vector2(8.13000011F, 0.680999994F), new Vector2(3.47099996F, -0.229000002F), new Vector2(-1.04299998F, -0.134000003F));
                    builder.AddCubicBezier(new Vector2(-5.55499983F, -0.0309999995F), new Vector2(-9.95699978F, 1.00100005F), new Vector2(-14.2550001F, 3.1170001F));
                    builder.AddCubicBezier(new Vector2(-18.5769997F, 5.20499992F), new Vector2(-22.7080002F, 8.28999996F), new Vector2(-27.1350002F, 11.9530001F));
                    builder.AddLine(new Vector2(-27.1940002F, 12.0019999F));
                    builder.AddCubicBezier(new Vector2(-28.1270008F, 12.7740002F), new Vector2(-29.5079994F, 12.6440001F), new Vector2(-30.2810001F, 11.7110004F));
                    builder.AddCubicBezier(new Vector2(-30.7479992F, 11.1459999F), new Vector2(-30.8799992F, 10.4040003F), new Vector2(-30.7089996F, 9.74499989F));
                    builder.AddCubicBezier(new Vector2(-29.1009998F, 3.75600004F), new Vector2(-25.4629993F, -1.847F), new Vector2(-20.2399998F, -6.03499985F));
                    builder.AddCubicBezier(new Vector2(-15.0690002F, -10.2860003F), new Vector2(-8.1079998F, -12.7049999F), new Vector2(-1.23399997F, -12.7089996F));
                    builder.AddCubicBezier(new Vector2(5.66400003F, -12.7729998F), new Vector2(12.3059998F, -10.5649996F), new Vector2(17.7040005F, -7.07399988F));
                    builder.AddCubicBezier(new Vector2(23.1100006F, -3.54500008F), new Vector2(27.4400005F, 1.14699996F), new Vector2(30.316F, 6.54400015F));
                    builder.AddCubicBezier(new Vector2(30.8810005F, 7.60599995F), new Vector2(30.4790001F, 8.92599964F), new Vector2(29.4169998F, 9.49100018F));
                    builder.AddCubicBezier(new Vector2(28.7469997F, 9.84899998F), new Vector2(27.9729996F, 9.81999969F), new Vector2(27.3519993F, 9.4829998F));
                    builder.AddLine(new Vector2(27.2679996F, 9.43500042F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - - - - Layer aggregator
            // - - - - - - -  Scale:0.7,0.7, Offset:<960, 540>
            // - - - - - - Transforms: Head Controler
            // - - - - - Transforms: Head
            // - - - - Transforms: Mouth Outline
            // - - - Transforms: Left Nose Hole
            // - - ShapeGroup: Group 1 Offset:<10.075, 12.19>
            // Path 1
            CanvasGeometry Geometry_38()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(7.38600016F, 3.20799994F));
                    builder.AddCubicBezier(new Vector2(4.94700003F, 8.82400036F), new Vector2(-0.338F, 11.9399996F), new Vector2(-4.41699982F, 10.1689997F));
                    builder.AddCubicBezier(new Vector2(-8.49600029F, 8.39700031F), new Vector2(-9.82499981F, 2.40799999F), new Vector2(-7.38500023F, -3.20799994F));
                    builder.AddCubicBezier(new Vector2(-4.9460001F, -8.82400036F), new Vector2(0.338F, -11.9399996F), new Vector2(4.41699982F, -10.1689997F));
                    builder.AddCubicBezier(new Vector2(8.49600029F, -8.39700031F), new Vector2(9.82499981F, -2.40799999F), new Vector2(7.38600016F, 3.20799994F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - - - - Layer aggregator
            // - - - - - - -  Scale:0.7,0.7, Offset:<960, 540>
            // - - - - - - Transforms: Head Controler
            // - - - - - Transforms: Head
            // - - - - Transforms: Mouth Outline
            // - - - Transforms: Right Nose Hole
            // - - ShapeGroup: Group 1 Offset:<10.075, 12.19>
            // Path 1
            CanvasGeometry Geometry_39()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-7.38600016F, 3.20799994F));
                    builder.AddCubicBezier(new Vector2(-4.94700003F, 8.82400036F), new Vector2(0.338999987F, 11.9399996F), new Vector2(4.41699982F, 10.1689997F));
                    builder.AddCubicBezier(new Vector2(8.49600029F, 8.39700031F), new Vector2(9.82499981F, 2.40799999F), new Vector2(7.38500023F, -3.20799994F));
                    builder.AddCubicBezier(new Vector2(4.9460001F, -8.82400036F), new Vector2(-0.338F, -11.9399996F), new Vector2(-4.41699982F, -10.1689997F));
                    builder.AddCubicBezier(new Vector2(-8.49600029F, -8.39700031F), new Vector2(-9.82499981F, -2.40799999F), new Vector2(-7.38600016F, 3.20799994F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Shape tree root for layer: Staw
            // - - -  Scale:0.7,0.7, Offset:<960, 540>
            // - - Transforms: Staw Scale:0.72,1.27, Offset:<0.75, 40.75>
            CanvasGeometry Geometry_40()
            {
                var result = Geometry_41().
                    CombineWith(Geometry_42(),
                    Matrix3x2.Identity,
                    CanvasGeometryCombine.Union);
                return result;
            }

            // Path 1
            CanvasGeometry Geometry_41()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(40.6380005F, 5.32899475F));
                    builder.AddLine(new Vector2(40.6380005F, 302.036987F));
                    builder.AddCubicBezier(new Vector2(34.5880013F, 299.588989F), new Vector2(28.8320007F, 296.324005F), new Vector2(23.5109997F, 292.384003F));
                    builder.AddCubicBezier(new Vector2(17.6009998F, 288.007996F), new Vector2(11.4390001F, 284.601013F), new Vector2(5.15200043F, 282.097992F));
                    builder.AddLine(new Vector2(5.15200043F, 6.47000122F));
                    builder.AddCubicBezier(new Vector2(16.8030014F, 7.80699158F), new Vector2(28.6220016F, 7.45399475F), new Vector2(40.6380005F, 5.32899475F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = _geometry_41 = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - Shape tree root for layer: Staw
            // - - - -  Scale:0.7,0.7, Offset:<960, 540>
            // - - - Transforms: Staw Scale:0.72,1.27, Offset:<0.75, 40.75>
            // Path 1
            CanvasGeometry Geometry_42()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(34.2509995F, 291.002014F));
                    builder.AddCubicBezier(new Vector2(36.3099976F, 292.528015F), new Vector2(38.4519997F, 293.942017F), new Vector2(40.637001F, 295.244995F));
                    builder.AddLine(new Vector2(40.637001F, 300.608002F));
                    builder.AddCubicBezier(new Vector2(34.586998F, 298.171997F), new Vector2(28.8309994F, 294.922974F), new Vector2(23.5099983F, 291.002014F));
                    builder.AddCubicBezier(new Vector2(17.5999985F, 286.646973F), new Vector2(11.4379988F, 283.257996F), new Vector2(5.14999962F, 280.764984F));
                    builder.AddLine(new Vector2(5.14999962F, 6.46398926F));
                    builder.AddCubicBezier(new Vector2(8.70799923F, 6.8710022F), new Vector2(12.2929993F, 7.1230011F), new Vector2(15.8919992F, 7.19299316F));
                    builder.AddLine(new Vector2(15.8919992F, 280.764984F));
                    builder.AddCubicBezier(new Vector2(22.1789989F, 283.257996F), new Vector2(28.3409996F, 286.646973F), new Vector2(34.2509995F, 291.002014F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_43()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(395.25F, 24.3479996F));
                    builder.AddCubicBezier(new Vector2(387.75F, 5.12699986F), new Vector2(391F, 2.17400002F), new Vector2(383.985992F, -1.88900006F));
                    builder.AddCubicBezier(new Vector2(378.213013F, -5.2329998F), new Vector2(361.783997F, -5.75F), new Vector2(355.75F, -5.75F));
                    builder.AddCubicBezier(new Vector2(352.378998F, -5.75F), new Vector2(338.423004F, -2.06100011F), new Vector2(333.501007F, -1.13999999F));
                    builder.AddCubicBezier(new Vector2(320F, 1.38699996F), new Vector2(319F, 24.5079994F), new Vector2(319F, 24.5079994F));
                    builder.AddLine(new Vector2(310.871002F, 69.1449966F));
                    builder.AddCubicBezier(new Vector2(310.871002F, 69.1449966F), new Vector2(292.440002F, 179.848007F), new Vector2(292.595001F, 197.548996F));
                    builder.AddCubicBezier(new Vector2(292.75F, 215.25F), new Vector2(332F, 241.5F), new Vector2(332F, 241.5F));
                    builder.AddCubicBezier(new Vector2(332F, 241.5F), new Vector2(330.25F, 266F), new Vector2(340.25F, 280F));
                    builder.AddCubicBezier(new Vector2(350.82901F, 294.809998F), new Vector2(380.25F, 296.25F), new Vector2(380.25F, 296.25F));
                    builder.AddCubicBezier(new Vector2(380.25F, 296.25F), new Vector2(371.5F, 230.25F), new Vector2(404.489014F, 250.5F));
                    builder.AddCubicBezier(new Vector2(405.638F, 203.604996F), new Vector2(406.272003F, 141.014008F), new Vector2(403.43399F, 93.9140015F));
                    builder.AddCubicBezier(new Vector2(401.492004F, 61.6829987F), new Vector2(395.182007F, 38.4770012F), new Vector2(395.25F, 24.3479996F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Shape tree root for layer: Staw 4
            // - - -  Scale:0.7,0.7, Offset:<960, 540>
            // - - Transforms: Staw 4 Scale:0.72,1.27, Offset:<0.75, 40.75>
            // Path 1
            CanvasGeometry Geometry_44()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(40.6380005F, 5.32899475F));
                    builder.AddLine(new Vector2(40.6380005F, 302.036987F));
                    builder.AddCubicBezier(new Vector2(34.5880013F, 299.588989F), new Vector2(28.8320007F, 296.324005F), new Vector2(23.5109997F, 292.384003F));
                    builder.AddCubicBezier(new Vector2(17.6009998F, 288.007996F), new Vector2(9.77200031F, 286.608002F), new Vector2(3.48500061F, 284.10498F));
                    builder.AddLine(new Vector2(5.15200043F, 6.47000122F));
                    builder.AddCubicBezier(new Vector2(16.8030014F, 7.80699158F), new Vector2(28.6220016F, 7.45399475F), new Vector2(40.6380005F, 5.32899475F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - - - - Layer aggregator
            // - - - - - - -  Scale:0.7,0.7, Offset:<960, 540>
            // - - - - - - Transforms: Head Controler
            // - - - - - Transforms: Head
            // - - - - Transforms: Mouth Outline
            // - - - Transforms: Left Cute
            // - - ShapeGroup: Group 1 Offset:<13.754, 14.727>
            // Path 1
            CanvasGeometry Geometry_45()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(12.9219999F, -11.9980001F));
                    builder.AddCubicBezier(new Vector2(13.5039997F, -8.71500015F), new Vector2(13.0959997F, -5.3499999F), new Vector2(12.0190001F, -2.13400006F));
                    builder.AddCubicBezier(new Vector2(10.9230003F, 1.074F), new Vector2(9.07900047F, 4.0999999F), new Vector2(6.72399998F, 6.58799982F));
                    builder.AddCubicBezier(new Vector2(4.38100004F, 9.09399986F), new Vector2(1.55900002F, 11.059F), new Vector2(-1.44000006F, 12.3839998F));
                    builder.AddCubicBezier(new Vector2(-4.4460001F, 13.7060003F), new Vector2(-7.6079998F, 14.4770002F), new Vector2(-10.9110003F, 14.3730001F));
                    builder.AddCubicBezier(new Vector2(-12.3640003F, 14.3269997F), new Vector2(-13.5039997F, 13.1120005F), new Vector2(-13.4580002F, 11.6590004F));
                    builder.AddCubicBezier(new Vector2(-13.4379997F, 11.0220003F), new Vector2(-13.1929998F, 10.4460001F), new Vector2(-12.802F, 10.0019999F));
                    builder.AddLine(new Vector2(-12.7419996F, 9.93400002F));
                    builder.AddCubicBezier(new Vector2(-10.6850004F, 7.60500002F), new Vector2(-8.62800026F, 5.79400015F), new Vector2(-6.72399998F, 4.01800013F));
                    builder.AddCubicBezier(new Vector2(-4.81699991F, 2.25F), new Vector2(-3.05100012F, 0.588F), new Vector2(-1.39199996F, -1.11399996F));
                    builder.AddCubicBezier(new Vector2(0.263999999F, -2.81999993F), new Vector2(1.79499996F, -4.59200001F), new Vector2(3.31999993F, -6.5630002F));
                    builder.AddCubicBezier(new Vector2(4.87599993F, -8.52099991F), new Vector2(6.36100006F, -10.6879997F), new Vector2(8.23999977F, -13.0600004F));
                    builder.AddLine(new Vector2(8.31799984F, -13.1590004F));
                    builder.AddCubicBezier(new Vector2(9.21000004F, -14.2860003F), new Vector2(10.8470001F, -14.4770002F), new Vector2(11.974F, -13.5839996F));
                    builder.AddCubicBezier(new Vector2(12.493F, -13.1730003F), new Vector2(12.8140001F, -12.6020002F), new Vector2(12.9219999F, -11.9980001F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - - - - Layer aggregator
            // - - - - - - -  Scale:0.7,0.7, Offset:<960, 540>
            // - - - - - - Transforms: Head Controler
            // - - - - - Transforms: Head
            // - - - - Transforms: Mouth Outline
            // - - - Transforms: Right Cute
            // - - ShapeGroup: Group 1 Offset:<13.883, 14.667>
            // Path 1
            CanvasGeometry Geometry_46()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-8.36800003F, -13.1199999F));
                    builder.AddCubicBezier(new Vector2(-6.48999977F, -10.7469997F), new Vector2(-5.00600004F, -8.57999992F), new Vector2(-3.44899988F, -6.62200022F));
                    builder.AddCubicBezier(new Vector2(-1.92400002F, -4.65100002F), new Vector2(-0.393000007F, -2.87899995F), new Vector2(1.26400006F, -1.17299998F));
                    builder.AddCubicBezier(new Vector2(2.92199993F, 0.528999984F), new Vector2(4.6880002F, 2.19000006F), new Vector2(6.59499979F, 3.95900011F));
                    builder.AddCubicBezier(new Vector2(8.49800014F, 5.73500013F), new Vector2(10.5559998F, 7.546F), new Vector2(12.6120005F, 9.875F));
                    builder.AddLine(new Vector2(12.6709995F, 9.94099998F));
                    builder.AddCubicBezier(new Vector2(13.6330004F, 11.0299997F), new Vector2(13.5299997F, 12.6929998F), new Vector2(12.4420004F, 13.6549997F));
                    builder.AddCubicBezier(new Vector2(11.9630003F, 14.0769997F), new Vector2(11.3730001F, 14.2939997F), new Vector2(10.7810001F, 14.3129997F));
                    builder.AddCubicBezier(new Vector2(7.48000002F, 14.4169998F), new Vector2(4.31699991F, 13.6459999F), new Vector2(1.31200004F, 12.3240004F));
                    builder.AddCubicBezier(new Vector2(-1.68700004F, 10.9989996F), new Vector2(-4.51000023F, 9.03499985F), new Vector2(-6.85200024F, 6.52799988F));
                    builder.AddCubicBezier(new Vector2(-9.20699978F, 4.04099989F), new Vector2(-11.0530005F, 1.01499999F), new Vector2(-12.1470003F, -2.19300008F));
                    builder.AddCubicBezier(new Vector2(-13.224F, -5.40999985F), new Vector2(-13.6330004F, -8.77400017F), new Vector2(-13.0509996F, -12.0579996F));
                    builder.AddCubicBezier(new Vector2(-12.8000002F, -13.4729996F), new Vector2(-11.4490004F, -14.4169998F), new Vector2(-10.033F, -14.1660004F));
                    builder.AddCubicBezier(new Vector2(-9.38199997F, -14.0500002F), new Vector2(-8.83100033F, -13.7030001F), new Vector2(-8.44900036F, -13.2229996F));
                    builder.AddLine(new Vector2(-8.36800003F, -13.1199999F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - - - - Layer aggregator
            // - - - - - - -  Scale:0.7,0.7, Offset:<960, 540>
            // - - - - - - Transforms: Head Controler
            // - - - - - Transforms: Head
            // - - - - Transforms: Mouth Outline
            // - - - Transforms: Smile
            // - - ShapeGroup: Group 1 Offset:<61.468, 12.387>
            // Path 1
            CanvasGeometry Geometry_47()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-0.658999979F, 12.1370001F));
                    builder.AddCubicBezier(new Vector2(-5.47900009F, 12.1370001F), new Vector2(-10.2779999F, 11.8660002F), new Vector2(-15.0410004F, 11.3210001F));
                    builder.AddCubicBezier(new Vector2(-29.1459999F, 9.72200012F), new Vector2(-43.3230019F, 5.69000006F), new Vector2(-57.1720009F, -0.663999975F));
                    builder.AddCubicBezier(new Vector2(-59.9850006F, -1.954F), new Vector2(-61.2179985F, -5.28000021F), new Vector2(-59.9280014F, -8.0909996F));
                    builder.AddCubicBezier(new Vector2(-58.6380005F, -10.901F), new Vector2(-55.3110008F, -12.1370001F), new Vector2(-52.5009995F, -10.8470001F));
                    builder.AddCubicBezier(new Vector2(-39.730999F, -4.98899984F), new Vector2(-26.7019997F, -1.27600002F), new Vector2(-13.7749996F, 0.188999996F));
                    builder.AddCubicBezier(new Vector2(-2.6170001F, 1.46500003F), new Vector2(8.78100014F, 1.097F), new Vector2(20.1089993F, -0.896000028F));
                    builder.AddCubicBezier(new Vector2(30.7749996F, -2.75399995F), new Vector2(41.7010002F, -6.11399984F), new Vector2(52.5979996F, -10.8870001F));
                    builder.AddCubicBezier(new Vector2(55.4290009F, -12.1300001F), new Vector2(58.7350006F, -10.8380003F), new Vector2(59.9760017F, -8.00300026F));
                    builder.AddCubicBezier(new Vector2(61.2179985F, -5.16900015F), new Vector2(59.9259987F, -1.86600006F), new Vector2(57.0919991F, -0.625F));
                    builder.AddCubicBezier(new Vector2(45.3740005F, 4.5079999F), new Vector2(33.5820007F, 8.12899971F), new Vector2(22.0410004F, 10.1400003F));
                    builder.AddCubicBezier(new Vector2(14.4860001F, 11.4689999F), new Vector2(6.8920002F, 12.1370001F), new Vector2(-0.658999979F, 12.1370001F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Layer aggregator
            // - - -  Scale:0.7,0.7, Offset:<960, 540>
            // - - Transforms: Layer 14 Outlines Offset:<-3.7229996, -6.256996>
            // Path 1
            CanvasGeometry Geometry_48()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-13.5459995F, 112.961998F));
                    builder.AddCubicBezier(new Vector2(-15.6800003F, 112.961998F), new Vector2(-17.7180004F, 111.735001F), new Vector2(-18.6529999F, 109.664001F));
                    builder.AddCubicBezier(new Vector2(-49.3839989F, 41.6100006F), new Vector2(-30.559F, -30.3640003F), new Vector2(38.8959999F, -110.375F));
                    builder.AddCubicBezier(new Vector2(40.9230003F, -112.709F), new Vector2(44.4589996F, -112.961998F), new Vector2(46.7989998F, -110.932999F));
                    builder.AddCubicBezier(new Vector2(49.1339989F, -108.903999F), new Vector2(49.3839989F, -105.365997F), new Vector2(47.355999F, -103.028999F));
                    builder.AddCubicBezier(new Vector2(-18.9349995F, -26.6650009F), new Vector2(-37.1870003F, 41.3989983F), new Vector2(-8.44400024F, 105.054001F));
                    builder.AddCubicBezier(new Vector2(-7.17000008F, 107.873001F), new Vector2(-8.42399979F, 111.191002F), new Vector2(-11.243F, 112.463997F));
                    builder.AddCubicBezier(new Vector2(-11.9919996F, 112.802002F), new Vector2(-12.7740002F, 112.961998F), new Vector2(-13.5459995F, 112.961998F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Layer aggregator
            // - - -  Scale:0.7,0.7, Offset:<960, 540>
            // - - Transforms: Layer 13 Outlines Offset:<380.332, -6.2549973>
            // Path 1
            CanvasGeometry Geometry_49()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(13.5459995F, 112.960999F));
                    builder.AddCubicBezier(new Vector2(12.7740002F, 112.960999F), new Vector2(11.9899998F, 112.801003F), new Vector2(11.2419996F, 112.462997F));
                    builder.AddCubicBezier(new Vector2(8.42300034F, 111.190002F), new Vector2(7.16900015F, 107.872002F), new Vector2(8.44299984F, 105.053001F));
                    builder.AddCubicBezier(new Vector2(37.1870003F, 41.3979988F), new Vector2(18.934F, -26.6660004F), new Vector2(-47.3569984F, -103.029999F));
                    builder.AddCubicBezier(new Vector2(-49.3849983F, -105.366997F), new Vector2(-49.1360016F, -108.904999F), new Vector2(-46.7999992F, -110.933998F));
                    builder.AddCubicBezier(new Vector2(-44.4609985F, -112.960999F), new Vector2(-40.9259987F, -112.709999F), new Vector2(-38.8959999F, -110.375999F));
                    builder.AddCubicBezier(new Vector2(30.5580006F, -30.3649998F), new Vector2(49.3839989F, 41.6090012F), new Vector2(18.6520004F, 109.663002F));
                    builder.AddCubicBezier(new Vector2(17.7169991F, 111.734001F), new Vector2(15.6789999F, 112.960999F), new Vector2(13.5459995F, 112.960999F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - Layer aggregator
            // - - - -  Scale:0.7,0.7, Offset:<960, 540>
            // - - - Transforms: Left Hand
            // - - ShapeGroup: Group 2 Offset:<94.803, 76.172>
            // Path 1
            CanvasGeometry Geometry_50()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(31.2369995F, 6.11899996F));
                    builder.AddLine(new Vector2(9.68299961F, 10.8120003F));
                    builder.AddLine(new Vector2(16.1679993F, 29.0879993F));
                    builder.AddCubicBezier(new Vector2(16.7700005F, 30.7670002F), new Vector2(15.5229998F, 32.5180016F), new Vector2(13.7449999F, 32.5180016F));
                    builder.AddLine(new Vector2(-15.9440002F, 32.5180016F));
                    builder.AddCubicBezier(new Vector2(-20.9580002F, 32.5180016F), new Vector2(-25.8999996F, 31.8320007F), new Vector2(-30.6609993F, 30.5160007F));
                    builder.AddCubicBezier(new Vector2(-33.5330009F, -20.4029999F), new Vector2(10.467F, -32.5180016F), new Vector2(10.467F, -32.5180016F));
                    builder.AddLine(new Vector2(24.8780003F, -16.4969997F));
                    builder.AddCubicBezier(new Vector2(27.7770004F, -13.2770004F), new Vector2(29.8630009F, -9.40999985F), new Vector2(30.9839993F, -5.22300005F));
                    builder.AddLine(new Vector2(33.1539993F, 2.98200011F));
                    builder.AddCubicBezier(new Vector2(33.5330009F, 4.3829999F), new Vector2(32.6520004F, 5.81099987F), new Vector2(31.2369995F, 6.11899996F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - Layer aggregator
            // - - - -  Scale:0.7,0.7, Offset:<960, 540>
            // - - - Transforms: Left Hand
            // - - ShapeGroup: Group 1 Offset:<66.97, 57.271>
            // Path 1
            CanvasGeometry Geometry_51()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-63.8380013F, 0.995000005F));
                    builder.AddCubicBezier(new Vector2(-57.1360016F, 2.65400004F), new Vector2(-52.1220016F, 6.25600004F), new Vector2(-47.2750015F, 10.0489998F));
                    builder.AddCubicBezier(new Vector2(-42.4210014F, 13.8339996F), new Vector2(-38.0139999F, 18.1329994F), new Vector2(-33.493F, 22.3010006F));
                    builder.AddCubicBezier(new Vector2(-31.2409992F, 24.3939991F), new Vector2(-28.9220009F, 26.4090004F), new Vector2(-26.6049995F, 28.4279995F));
                    builder.AddLine(new Vector2(-19.7299995F, 34.387001F));
                    builder.AddCubicBezier(new Vector2(-15.4879999F, 37.9189987F), new Vector2(-10.6479998F, 40.7319984F), new Vector2(-5.48000002F, 42.6679993F));
                    builder.AddCubicBezier(new Vector2(-0.316000015F, 44.6040001F), new Vector2(5.19299984F, 45.6720009F), new Vector2(10.7069998F, 45.8019981F));
                    builder.AddLine(new Vector2(29.0119991F, 45.8180008F));
                    builder.AddLine(new Vector2(38.2299995F, 45.8180008F));
                    builder.AddLine(new Vector2(40.5369987F, 45.8180008F));
                    builder.AddLine(new Vector2(41.4539986F, 45.8149986F));
                    builder.AddCubicBezier(new Vector2(41.0349998F, 45.8320007F), new Vector2(40.5629997F, 45.9550018F), new Vector2(40.1580009F, 46.1759987F));
                    builder.AddCubicBezier(new Vector2(39.3380013F, 46.612999F), new Vector2(38.7770004F, 47.3709984F), new Vector2(38.5999985F, 48.2970009F));
                    builder.AddCubicBezier(new Vector2(38.5110016F, 48.7540016F), new Vector2(38.5390015F, 49.2540016F), new Vector2(38.6549988F, 49.6629982F));
                    builder.AddCubicBezier(new Vector2(38.7719994F, 50.0289993F), new Vector2(38.6570015F, 49.6669998F), new Vector2(38.5979996F, 49.5159988F));
                    builder.AddLine(new Vector2(38.4049988F, 48.9710007F));
                    builder.AddLine(new Vector2(32.237999F, 31.5860004F));
                    builder.AddCubicBezier(new Vector2(31.2040005F, 28.6700001F), new Vector2(32.7290001F, 25.4689999F), new Vector2(35.644001F, 24.434F));
                    builder.AddCubicBezier(new Vector2(35.8600006F, 24.3570004F), new Vector2(36.1080017F, 24.2889996F), new Vector2(36.3260002F, 24.2399998F));
                    builder.AddLine(new Vector2(51.6889992F, 20.8950005F));
                    builder.AddLine(new Vector2(55.5299988F, 20.059F));
                    builder.AddLine(new Vector2(57.4490013F, 19.6420002F));
                    builder.AddLine(new Vector2(57.6889992F, 19.5890007F));
                    builder.AddLine(new Vector2(57.8089981F, 19.5629997F));
                    builder.AddLine(new Vector2(57.8689995F, 19.5510006F));
                    builder.AddLine(new Vector2(57.8160019F, 19.5599995F));
                    builder.AddCubicBezier(new Vector2(57.6310005F, 19.6049995F), new Vector2(57.4430008F, 19.6660004F), new Vector2(57.2639999F, 19.7509995F));
                    builder.AddCubicBezier(new Vector2(56.9029999F, 19.9169998F), new Vector2(56.5730019F, 20.1509991F), new Vector2(56.3059998F, 20.4349995F));
                    builder.AddCubicBezier(new Vector2(55.7719994F, 20.9969997F), new Vector2(55.4570007F, 21.7759991F), new Vector2(55.4720001F, 22.6019993F));
                    builder.AddCubicBezier(new Vector2(55.4749985F, 22.8029995F), new Vector2(55.5029984F, 23.0139999F), new Vector2(55.5379982F, 23.1900005F));
                    builder.AddLine(new Vector2(55.5760002F, 23.3269997F));
                    builder.AddLine(new Vector2(55.5460014F, 23.2150002F));
                    builder.AddLine(new Vector2(55.4830017F, 22.9780006F));
                    builder.AddLine(new Vector2(55.2299995F, 22.0259991F));
                    builder.AddLine(new Vector2(54.2249985F, 18.2240009F));
                    builder.AddLine(new Vector2(53.2490005F, 14.5719995F));
                    builder.AddCubicBezier(new Vector2(52.9539986F, 13.5710001F), new Vector2(52.5820007F, 12.592F), new Vector2(52.1500015F, 11.6420002F));
                    builder.AddCubicBezier(new Vector2(51.2789993F, 9.74600029F), new Vector2(50.1419983F, 7.97399998F), new Vector2(48.7700005F, 6.40799999F));
                    builder.AddLine(new Vector2(38.3170013F, -5.22100019F));
                    builder.AddLine(new Vector2(17.2819996F, -28.5939999F));
                    builder.AddCubicBezier(new Vector2(15.5209999F, -30.5349998F), new Vector2(13.7939997F, -32.507F), new Vector2(11.9910002F, -34.4090004F));
                    builder.AddCubicBezier(new Vector2(10.1800003F, -36.3050003F), new Vector2(8.22999954F, -38.0750008F), new Vector2(6.45200014F, -40F));
                    builder.AddCubicBezier(new Vector2(4.6789999F, -41.9300003F), new Vector2(3.07999992F, -44.0159988F), new Vector2(1.72300005F, -46.3190002F));
                    builder.AddCubicBezier(new Vector2(0.404000014F, -48.6590004F), new Vector2(-0.671999991F, -51.2179985F), new Vector2(-0.98299998F, -54.4640007F));
                    builder.AddCubicBezier(new Vector2(-1.10500002F, -55.7410011F), new Vector2(-0.167999998F, -56.875F), new Vector2(1.11000001F, -56.9970016F));
                    builder.AddCubicBezier(new Vector2(1.34099996F, -57.0200005F), new Vector2(1.57700002F, -57.0050011F), new Vector2(1.79299998F, -56.9620018F));
                    builder.AddCubicBezier(new Vector2(4.98899984F, -56.3139992F), new Vector2(7.42000008F, -54.9749985F), new Vector2(9.6079998F, -53.4189987F));
                    builder.AddCubicBezier(new Vector2(11.757F, -51.8269997F), new Vector2(13.665F, -50.019001F), new Vector2(15.3990002F, -48.0530014F));
                    builder.AddCubicBezier(new Vector2(17.1280003F, -46.0830002F), new Vector2(18.6830006F, -43.9599991F), new Vector2(20.3789997F, -41.9599991F));
                    builder.AddCubicBezier(new Vector2(22.0820007F, -39.9679985F), new Vector2(23.8610001F, -38.0429993F), new Vector2(25.6079998F, -36.0890007F));
                    builder.AddLine(new Vector2(46.6450005F, -12.7159996F));
                    builder.AddLine(new Vector2(57.2140007F, -0.95599997F));
                    builder.AddCubicBezier(new Vector2(59.2939987F, 1.42200005F), new Vector2(61.019001F, 4.1079998F), new Vector2(62.3339996F, 6.97399998F));
                    builder.AddCubicBezier(new Vector2(62.9889984F, 8.40799999F), new Vector2(63.5470009F, 9.88399982F), new Vector2(63.993F, 11.3959999F));
                    builder.AddLine(new Vector2(64.5479965F, 13.4390001F));
                    builder.AddLine(new Vector2(65.0510025F, 15.3389997F));
                    builder.AddLine(new Vector2(66.0559998F, 19.1369991F));
                    builder.AddLine(new Vector2(66.3059998F, 20.0860004F));
                    builder.AddLine(new Vector2(66.3690033F, 20.323F));
                    builder.AddLine(new Vector2(66.4899979F, 20.8239994F));
                    builder.AddCubicBezier(new Vector2(66.6009979F, 21.3190002F), new Vector2(66.663002F, 21.8600006F), new Vector2(66.6729965F, 22.3880005F));
                    builder.AddCubicBezier(new Vector2(66.7210007F, 24.5249996F), new Vector2(65.8899994F, 26.6130009F), new Vector2(64.4540024F, 28.125F));
                    builder.AddCubicBezier(new Vector2(63.737999F, 28.8850002F), new Vector2(62.8670006F, 29.5139999F), new Vector2(61.9080009F, 29.9470005F));
                    builder.AddCubicBezier(new Vector2(61.4280014F, 30.1620007F), new Vector2(60.9309998F, 30.3339996F), new Vector2(60.4259987F, 30.4540005F));
                    builder.AddLine(new Vector2(59.8339996F, 30.5890007F));
                    builder.AddLine(new Vector2(57.9129982F, 31.007F));
                    builder.AddLine(new Vector2(54.0719986F, 31.8419991F));
                    builder.AddLine(new Vector2(38.7089996F, 35.1860008F));
                    builder.AddLine(new Vector2(42.7960014F, 27.8400002F));
                    builder.AddLine(new Vector2(48.9589996F, 45.2109985F));
                    builder.AddLine(new Vector2(49.1520004F, 45.7529984F));
                    builder.AddCubicBezier(new Vector2(49.2200012F, 45.9640007F), new Vector2(49.243F, 45.9599991F), new Vector2(49.4589996F, 46.6980019F));
                    builder.AddCubicBezier(new Vector2(49.7779999F, 47.8470001F), new Vector2(49.8450012F, 49.1310005F), new Vector2(49.6160011F, 50.3440018F));
                    builder.AddCubicBezier(new Vector2(49.1660004F, 52.7830009F), new Vector2(47.605999F, 54.9020004F), new Vector2(45.4259987F, 56.0629997F));
                    builder.AddCubicBezier(new Vector2(44.3400002F, 56.644001F), new Vector2(43.1080017F, 56.9650002F), new Vector2(41.9210014F, 57.0089989F));
                    builder.AddLine(new Vector2(41.4000015F, 57.0209999F));
                    builder.AddLine(new Vector2(41.112999F, 57.0209999F));
                    builder.AddLine(new Vector2(40.5369987F, 57.0209999F));
                    builder.AddLine(new Vector2(38.2299995F, 57.0209999F));
                    builder.AddLine(new Vector2(29.0119991F, 57.0209999F));
                    builder.AddLine(new Vector2(10.4390001F, 57.0009995F));
                    builder.AddCubicBezier(new Vector2(3.66300011F, 56.8400002F), new Vector2(-3.06399989F, 55.5379982F), new Vector2(-9.4119997F, 53.1590004F));
                    builder.AddCubicBezier(new Vector2(-15.7550001F, 50.7830009F), new Vector2(-21.6930008F, 47.3320007F), new Vector2(-26.8969994F, 42.9990005F));
                    builder.AddLine(new Vector2(-33.9570007F, 36.8829994F));
                    builder.AddCubicBezier(new Vector2(-36.2779999F, 34.868F), new Vector2(-38.5950012F, 32.848999F), new Vector2(-40.9799995F, 30.9090004F));
                    builder.AddCubicBezier(new Vector2(-45.7360001F, 27.0109997F), new Vector2(-50.6030006F, 23.243F), new Vector2(-55.0250015F, 18.9610004F));
                    builder.AddCubicBezier(new Vector2(-59.4539986F, 14.6870003F), new Vector2(-63.7159996F, 10.2220001F), new Vector2(-66.2900009F, 3.81399989F));
                    builder.AddCubicBezier(new Vector2(-66.7210007F, 2.73900008F), new Vector2(-66.1989975F, 1.51699996F), new Vector2(-65.1240005F, 1.08599997F));
                    builder.AddCubicBezier(new Vector2(-64.6989975F, 0.915000021F), new Vector2(-64.2519989F, 0.89200002F), new Vector2(-63.8380013F, 0.995000005F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - Layer aggregator
            // - - - -  Scale:0.7,0.7, Offset:<960, 540>
            // - - - Transforms: Right Hand
            // - - ShapeGroup: Shape 1
            CanvasGeometry Geometry_52()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(122.459999F, -26.5230007F));
                    builder.AddLine(new Vector2(74.8239975F, -2.00300002F));
                    builder.AddLine(new Vector2(33.5110016F, 38.973999F));
                    builder.AddLine(new Vector2(8.60900021F, 78.1019974F));
                    builder.AddLine(new Vector2(37.2420006F, 79.461998F));
                    builder.AddCubicBezier(new Vector2(37.2420006F, 79.461998F), new Vector2(12.7379999F, 102.602997F), new Vector2(25.3360004F, 108.039001F));
                    builder.AddCubicBezier(new Vector2(37.9339981F, 113.474998F), new Vector2(54.2109985F, 99.9670029F), new Vector2(70.4459991F, 103.874001F));
                    builder.AddCubicBezier(new Vector2(86.6809998F, 107.780998F), new Vector2(124.491997F, 60.9799995F), new Vector2(124.491997F, 60.9799995F));
                    builder.AddLine(new Vector2(122.459999F, -26.5230007F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - Layer aggregator
            // - - - -  Scale:0.7,0.7, Offset:<960, 540>
            // - - - Transforms: Right Hand
            // - - ShapeGroup: Group 2 Offset:<39.137, 76.526>
            // Path 1
            CanvasGeometry Geometry_53()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-31.2360001F, 6.11899996F));
                    builder.AddLine(new Vector2(-9.68299961F, 10.8120003F));
                    builder.AddLine(new Vector2(-16.1679993F, 29.0879993F));
                    builder.AddCubicBezier(new Vector2(-16.7689991F, 30.7670002F), new Vector2(-15.5229998F, 32.5180016F), new Vector2(-13.7449999F, 32.5180016F));
                    builder.AddLine(new Vector2(15.9440002F, 32.5180016F));
                    builder.AddCubicBezier(new Vector2(20.9570007F, 32.5180016F), new Vector2(25.9020004F, 31.8320007F), new Vector2(30.6620007F, 30.5160007F));
                    builder.AddCubicBezier(new Vector2(33.5340004F, -20.4029999F), new Vector2(-10.467F, -32.5180016F), new Vector2(-10.467F, -32.5180016F));
                    builder.AddLine(new Vector2(-24.8789997F, -16.4969997F));
                    builder.AddCubicBezier(new Vector2(-27.7779999F, -13.2770004F), new Vector2(-29.8630009F, -9.40999985F), new Vector2(-30.9839993F, -5.22300005F));
                    builder.AddLine(new Vector2(-33.1539993F, 2.98200011F));
                    builder.AddCubicBezier(new Vector2(-33.5330009F, 4.3829999F), new Vector2(-32.6500015F, 5.81099987F), new Vector2(-31.2360001F, 6.11899996F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - Layer aggregator
            // - - - -  Scale:0.7,0.7, Offset:<960, 540>
            // - - - Transforms: Right Hand
            // - - ShapeGroup: Group 1 Offset:<66.788, 57.448>
            // Path 1
            CanvasGeometry Geometry_54()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(1.16400003F, -54.2869987F));
                    builder.AddCubicBezier(new Vector2(-0.347000003F, -48.5950012F), new Vector2(-3.25399995F, -44.1599998F), new Vector2(-6.48000002F, -40.012001F));
                    builder.AddCubicBezier(new Vector2(-9.68500042F, -35.8460007F), new Vector2(-13.2329998F, -31.9890003F), new Vector2(-16.8899994F, -28.2290001F));
                    builder.AddCubicBezier(new Vector2(-20.5580006F, -24.4790001F), new Vector2(-24.1410007F, -20.6520004F), new Vector2(-27.618F, -16.7310009F));
                    builder.AddLine(new Vector2(-38.1360016F, -5.04500008F));
                    builder.AddLine(new Vector2(-48.5880013F, 6.58400011F));
                    builder.AddCubicBezier(new Vector2(-49.9599991F, 8.14999962F), new Vector2(-51.0970001F, 9.92199993F), new Vector2(-51.9679985F, 11.8179998F));
                    builder.AddCubicBezier(new Vector2(-52.3989983F, 12.7679996F), new Vector2(-52.7729988F, 13.7469997F), new Vector2(-53.0660019F, 14.7480001F));
                    builder.AddLine(new Vector2(-54.0429993F, 18.4020004F));
                    builder.AddLine(new Vector2(-55.0489998F, 22.2040005F));
                    builder.AddLine(new Vector2(-55.3009987F, 23.1539993F));
                    builder.AddLine(new Vector2(-55.362999F, 23.3929996F));
                    builder.AddLine(new Vector2(-55.3930016F, 23.5049992F));
                    builder.AddLine(new Vector2(-55.3569984F, 23.368F));
                    builder.AddCubicBezier(new Vector2(-55.3219986F, 23.1919994F), new Vector2(-55.2919998F, 22.9790001F), new Vector2(-55.2900009F, 22.7779999F));
                    builder.AddCubicBezier(new Vector2(-55.2739983F, 21.9519997F), new Vector2(-55.5900002F, 21.1749992F), new Vector2(-56.1230011F, 20.6130009F));
                    builder.AddCubicBezier(new Vector2(-56.3909988F, 20.3290005F), new Vector2(-56.7210007F, 20.0939999F), new Vector2(-57.0810013F, 19.9279995F));
                    builder.AddCubicBezier(new Vector2(-57.2599983F, 19.8430004F), new Vector2(-57.4480019F, 19.7810001F), new Vector2(-57.6339989F, 19.7360001F));
                    builder.AddLine(new Vector2(-57.6889992F, 19.7269993F));
                    builder.AddLine(new Vector2(-57.6279984F, 19.7390003F));
                    builder.AddLine(new Vector2(-57.5079994F, 19.7649994F));
                    builder.AddLine(new Vector2(-57.269001F, 19.8169994F));
                    builder.AddLine(new Vector2(-55.3479996F, 20.2350006F));
                    builder.AddLine(new Vector2(-51.507F, 21.0709991F));
                    builder.AddLine(new Vector2(-36.144001F, 24.4160004F));
                    builder.AddCubicBezier(new Vector2(-33.1199989F, 25.073F), new Vector2(-31.2040005F, 28.0580006F), new Vector2(-31.8610001F, 31.0809994F));
                    builder.AddCubicBezier(new Vector2(-31.9099998F, 31.3040009F), new Vector2(-31.9820004F, 31.5529995F), new Vector2(-32.0559998F, 31.7639999F));
                    builder.AddLine(new Vector2(-38.223999F, 49.1479988F));
                    builder.AddLine(new Vector2(-38.4160004F, 49.6920013F));
                    builder.AddCubicBezier(new Vector2(-38.4749985F, 49.8429985F), new Vector2(-38.5909996F, 50.2060013F), new Vector2(-38.4729996F, 49.8400002F));
                    builder.AddCubicBezier(new Vector2(-38.3580017F, 49.4309998F), new Vector2(-38.3300018F, 48.9319992F), new Vector2(-38.4179993F, 48.4749985F));
                    builder.AddCubicBezier(new Vector2(-38.5960007F, 47.5489998F), new Vector2(-39.1570015F, 46.7910004F), new Vector2(-39.9760017F, 46.3540001F));
                    builder.AddCubicBezier(new Vector2(-40.382F, 46.1329994F), new Vector2(-40.8540001F, 46.0099983F), new Vector2(-41.2739983F, 45.993F));
                    builder.AddLine(new Vector2(-40.3549995F, 45.9939995F));
                    builder.AddLine(new Vector2(-38.0489998F, 45.9939995F));
                    builder.AddLine(new Vector2(-28.8290005F, 45.9939995F));
                    builder.AddLine(new Vector2(-10.5249996F, 45.9799995F));
                    builder.AddCubicBezier(new Vector2(-5.01100016F, 45.8499985F), new Vector2(0.499000013F, 44.7799988F), new Vector2(5.66099977F, 42.8440018F));
                    builder.AddCubicBezier(new Vector2(10.8299999F, 40.9080009F), new Vector2(15.6700001F, 38.0960007F), new Vector2(19.9120007F, 34.5639992F));
                    builder.AddLine(new Vector2(33.743F, 22.5550003F));
                    builder.AddCubicBezier(new Vector2(38.3470001F, 18.4820004F), new Vector2(43.1290016F, 14.6149998F), new Vector2(47.4500008F, 10.217F));
                    builder.AddCubicBezier(new Vector2(49.6389999F, 8.05099964F), new Vector2(52.0040016F, 6.08699989F), new Vector2(54.6430016F, 4.43900013F));
                    builder.AddCubicBezier(new Vector2(57.3040009F, 2.81599998F), new Vector2(60.2120018F, 1.47800004F), new Vector2(64.0199966F, 1.17299998F));
                    builder.AddCubicBezier(new Vector2(65.2990036F, 1.07099998F), new Vector2(66.4169998F, 2.023F), new Vector2(66.5179977F, 3.30100012F));
                    builder.AddCubicBezier(new Vector2(66.538002F, 3.53399992F), new Vector2(66.5179977F, 3.773F), new Vector2(66.4710007F, 3.99000001F));
                    builder.AddCubicBezier(new Vector2(65.6409988F, 7.71899986F), new Vector2(63.9119987F, 10.415F), new Vector2(61.9350014F, 12.8249998F));
                    builder.AddCubicBezier(new Vector2(59.9360008F, 15.21F), new Vector2(57.6640015F, 17.2779999F), new Vector2(55.2150002F, 19.1459999F));
                    builder.AddCubicBezier(new Vector2(50.2610016F, 22.8150005F), new Vector2(45.7669983F, 27.0139999F), new Vector2(41.0950012F, 31.0079994F));
                    builder.AddLine(new Vector2(27.0779991F, 43.1749992F));
                    builder.AddCubicBezier(new Vector2(21.8740005F, 47.5079994F), new Vector2(15.9359999F, 50.9589996F), new Vector2(9.59300041F, 53.3349991F));
                    builder.AddCubicBezier(new Vector2(3.24600005F, 55.7140007F), new Vector2(-3.48200011F, 57.0169983F), new Vector2(-10.257F, 57.1780014F));
                    builder.AddLine(new Vector2(-28.8290005F, 57.1969986F));
                    builder.AddLine(new Vector2(-38.0489998F, 57.1969986F));
                    builder.AddLine(new Vector2(-40.3549995F, 57.1969986F));
                    builder.AddLine(new Vector2(-40.9300003F, 57.1969986F));
                    builder.AddLine(new Vector2(-41.2190018F, 57.1969986F));
                    builder.AddLine(new Vector2(-41.737999F, 57.1870003F));
                    builder.AddCubicBezier(new Vector2(-42.9259987F, 57.1430016F), new Vector2(-44.1590004F, 56.8199997F), new Vector2(-45.2449989F, 56.2389984F));
                    builder.AddCubicBezier(new Vector2(-47.4249992F, 55.0779991F), new Vector2(-48.9840012F, 52.9599991F), new Vector2(-49.4339981F, 50.5209999F));
                    builder.AddCubicBezier(new Vector2(-49.6619987F, 49.3079987F), new Vector2(-49.5960007F, 48.0229988F), new Vector2(-49.276001F, 46.8740005F));
                    builder.AddCubicBezier(new Vector2(-49.0620003F, 46.1360016F), new Vector2(-49.0369987F, 46.1399994F), new Vector2(-48.9690018F, 45.9290009F));
                    builder.AddLine(new Vector2(-48.776001F, 45.387001F));
                    builder.AddLine(new Vector2(-42.6139984F, 28.0160007F));
                    builder.AddLine(new Vector2(-38.526001F, 35.3639984F));
                    builder.AddLine(new Vector2(-53.8899994F, 32.019001F));
                    builder.AddLine(new Vector2(-57.730999F, 31.1830006F));
                    builder.AddLine(new Vector2(-59.651001F, 30.7649994F));
                    builder.AddLine(new Vector2(-60.2439995F, 30.6310005F));
                    builder.AddCubicBezier(new Vector2(-60.7490005F, 30.5109997F), new Vector2(-61.2459984F, 30.3379993F), new Vector2(-61.7260017F, 30.1229992F));
                    builder.AddCubicBezier(new Vector2(-62.6850014F, 29.6900005F), new Vector2(-63.5550003F, 29.0629997F), new Vector2(-64.2720032F, 28.3029995F));
                    builder.AddCubicBezier(new Vector2(-65.7070007F, 26.7910004F), new Vector2(-66.538002F, 24.7010002F), new Vector2(-66.4909973F, 22.5639992F));
                    builder.AddCubicBezier(new Vector2(-66.4820023F, 22.0359993F), new Vector2(-66.4199982F, 21.4969997F), new Vector2(-66.3079987F, 21.0020008F));
                    builder.AddLine(new Vector2(-66.1869965F, 20.4990005F));
                    builder.AddLine(new Vector2(-66.125F, 20.2619991F));
                    builder.AddLine(new Vector2(-65.8730011F, 19.3129997F));
                    builder.AddLine(new Vector2(-64.8690033F, 15.5150003F));
                    builder.AddLine(new Vector2(-64.3669968F, 13.6169996F));
                    builder.AddLine(new Vector2(-63.8110008F, 11.5740004F));
                    builder.AddCubicBezier(new Vector2(-63.3650017F, 10.0620003F), new Vector2(-62.8059998F, 8.58399963F), new Vector2(-62.151001F, 7.1500001F));
                    builder.AddCubicBezier(new Vector2(-60.8370018F, 4.28399992F), new Vector2(-59.1119995F, 1.60000002F), new Vector2(-57.0320015F, -0.777999997F));
                    builder.AddLine(new Vector2(-46.4640007F, -12.5380001F));
                    builder.AddLine(new Vector2(-35.9459991F, -24.2259998F));
                    builder.AddCubicBezier(new Vector2(-32.4109993F, -28.0960007F), new Vector2(-28.9810009F, -32.0589981F), new Vector2(-25.6359997F, -36.0999985F));
                    builder.AddCubicBezier(new Vector2(-22.2789993F, -40.1310005F), new Vector2(-18.8150005F, -44.0629997F), new Vector2(-15.007F, -47.6870003F));
                    builder.AddCubicBezier(new Vector2(-11.2200003F, -51.3300018F), new Vector2(-7.11399984F, -54.6870003F), new Vector2(-1.61099994F, -56.7849998F));
                    builder.AddCubicBezier(new Vector2(-0.528999984F, -57.1980019F), new Vector2(0.684000015F, -56.6539993F), new Vector2(1.097F, -55.5719986F));
                    builder.AddCubicBezier(new Vector2(1.25999999F, -55.144001F), new Vector2(1.273F, -54.6980019F), new Vector2(1.16400003F, -54.2869987F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - Layer aggregator
            // - - - -  Scale:0.7,0.7, Offset:<960, 540>
            // - - - Transforms: Left Leg
            // - - ShapeGroup: Group 4 Offset:<90.44, 80.253>
            // Path 1
            CanvasGeometry Geometry_55()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(38.4560013F, 55.512001F));
                    builder.AddCubicBezier(new Vector2(-1.53999996F, 74.4319992F), new Vector2(-52.3190002F, 47.894001F), new Vector2(-72.7509995F, 7.42199993F));
                    builder.AddCubicBezier(new Vector2(-81.6159973F, -10.1389999F), new Vector2(-84.7669983F, -30.3339996F), new Vector2(-78.8290024F, -50.5690002F));
                    builder.AddLine(new Vector2(-61.7019997F, -50.5690002F));
                    builder.AddLine(new Vector2(-61.7019997F, -72.276001F));
                    builder.AddCubicBezier(new Vector2(-45.2750015F, -74.4319992F), new Vector2(-27.9659996F, -71.3239975F), new Vector2(-11.7770004F, -64.6719971F));
                    builder.AddLine(new Vector2(-11.7639999F, -64.6579971F));
                    builder.AddCubicBezier(new Vector2(42.7960014F, -42.2649994F), new Vector2(84.7679977F, 20.1800003F), new Vector2(38.4560013F, 55.512001F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - Layer aggregator
            // - - - -  Scale:0.7,0.7, Offset:<960, 540>
            // - - - Transforms: Left Leg
            // - - ShapeGroup: Group 3 Offset:<78.676, 85.838>
            // Path 1
            CanvasGeometry Geometry_56()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(50.2190018F, 49.9269981F));
                    builder.AddCubicBezier(new Vector2(10.2229996F, 68.8470001F), new Vector2(-40.5559998F, 42.3089981F), new Vector2(-60.987999F, 1.83700001F));
                    builder.AddCubicBezier(new Vector2(-69.8529968F, -15.724F), new Vector2(-73.0039978F, -35.9189987F), new Vector2(-67.0660019F, -56.1539993F));
                    builder.AddLine(new Vector2(-60.5680008F, -56.1539993F));
                    builder.AddCubicBezier(new Vector2(-59.3359985F, -46.7290001F), new Vector2(-56.3950005F, -37.6399994F), new Vector2(-52.1100006F, -29.1539993F));
                    builder.AddCubicBezier(new Vector2(-31.677F, 11.3179998F), new Vector2(19.1019993F, 37.855999F), new Vector2(59.0979996F, 18.9360008F));
                    builder.AddCubicBezier(new Vector2(63.4669991F, 15.6029997F), new Vector2(67.052002F, 12.0319996F), new Vector2(69.9229965F, 8.26500034F));
                    builder.AddCubicBezier(new Vector2(71.2249985F, 23.5009995F), new Vector2(65.5820007F, 38.2060013F), new Vector2(50.2190018F, 49.9269981F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - Layer aggregator
            // - - - -  Scale:0.7,0.7, Offset:<960, 540>
            // - - - Transforms: Left Leg
            // - - ShapeGroup: Group 2 Offset:<46.326, 51.621>
            // Path 1
            CanvasGeometry Geometry_57()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(41.0110016F, -35.0009995F));
                    builder.AddCubicBezier(new Vector2(2.76099992F, -37.2039986F), new Vector2(-27.4960003F, 12.5629997F), new Vector2(-27.4960003F, 45.9819984F));
                    builder.AddLine(new Vector2(-27.5109997F, 45.9819984F));
                    builder.AddCubicBezier(new Vector2(-37.4710007F, 26.2520008F), new Vector2(-41.0110016F, 3.56299996F), new Vector2(-34.3400002F, -19.1730003F));
                    builder.AddLine(new Vector2(-15.0970001F, -19.1730003F));
                    builder.AddLine(new Vector2(-15.0970001F, -43.5610008F));
                    builder.AddCubicBezier(new Vector2(3.35899997F, -45.9830017F), new Vector2(22.8059998F, -42.4889984F), new Vector2(40.9949989F, -35.0159988F));
                    builder.AddLine(new Vector2(41.0110016F, -35.0009995F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - Layer aggregator
            // - - - -  Scale:0.7,0.7, Offset:<960, 540>
            // - - - Transforms: Left Leg
            // - - ShapeGroup: Group 1 Offset:<78.357, 74.44>
            CanvasGeometry Geometry_58()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(22.2140007F, 73.1750031F));
                    builder.AddCubicBezier(new Vector2(10.1289997F, 73.1750031F), new Vector2(-2.40700006F, 70.3239975F), new Vector2(-14.7460003F, 64.6399994F));
                    builder.AddCubicBezier(new Vector2(-36.480999F, 54.6269989F), new Vector2(-55.0419998F, 36.8100014F), new Vector2(-65.6699982F, 15.7600002F));
                    builder.AddCubicBezier(new Vector2(-75.8759995F, -4.46099997F), new Vector2(-78.1070023F, -25.9319992F), new Vector2(-72.1230011F, -46.3320007F));
                    builder.AddCubicBezier(new Vector2(-71.4209976F, -48.7190018F), new Vector2(-69.2330017F, -50.3580017F), new Vector2(-66.7470016F, -50.3580017F));
                    builder.AddLine(new Vector2(-55.2210007F, -50.3580017F));
                    builder.AddLine(new Vector2(-55.2210007F, -66.461998F));
                    builder.AddCubicBezier(new Vector2(-55.2210007F, -69.2740021F), new Vector2(-53.1380005F, -71.651001F), new Vector2(-50.348999F, -72.0169983F));
                    builder.AddCubicBezier(new Vector2(-33.8089981F, -74.1900024F), new Vector2(-15.5500002F, -71.4290009F), new Vector2(2.43400002F, -64.0390015F));
                    builder.AddCubicBezier(new Vector2(2.51999998F, -64.0049973F), new Vector2(2.60400009F, -63.9669991F), new Vector2(2.68700004F, -63.9290009F));
                    builder.AddCubicBezier(new Vector2(40.8440018F, -48.1800003F), new Vector2(71.4629974F, -14.3640003F), new Vector2(75.5410004F, 16.5610008F));
                    builder.AddCubicBezier(new Vector2(78.1080017F, 36.019001F), new Vector2(70.6350021F, 53.0379982F), new Vector2(53.9350014F, 65.7789993F));
                    builder.AddCubicBezier(new Vector2(53.6230011F, 66.0169983F), new Vector2(53.2879982F, 66.2210007F), new Vector2(52.9339981F, 66.3889999F));
                    builder.AddCubicBezier(new Vector2(43.3619995F, 70.9169998F), new Vector2(32.9679985F, 73.1750031F), new Vector2(22.2140007F, 73.1750031F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    builder.BeginFigure(new Vector2(-62.4239998F, -39.1539993F));
                    builder.AddCubicBezier(new Vector2(-66.2030029F, -22.7380009F), new Vector2(-63.8959999F, -5.58599997F), new Vector2(-55.6689987F, 10.71F));
                    builder.AddCubicBezier(new Vector2(-37.5079994F, 46.6819992F), new Vector2(9.26200008F, 74.1900024F), new Vector2(47.6069984F, 56.512001F));
                    builder.AddCubicBezier(new Vector2(60.7879982F, 46.257F), new Vector2(66.4509964F, 33.3120003F), new Vector2(64.4349976F, 18.0270004F));
                    builder.AddCubicBezier(new Vector2(60.8380013F, -9.23600006F), new Vector2(32.9790001F, -39.3860016F), new Vector2(-1.80700004F, -53.6619987F));
                    builder.AddCubicBezier(new Vector2(-1.89100003F, -53.6959991F), new Vector2(-1.97300005F, -53.7340012F), new Vector2(-2.05500007F, -53.7719994F));
                    builder.AddCubicBezier(new Vector2(-16.3799992F, -59.6230011F), new Vector2(-30.7740002F, -62.2120018F), new Vector2(-44.0180016F, -61.3810005F));
                    builder.AddLine(new Vector2(-44.0180016F, -44.7560005F));
                    builder.AddCubicBezier(new Vector2(-44.0180016F, -41.6619987F), new Vector2(-46.526001F, -39.1539993F), new Vector2(-49.6199989F, -39.1539993F));
                    builder.AddLine(new Vector2(-62.4239998F, -39.1539993F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    builder.BeginFigure(new Vector2(50.5379982F, 61.3250008F));
                    builder.AddLine(new Vector2(50.5499992F, 61.3250008F));
                    builder.AddLine(new Vector2(50.5379982F, 61.3250008F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - Layer aggregator
            // - - - -  Scale:0.7,0.7, Offset:<960, 540>
            // - - - Transforms: Right Leg
            // - - ShapeGroup: Group 4 Offset:<85.018, 80.249>
            // Path 1
            CanvasGeometry Geometry_59()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-38.4560013F, 55.512001F));
                    builder.AddCubicBezier(new Vector2(1.53999996F, 74.4319992F), new Vector2(52.3190002F, 47.894001F), new Vector2(72.7519989F, 7.42199993F));
                    builder.AddCubicBezier(new Vector2(81.6159973F, -10.1389999F), new Vector2(84.7679977F, -30.3339996F), new Vector2(78.8290024F, -50.5690002F));
                    builder.AddLine(new Vector2(61.7019997F, -50.5690002F));
                    builder.AddLine(new Vector2(61.7019997F, -72.276001F));
                    builder.AddCubicBezier(new Vector2(45.2750015F, -74.4319992F), new Vector2(27.9659996F, -71.3239975F), new Vector2(11.7770004F, -64.6719971F));
                    builder.AddLine(new Vector2(11.7639999F, -64.6579971F));
                    builder.AddCubicBezier(new Vector2(-42.7970009F, -42.2649994F), new Vector2(-84.7679977F, 20.1800003F), new Vector2(-38.4560013F, 55.512001F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - Layer aggregator
            // - - - -  Scale:0.7,0.7, Offset:<960, 540>
            // - - - Transforms: Right Leg
            // - - ShapeGroup: Group 3 Offset:<96.787, 85.834>
            // Path 1
            CanvasGeometry Geometry_60()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(60.9790001F, 1.83700001F));
                    builder.AddCubicBezier(new Vector2(40.5470009F, 42.3089981F), new Vector2(-10.2320004F, 68.8470001F), new Vector2(-50.2280006F, 49.9269981F));
                    builder.AddCubicBezier(new Vector2(-63.9379997F, 39.4659996F), new Vector2(-69.9169998F, 26.6240005F), new Vector2(-70.0999985F, 13.1520004F));
                    builder.AddCubicBezier(new Vector2(-68.1529999F, 15.1540003F), new Vector2(-65.9680023F, 17.0869999F), new Vector2(-63.5320015F, 18.9360008F));
                    builder.AddCubicBezier(new Vector2(-23.5359993F, 37.855999F), new Vector2(27.2439995F, 11.3170004F), new Vector2(47.6749992F, -29.1539993F));
                    builder.AddCubicBezier(new Vector2(51.9599991F, -37.6409988F), new Vector2(54.9020004F, -46.7290001F), new Vector2(56.1339989F, -56.1539993F));
                    builder.AddLine(new Vector2(67.0569992F, -56.1539993F));
                    builder.AddCubicBezier(new Vector2(72.9950027F, -35.9189987F), new Vector2(69.8440018F, -15.7250004F), new Vector2(60.9790001F, 1.83700001F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - Layer aggregator
            // - - - -  Scale:0.7,0.7, Offset:<960, 540>
            // - - - Transforms: Right Leg
            // - - ShapeGroup: Group 2 Offset:<130.047, 51.264>
            // Path 1
            CanvasGeometry Geometry_61()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-37.4659996F, -31.9750004F));
                    builder.AddCubicBezier(new Vector2(-2.523F, -33.987999F), new Vector2(25.118F, 11.4779997F), new Vector2(25.118F, 42.0079994F));
                    builder.AddLine(new Vector2(25.1329994F, 42.0079994F));
                    builder.AddCubicBezier(new Vector2(34.230999F, 23.9829998F), new Vector2(37.4659996F, 3.25600004F), new Vector2(31.3710003F, -17.5139999F));
                    builder.AddLine(new Vector2(13.7919998F, -17.5139999F));
                    builder.AddLine(new Vector2(13.7919998F, -39.7939987F));
                    builder.AddCubicBezier(new Vector2(-3.06999993F, -42.0079994F), new Vector2(-20.8349991F, -38.8170013F), new Vector2(-37.4519997F, -31.9899998F));
                    builder.AddLine(new Vector2(-37.4659996F, -31.9750004F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - Layer aggregator
            // - - - -  Scale:0.7,0.7, Offset:<960, 540>
            // - - - Transforms: Right Leg
            // - - ShapeGroup: Group 1 Offset:<97.101, 74.439>
            CanvasGeometry Geometry_62()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-22.2129993F, 73.1709976F));
                    builder.AddCubicBezier(new Vector2(-32.9690018F, 73.1709976F), new Vector2(-43.362999F, 70.913002F), new Vector2(-52.9350014F, 66.3860016F));
                    builder.AddCubicBezier(new Vector2(-53.2900009F, 66.2170029F), new Vector2(-53.625F, 66.0139999F), new Vector2(-53.9370003F, 65.776001F));
                    builder.AddCubicBezier(new Vector2(-70.637001F, 53.0340004F), new Vector2(-78.1080017F, 36.0159988F), new Vector2(-75.5429993F, 16.5599995F));
                    builder.AddCubicBezier(new Vector2(-71.4639969F, -14.368F), new Vector2(-40.8370018F, -48.1850014F), new Vector2(-2.68099999F, -63.9329987F));
                    builder.AddCubicBezier(new Vector2(-2.59899998F, -63.9720001F), new Vector2(-2.51699996F, -64.0090027F), new Vector2(-2.43499994F, -64.0429993F));
                    builder.AddCubicBezier(new Vector2(15.5509996F, -71.4339981F), new Vector2(33.8089981F, -74.189003F), new Vector2(50.3470001F, -72.0199966F));
                    builder.AddCubicBezier(new Vector2(53.1360016F, -71.6539993F), new Vector2(55.2210007F, -69.2770004F), new Vector2(55.2210007F, -66.4660034F));
                    builder.AddLine(new Vector2(55.2210007F, -50.3610001F));
                    builder.AddLine(new Vector2(66.7460022F, -50.3610001F));
                    builder.AddCubicBezier(new Vector2(69.2330017F, -50.3610001F), new Vector2(71.4209976F, -48.7220001F), new Vector2(72.1210022F, -46.3380013F));
                    builder.AddCubicBezier(new Vector2(78.1080017F, -25.9349995F), new Vector2(75.8769989F, -4.46500015F), new Vector2(65.6689987F, 15.7559996F));
                    builder.AddCubicBezier(new Vector2(55.0429993F, 36.8069992F), new Vector2(36.4819984F, 54.6230011F), new Vector2(14.7460003F, 64.637001F));
                    builder.AddCubicBezier(new Vector2(2.41000009F, 70.3209991F), new Vector2(-10.1309996F, 73.1709976F), new Vector2(-22.2129993F, 73.1709976F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    builder.BeginFigure(new Vector2(-47.6090012F, 56.5079994F));
                    builder.AddCubicBezier(new Vector2(-9.25800037F, 74.189003F), new Vector2(37.507F, 46.6819992F), new Vector2(55.6669998F, 10.7060003F));
                    builder.AddCubicBezier(new Vector2(63.8950005F, -5.59000015F), new Vector2(66.2040024F, -22.7409992F), new Vector2(62.4239998F, -39.1580009F));
                    builder.AddLine(new Vector2(49.6189995F, -39.1580009F));
                    builder.AddCubicBezier(new Vector2(46.5250015F, -39.1580009F), new Vector2(44.0180016F, -41.6660004F), new Vector2(44.0180016F, -44.7599983F));
                    builder.AddLine(new Vector2(44.0180016F, -61.3849983F));
                    builder.AddCubicBezier(new Vector2(30.7789993F, -62.2200012F), new Vector2(16.3780003F, -59.6269989F), new Vector2(2.04900002F, -53.7719994F));
                    builder.AddCubicBezier(new Vector2(1.96899998F, -53.7350006F), new Vector2(1.88699996F, -53.7000008F), new Vector2(1.80599999F, -53.6660004F));
                    builder.AddCubicBezier(new Vector2(-32.980999F, -39.3889999F), new Vector2(-60.8400002F, -9.23799992F), new Vector2(-64.4349976F, 18.0249996F));
                    builder.AddCubicBezier(new Vector2(-66.4509964F, 33.3089981F), new Vector2(-60.7910004F, 46.2529984F), new Vector2(-47.6090012F, 56.5079994F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_63()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-69.75F, 284.25F));
                    builder.AddCubicBezier(new Vector2(-110.25F, 284F), new Vector2(-108.767998F, 288.317993F), new Vector2(-158.496002F, 291.556F));
                    builder.AddCubicBezier(new Vector2(-181.268997F, 293.039001F), new Vector2(-226.5F, 278.786011F), new Vector2(-256.003998F, 278.786011F));
                    builder.AddCubicBezier(new Vector2(-283.821014F, 278.786011F), new Vector2(-327.5F, 282.5F), new Vector2(-327.5F, 282.5F));
                    builder.AddCubicBezier(new Vector2(-327.5F, 282.5F), new Vector2(-324F, 750F), new Vector2(-324F, 750F));
                    builder.AddCubicBezier(new Vector2(-324F, 750F), new Vector2(575.5F, 752.5F), new Vector2(575.5F, 752.5F));
                    builder.AddCubicBezier(new Vector2(575.5F, 752.5F), new Vector2(574.25F, 312.5F), new Vector2(574.25F, 284.5F));
                    builder.AddCubicBezier(new Vector2(572.736023F, 285.471008F), new Vector2(536.109009F, 311.582001F), new Vector2(491.252014F, 308.477997F));
                    builder.AddCubicBezier(new Vector2(452.082001F, 305.766998F), new Vector2(438.5F, 282.278015F), new Vector2(394.117004F, 282.278015F));
                    builder.AddCubicBezier(new Vector2(361.5F, 282.278015F), new Vector2(328.75F, 313.505005F), new Vector2(280.570007F, 309.213989F));
                    builder.AddCubicBezier(new Vector2(231.324005F, 304.828003F), new Vector2(207.367004F, 296.576996F), new Vector2(171.029999F, 296.576996F));
                    builder.AddCubicBezier(new Vector2(128.533997F, 296.576996F), new Vector2(78.314003F, 308.5F), new Vector2(49.5F, 308.5F));
                    builder.AddCubicBezier(new Vector2(-1.51499999F, 308.5F), new Vector2(-4.25099993F, 284.653992F), new Vector2(-69.75F, 284.25F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - - Shape tree root for layer: Milk
            // - - - - -  Scale:0.7,0.7, Offset:<960, 540>
            // - - - - Transforms: Milk Controler
            // - - - Transforms: Milk
            // - Path
            CanvasGeometry Geometry_64()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-69.75F, 284.25F));
                    builder.AddCubicBezier(new Vector2(-110.25F, 284F), new Vector2(-108.767998F, 288.317993F), new Vector2(-158.496002F, 291.556F));
                    builder.AddCubicBezier(new Vector2(-181.268997F, 293.039001F), new Vector2(-226.5F, 278.786011F), new Vector2(-256.003998F, 278.786011F));
                    builder.AddCubicBezier(new Vector2(-283.821014F, 278.786011F), new Vector2(-327.5F, 282.5F), new Vector2(-327.5F, 282.5F));
                    builder.AddCubicBezier(new Vector2(-327.5F, 282.5F), new Vector2(-324F, 750F), new Vector2(-324F, 750F));
                    builder.AddCubicBezier(new Vector2(-324F, 750F), new Vector2(575.5F, 752.5F), new Vector2(575.5F, 752.5F));
                    builder.AddCubicBezier(new Vector2(575.5F, 752.5F), new Vector2(574.25F, 312.5F), new Vector2(574.25F, 284.5F));
                    builder.AddCubicBezier(new Vector2(572.736023F, 285.471008F), new Vector2(546.609009F, 317.082001F), new Vector2(501.752014F, 313.977997F));
                    builder.AddCubicBezier(new Vector2(462.582001F, 311.266998F), new Vector2(446.5F, 303.278015F), new Vector2(402.117004F, 303.278015F));
                    builder.AddCubicBezier(new Vector2(369.5F, 303.278015F), new Vector2(328.75F, 313.505005F), new Vector2(280.570007F, 309.213989F));
                    builder.AddCubicBezier(new Vector2(231.324005F, 304.828003F), new Vector2(203.498993F, 307.196991F), new Vector2(167.162003F, 307.196991F));
                    builder.AddCubicBezier(new Vector2(124.666F, 307.196991F), new Vector2(78.314003F, 308.5F), new Vector2(49.5F, 308.5F));
                    builder.AddCubicBezier(new Vector2(-1.51499999F, 308.5F), new Vector2(-4.25099993F, 284.653992F), new Vector2(-69.75F, 284.25F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Shape tree root for layer: Milk
            // - - -  Scale:0.7,0.7, Offset:<960, 540>
            // - - Transforms: Milk Offset:<55, -429.694>
            CanvasGeometry Geometry_65()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(94.5999985F, -109.324997F));
                    builder.AddLine(new Vector2(94.75F, 27.8250008F));
                    builder.AddCubicBezier(new Vector2(94.75F, 54.223999F), new Vector2(73.348999F, 75.625F), new Vector2(46.9500008F, 75.625F));
                    builder.AddLine(new Vector2(-46.9500008F, 75.625F));
                    builder.AddCubicBezier(new Vector2(-73.348999F, 75.625F), new Vector2(-94.75F, 54.223999F), new Vector2(-94.75F, 27.8250008F));
                    builder.AddLine(new Vector2(-94.9000015F, -113.824997F));
                    builder.AddCubicBezier(new Vector2(-93.5F, -138.875F), new Vector2(-36.25F, -180.125F), new Vector2(-35.9280014F, -189.003998F));
                    builder.AddCubicBezier(new Vector2(-35.3619995F, -204.615005F), new Vector2(-35.75F, -199.875F), new Vector2(-36.1500015F, -216.875F));
                    builder.AddLine(new Vector2(35.5F, -215.375F));
                    builder.AddCubicBezier(new Vector2(36F, -204.375F), new Vector2(35.743F, -198.123993F), new Vector2(36.9500008F, -189.660004F));
                    builder.AddCubicBezier(new Vector2(39.7000008F, -170.375F), new Vector2(97.3499985F, -140.375F), new Vector2(94.5999985F, -109.324997F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Shape tree root for layer: Botle
            // - - -  Scale:0.7,0.7, Offset:<960, 540>
            // - - Transforms: Botle Offset:<-48.796, -337.082>
            // Path 1
            CanvasGeometry Geometry_66()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(46.6819992F, 149.145004F));
                    builder.AddLine(new Vector2(-46.6800003F, 149.145004F));
                    builder.AddCubicBezier(new Vector2(-76.4729996F, 149.145004F), new Vector2(-100.712997F, 124.905998F), new Vector2(-100.712997F, 95.1119995F));
                    builder.AddLine(new Vector2(-100.712997F, -37.8800011F));
                    builder.AddCubicBezier(new Vector2(-100.712997F, -52.1230011F), new Vector2(-95.1780014F, -65.5210037F), new Vector2(-85.1269989F, -75.6100006F));
                    builder.AddLine(new Vector2(-44.0460014F, -116.852997F));
                    builder.AddCubicBezier(new Vector2(-42.0569992F, -118.850998F), new Vector2(-40.9609985F, -121.500999F), new Vector2(-40.9609985F, -124.318001F));
                    builder.AddLine(new Vector2(-40.9609985F, -143.542999F));
                    builder.AddCubicBezier(new Vector2(-40.9609985F, -146.636993F), new Vector2(-38.4529991F, -149.145004F), new Vector2(-35.3590012F, -149.145004F));
                    builder.AddCubicBezier(new Vector2(-32.2649994F, -149.145004F), new Vector2(-29.757F, -146.636993F), new Vector2(-29.757F, -143.542999F));
                    builder.AddLine(new Vector2(-29.757F, -124.318001F));
                    builder.AddCubicBezier(new Vector2(-29.757F, -118.516998F), new Vector2(-32.012001F, -113.057999F), new Vector2(-36.1069984F, -108.947998F));
                    builder.AddLine(new Vector2(-77.1900024F, -67.7050018F));
                    builder.AddCubicBezier(new Vector2(-85.1340027F, -59.7290001F), new Vector2(-89.5090027F, -49.1380005F), new Vector2(-89.5090027F, -37.8800011F));
                    builder.AddLine(new Vector2(-89.5090027F, 95.1119995F));
                    builder.AddCubicBezier(new Vector2(-89.5090027F, 118.727997F), new Vector2(-70.2959976F, 137.940994F), new Vector2(-46.6800003F, 137.940994F));
                    builder.AddLine(new Vector2(3.33299994F, 138.565994F));
                    builder.AddLine(new Vector2(46.6819992F, 137.940994F));
                    builder.AddCubicBezier(new Vector2(70.2969971F, 137.940994F), new Vector2(89.5100021F, 118.727997F), new Vector2(89.5100021F, 95.1119995F));
                    builder.AddLine(new Vector2(89.5100021F, -37.8800011F));
                    builder.AddCubicBezier(new Vector2(89.5100021F, -49.1380005F), new Vector2(85.1350021F, -59.7290001F), new Vector2(77.1910019F, -67.7050018F));
                    builder.AddLine(new Vector2(36.1080017F, -108.947998F));
                    builder.AddCubicBezier(new Vector2(32.0130005F, -113.057999F), new Vector2(29.7590008F, -118.516998F), new Vector2(29.7590008F, -124.318001F));
                    builder.AddLine(new Vector2(29.7590008F, -143.542999F));
                    builder.AddCubicBezier(new Vector2(29.7590008F, -146.636993F), new Vector2(32.2669983F, -149.145004F), new Vector2(35.3610001F, -149.145004F));
                    builder.AddCubicBezier(new Vector2(38.4550018F, -149.145004F), new Vector2(40.9620018F, -146.636993F), new Vector2(40.9620018F, -143.542999F));
                    builder.AddLine(new Vector2(40.9620018F, -124.318001F));
                    builder.AddCubicBezier(new Vector2(40.9620018F, -121.500999F), new Vector2(42.0579987F, -118.850998F), new Vector2(44.0460014F, -116.852997F));
                    builder.AddLine(new Vector2(85.1289978F, -75.6100006F));
                    builder.AddCubicBezier(new Vector2(95.1800003F, -65.5210037F), new Vector2(100.712997F, -52.1230011F), new Vector2(100.712997F, -37.8800011F));
                    builder.AddLine(new Vector2(100.712997F, 95.1119995F));
                    builder.AddCubicBezier(new Vector2(100.712997F, 124.905998F), new Vector2(76.4749985F, 149.145004F), new Vector2(46.6819992F, 149.145004F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Shape tree root for layer: Botle
            // - - -  Scale:0.7,0.7, Offset:<960, 540>
            // - - Transforms: Botle Offset:<-48.796, -337.082>
            // Path 1
            CanvasGeometry Geometry_67()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(37.8139992F, 17.8549995F));
                    builder.AddLine(new Vector2(-37.8089981F, 17.8549995F));
                    builder.AddCubicBezier(new Vector2(-47.6699982F, 17.8549995F), new Vector2(-55.6640015F, 9.86100006F), new Vector2(-55.6640015F, 0F));
                    builder.AddCubicBezier(new Vector2(-55.6640015F, -9.86200047F), new Vector2(-47.6699982F, -17.8560009F), new Vector2(-37.8089981F, -17.8560009F));
                    builder.AddLine(new Vector2(37.8139992F, -17.8560009F));
                    builder.AddCubicBezier(new Vector2(47.6749992F, -17.8560009F), new Vector2(55.6689987F, -9.86200047F), new Vector2(55.6689987F, 0F));
                    builder.AddCubicBezier(new Vector2(55.6689987F, 9.86100006F), new Vector2(47.6749992F, 17.8549995F), new Vector2(37.8139992F, 17.8549995F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Shape tree root for layer: Botle
            // - - -  Scale:0.7,0.7, Offset:<960, 540>
            // - - Transforms: Botle Offset:<-48.796, -337.082>
            CanvasGeometry Geometry_68()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(45.512001F, 23.4559994F));
                    builder.AddLine(new Vector2(-45.5130005F, 23.4559994F));
                    builder.AddCubicBezier(new Vector2(-54.2010002F, 23.4559994F), new Vector2(-61.269001F, 16.3880005F), new Vector2(-61.269001F, 7.70100021F));
                    builder.AddLine(new Vector2(-61.269001F, -7.70200014F));
                    builder.AddCubicBezier(new Vector2(-61.269001F, -16.3899994F), new Vector2(-54.2010002F, -23.4559994F), new Vector2(-45.5130005F, -23.4559994F));
                    builder.AddLine(new Vector2(45.512001F, -23.4559994F));
                    builder.AddCubicBezier(new Vector2(54.2010002F, -23.4559994F), new Vector2(61.269001F, -16.3899994F), new Vector2(61.269001F, -7.70200014F));
                    builder.AddLine(new Vector2(61.269001F, 7.70100021F));
                    builder.AddCubicBezier(new Vector2(61.269001F, 16.3880005F), new Vector2(54.2010002F, 23.4559994F), new Vector2(45.512001F, 23.4559994F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    builder.BeginFigure(new Vector2(-45.5130005F, -12.2539997F));
                    builder.AddCubicBezier(new Vector2(-48.0239983F, -12.2539997F), new Vector2(-50.0660019F, -10.2119999F), new Vector2(-50.0660019F, -7.70200014F));
                    builder.AddLine(new Vector2(-50.0660019F, 7.70100021F));
                    builder.AddCubicBezier(new Vector2(-50.0660019F, 10.21F), new Vector2(-48.0239983F, 12.2519999F), new Vector2(-45.5130005F, 12.2519999F));
                    builder.AddLine(new Vector2(45.512001F, 12.2519999F));
                    builder.AddCubicBezier(new Vector2(48.0229988F, 12.2519999F), new Vector2(50.0649986F, 10.21F), new Vector2(50.0649986F, 7.70100021F));
                    builder.AddLine(new Vector2(50.0649986F, -7.70200014F));
                    builder.AddCubicBezier(new Vector2(50.0649986F, -10.2119999F), new Vector2(48.0229988F, -12.2539997F), new Vector2(45.512001F, -12.2539997F));
                    builder.AddLine(new Vector2(-45.5130005F, -12.2539997F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // Path 1
            CanvasGeometry Geometry_69()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(59.7449989F, 0F));
                    builder.AddCubicBezier(new Vector2(59.7449989F, 20.1079998F), new Vector2(32.9959984F, 36.4099998F), new Vector2(0F, 36.4099998F));
                    builder.AddCubicBezier(new Vector2(-32.9959984F, 36.4099998F), new Vector2(-59.7449989F, 20.1079998F), new Vector2(-59.7449989F, 0F));
                    builder.AddCubicBezier(new Vector2(-59.7449989F, -20.1089993F), new Vector2(-32.9959984F, -36.4109993F), new Vector2(0F, -36.4109993F));
                    builder.AddCubicBezier(new Vector2(32.9959984F, -36.4109993F), new Vector2(59.7449989F, -20.1089993F), new Vector2(59.7449989F, 0F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // Path 1
            CanvasGeometry Geometry_70()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(11.9510002F, -11.4870005F));
                    builder.AddLine(new Vector2(10.5290003F, 11.1780005F));
                    builder.AddLine(new Vector2(3.48900008F, 11.4870005F));
                    builder.AddLine(new Vector2(3.55100012F, -0.463999987F));
                    builder.AddLine(new Vector2(0.370000005F, 9.17099953F));
                    builder.AddLine(new Vector2(-2.34699988F, 9.17099953F));
                    builder.AddLine(new Vector2(-4.78599977F, 0.555999994F));
                    builder.AddLine(new Vector2(-4.81799984F, 10.5609999F));
                    builder.AddLine(new Vector2(-11.9510002F, 10.7770004F));
                    builder.AddLine(new Vector2(-11.6420002F, -10.5609999F));
                    builder.AddLine(new Vector2(-3.70600009F, -10.8699999F));
                    builder.AddLine(new Vector2(-0.555999994F, -0.648000002F));
                    builder.AddLine(new Vector2(3.64299989F, -11.4870005F));
                    builder.AddLine(new Vector2(11.9510002F, -11.4870005F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // Path 1
            CanvasGeometry Geometry_71()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(4.10699987F, -10.684F));
                    builder.AddLine(new Vector2(2.40899992F, 10.3450003F));
                    builder.AddLine(new Vector2(-4.10699987F, 10.6850004F));
                    builder.AddLine(new Vector2(-4.10699987F, -10.2510004F));
                    builder.AddLine(new Vector2(4.10699987F, -10.684F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // Path 1
            CanvasGeometry Geometry_72()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(6.82399988F, 2.84200001F));
                    builder.AddLine(new Vector2(6.17700005F, 9.6960001F));
                    builder.AddLine(new Vector2(-6.82399988F, 10.7150002F));
                    builder.AddCubicBezier(new Vector2(-6.76300001F, 7.12300014F), new Vector2(-6.69299984F, 3.55100012F), new Vector2(-6.61600018F, 0F));
                    builder.AddCubicBezier(new Vector2(-6.53900003F, -3.55100012F), new Vector2(-6.44500017F, -7.12300014F), new Vector2(-6.32999992F, -10.7150002F));
                    builder.AddLine(new Vector2(1.699F, -10.7150002F));
                    builder.AddCubicBezier(new Vector2(1.46200001F, -8.46100044F), new Vector2(1.23500001F, -6.20900011F), new Vector2(1.01900005F, -3.96000004F));
                    builder.AddCubicBezier(new Vector2(0.802999973F, -1.71099997F), new Vector2(0.648000002F, 0.555999994F), new Vector2(0.555000007F, 2.84200001F));
                    builder.AddCubicBezier(new Vector2(1.03999996F, 2.86299992F), new Vector2(1.51800001F, 2.87199998F), new Vector2(1.99199998F, 2.87199998F));
                    builder.AddLine(new Vector2(3.42799997F, 2.87199998F));
                    builder.AddCubicBezier(new Vector2(4.00400019F, 2.87199998F), new Vector2(4.57000017F, 2.86599994F), new Vector2(5.12599993F, 2.85700011F));
                    builder.AddCubicBezier(new Vector2(5.68100023F, 2.84599996F), new Vector2(6.24800014F, 2.84200001F), new Vector2(6.82399988F, 2.84200001F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // Path 1
            CanvasGeometry Geometry_73()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(9.85099983F, -11.2089996F));
                    builder.AddLine(new Vector2(2.40899992F, -0.926999986F));
                    builder.AddLine(new Vector2(8.67599964F, 10.0050001F));
                    builder.AddLine(new Vector2(1.51300001F, 11.2709999F));
                    builder.AddLine(new Vector2(-3.18099999F, 4.60200024F));
                    builder.AddLine(new Vector2(-3.42799997F, 11.5799999F));
                    builder.AddLine(new Vector2(-9.85099983F, 11.8269997F));
                    builder.AddLine(new Vector2(-9.35700035F, -11.8269997F));
                    builder.AddLine(new Vector2(-2.16199994F, -11.4259996F));
                    builder.AddLine(new Vector2(-2.71700001F, -4.4460001F));
                    builder.AddLine(new Vector2(2.06900001F, -11.8269997F));
                    builder.AddLine(new Vector2(9.85099983F, -11.2089996F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Shape tree root for layer: Milk Label
            // - - -  Scale:0.7,0.7, Offset:<960, 540>
            // - - Transforms: Milk Label Offset:<55.001, -432.444>
            CanvasGeometry Geometry_74()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(87.75F, -40.25F));
                    builder.AddLine(new Vector2(87.75F, 40.25F));
                    builder.AddLine(new Vector2(-90.875F, 40.25F));
                    builder.AddLine(new Vector2(-90.875F, -40.25F));
                    builder.AddLine(new Vector2(87.75F, -40.25F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Shape tree root for layer: Bottle shadow
            // - - -  Scale:0.7,0.7, Offset:<960, 540>
            // - - Transforms: Bottle shadow Offset:<-48.796, -337.082>
            // Path 1
            CanvasGeometry Geometry_75()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(49.7799988F, -37.8810005F));
                    builder.AddLine(new Vector2(49.7799988F, 95.1169968F));
                    builder.AddCubicBezier(new Vector2(49.7799988F, 121.863998F), new Vector2(28.0879993F, 143.542999F), new Vector2(1.34000003F, 143.542999F));
                    builder.AddLine(new Vector2(-49.7750015F, 143.542999F));
                    builder.AddCubicBezier(new Vector2(-23.0279999F, 143.542999F), new Vector2(-1.33500004F, 121.863998F), new Vector2(-1.33500004F, 95.1169968F));
                    builder.AddLine(new Vector2(-1.33500004F, -37.8810005F));
                    builder.AddCubicBezier(new Vector2(-1.33500004F, -47.026001F), new Vector2(-3.95300007F, -55.9039993F), new Vector2(-8.77099991F, -63.5089989F));
                    builder.AddCubicBezier(new Vector2(-16.4169998F, -75.5530014F), new Vector2(-22.7759991F, -88.3799973F), new Vector2(-28.6009998F, -101.403999F));
                    builder.AddLine(new Vector2(-32.0330009F, -109.065002F));
                    builder.AddCubicBezier(new Vector2(-34.5670013F, -114.723F), new Vector2(-35.8689995F, -120.828003F), new Vector2(-35.8689995F, -127.017998F));
                    builder.AddLine(new Vector2(-35.8689995F, -143.542999F));
                    builder.AddLine(new Vector2(-9.97599983F, -143.542999F));
                    builder.AddLine(new Vector2(-9.97599983F, -124.316002F));
                    builder.AddCubicBezier(new Vector2(-9.97599983F, -120.043999F), new Vector2(-8.28100014F, -115.927002F), new Vector2(-5.25600004F, -112.902F));
                    builder.AddLine(new Vector2(35.8180008F, -71.6589966F));
                    builder.AddCubicBezier(new Vector2(44.7529984F, -62.6829987F), new Vector2(49.7799988F, -50.5410004F), new Vector2(49.7799988F, -37.8810005F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Shape tree root for layer: Bottle shadow
            // - - -  Scale:0.7,0.7, Offset:<960, 540>
            // - - Transforms: Bottle shadow Offset:<-48.796, -337.082>
            // Path 1
            CanvasGeometry Geometry_76()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(0F, 83.3410034F));
                    builder.AddCubicBezier(new Vector2(-15.0819998F, 83.3410034F), new Vector2(-27.3080006F, 71.1139984F), new Vector2(-27.3080006F, 56.0320015F));
                    builder.AddLine(new Vector2(-27.3080006F, -56.0320015F));
                    builder.AddCubicBezier(new Vector2(-27.3080006F, -71.1139984F), new Vector2(-15.0819998F, -83.3410034F), new Vector2(0F, -83.3410034F));
                    builder.AddCubicBezier(new Vector2(15.0819998F, -83.3410034F), new Vector2(27.309F, -71.1139984F), new Vector2(27.309F, -56.0320015F));
                    builder.AddLine(new Vector2(27.309F, 56.0320015F));
                    builder.AddCubicBezier(new Vector2(27.309F, 71.1139984F), new Vector2(15.0819998F, 83.3410034F), new Vector2(0F, 83.3410034F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - Shape tree root for layer: Milk
            // - -  Scale:0.7,0.7, Offset:<960, 540>
            // - Transforms: Milk Controler
            // Transforms: Milk
            CompositionColorBrush ColorBrush_AlmostBlack_FF232323()
            {
                return _c.CreateColorBrush(Color.FromArgb(0xFF, 0x23, 0x23, 0x23));
            }

            CompositionColorBrush ColorBrush_AlmostDarkGray_FFB099C5()
            {
                return (_colorBrush_AlmostDarkGray_FFB099C5 == null)
                    ? _colorBrush_AlmostDarkGray_FFB099C5 = _c.CreateColorBrush(Color.FromArgb(0xFF, 0xB0, 0x99, 0xC5))
                    : _colorBrush_AlmostDarkGray_FFB099C5;
            }

            CompositionColorBrush ColorBrush_AlmostGoldenrod_FFECD12E()
            {
                return (_colorBrush_AlmostGoldenrod_FFECD12E == null)
                    ? _colorBrush_AlmostGoldenrod_FFECD12E = _c.CreateColorBrush(Color.FromArgb(0xFF, 0xEC, 0xD1, 0x2E))
                    : _colorBrush_AlmostGoldenrod_FFECD12E;
            }

            CompositionColorBrush ColorBrush_AlmostLightPink_FFFFAEBD()
            {
                return (_colorBrush_AlmostLightPink_FFFFAEBD == null)
                    ? _colorBrush_AlmostLightPink_FFFFAEBD = _c.CreateColorBrush(Color.FromArgb(0xFF, 0xFF, 0xAE, 0xBD))
                    : _colorBrush_AlmostLightPink_FFFFAEBD;
            }

            CompositionColorBrush ColorBrush_AlmostNavy_FF000071()
            {
                return (_colorBrush_AlmostNavy_FF000071 == null)
                    ? _colorBrush_AlmostNavy_FF000071 = _c.CreateColorBrush(Color.FromArgb(0xFF, 0x00, 0x00, 0x71))
                    : _colorBrush_AlmostNavy_FF000071;
            }

            CompositionColorBrush ColorBrush_AlmostNavy_FF000072()
            {
                return (_colorBrush_AlmostNavy_FF000072 == null)
                    ? _colorBrush_AlmostNavy_FF000072 = _c.CreateColorBrush(Color.FromArgb(0xFF, 0x00, 0x00, 0x72))
                    : _colorBrush_AlmostNavy_FF000072;
            }

            CompositionColorBrush ColorBrush_AlmostOrange_FFFF9B00()
            {
                return (_colorBrush_AlmostOrange_FFFF9B00 == null)
                    ? _colorBrush_AlmostOrange_FFFF9B00 = _c.CreateColorBrush(Color.FromArgb(0xFF, 0xFF, 0x9B, 0x00))
                    : _colorBrush_AlmostOrange_FFFF9B00;
            }

            CompositionColorBrush ColorBrush_AlmostRed_FFDF0000()
            {
                return (_colorBrush_AlmostRed_FFDF0000 == null)
                    ? _colorBrush_AlmostRed_FFDF0000 = _c.CreateColorBrush(Color.FromArgb(0xFF, 0xDF, 0x00, 0x00))
                    : _colorBrush_AlmostRed_FFDF0000;
            }

            CompositionColorBrush ColorBrush_SemiTransparentAlmostLightPink_FCFFAFBE()
            {
                return (_colorBrush_SemiTransparentAlmostLightPink_FCFFAFBE == null)
                    ? _colorBrush_SemiTransparentAlmostLightPink_FCFFAFBE = _c.CreateColorBrush(Color.FromArgb(0xFC, 0xFF, 0xAF, 0xBE))
                    : _colorBrush_SemiTransparentAlmostLightPink_FCFFAFBE;
            }

            CompositionColorBrush ColorBrush_SemiTransparentAlmostNavy_FC000072()
            {
                return (_colorBrush_SemiTransparentAlmostNavy_FC000072 == null)
                    ? _colorBrush_SemiTransparentAlmostNavy_FC000072 = _c.CreateColorBrush(Color.FromArgb(0xFC, 0x00, 0x00, 0x72))
                    : _colorBrush_SemiTransparentAlmostNavy_FC000072;
            }

            // - - Shape tree root for layer: Bottle shadow
            // -  Scale:0.7,0.7, Offset:<960, 540>
            // Transforms: Bottle shadow Offset:<-48.796, -337.082>
            CompositionColorBrush ColorBrush_SemiTransparentAlmostNavy_42000071()
            {
                return _c.CreateColorBrush(Color.FromArgb(0x42, 0x00, 0x00, 0x71));
            }

            // - - Layer aggregator
            // ShapeGroup: Ellipse 1 Offset:<6.5, 264>
            CompositionColorBrush ColorBrush_SemiTransparentBlack_0()
            {
                return _c.CreateColorBrush(Color.FromArgb(0x68, 0x00, 0x00, 0x00));
            }

            // - - Layer aggregator
            // ShapeGroup: Ellipse 1 Offset:<-3, 297.75>
            CompositionColorBrush ColorBrush_SemiTransparentBlack_1()
            {
                return _c.CreateColorBrush(Color.FromArgb(0x7A, 0x00, 0x00, 0x00));
            }

            CompositionColorBrush ColorBrush_SemiTransparentWhite_0()
            {
                return (_colorBrush_SemiTransparentWhite_0 == null)
                    ? _colorBrush_SemiTransparentWhite_0 = _c.CreateColorBrush(Color.FromArgb(0xFC, 0xFF, 0xFF, 0xFF))
                    : _colorBrush_SemiTransparentWhite_0;
            }

            // - - Shape tree root for layer: Bottle shadow
            // -  Scale:0.7,0.7, Offset:<960, 540>
            // Transforms: Bottle shadow Offset:<-48.796, -337.082>
            CompositionColorBrush ColorBrush_SemiTransparentWhite_1()
            {
                return _c.CreateColorBrush(Color.FromArgb(0x7C, 0xFF, 0xFF, 0xFF));
            }

            CompositionColorBrush ColorBrush_White()
            {
                return (_colorBrush_White == null)
                    ? _colorBrush_White = _c.CreateColorBrush(Color.FromArgb(0xFF, 0xFF, 0xFF, 0xFF))
                    : _colorBrush_White;
            }

            // Layer aggregator
            CompositionContainerShape ContainerShape_00()
            {
                if (_containerShape_00 != null) { return _containerShape_00; }
                var result = _containerShape_00 = _c.CreateContainerShape();
                result.Offset = new Vector2(960F, 541.5F);
                // ShapeGroup: Ellipse 1 Offset:<6.5, 264>
                result.Shapes.Add(SpriteShape_00());
                return result;
            }

            // Layer aggregator
            // Transforms for Body
            CompositionContainerShape ContainerShape_01()
            {
                if (_containerShape_01 != null) { return _containerShape_01; }
                var result = _containerShape_01 = _c.CreateContainerShape();
                // Offset:<960, 540>, Scale:<0.7, 0.7>
                result.TransformMatrix = new Matrix3x2(0.699999988F, 0F, 0F, 0.699999988F, 960F, 540F);
                var shapes = result.Shapes;
                // ShapeGroup: Group 1 Offset:<237.88, 144.564>
                shapes.Add(SpriteShape_01());
                // Transforms: Layer 39 Outlines Offset:<14.484005, -1.151001>
                shapes.Add(SpriteShape_02());
                // Transforms: Head Controler
                shapes.Add(ContainerShape_02());
                return result;
            }

            // - Layer aggregator
            // Scale:0.7,0.7, Offset:<960, 540>
            // Transforms for Head Controler
            CompositionContainerShape ContainerShape_02()
            {
                if (_containerShape_02 != null) { return _containerShape_02; }
                var result = _containerShape_02 = _c.CreateContainerShape();
                result.Offset = new Vector2(479.709015F, -148.279007F);
                // Transforms: Head
                result.Shapes.Add(ContainerShape_03());
                return result;
            }

            // - - Layer aggregator
            // -  Scale:0.7,0.7, Offset:<960, 540>
            // Transforms: Head Controler
            // Transforms for Head
            CompositionContainerShape ContainerShape_03()
            {
                if (_containerShape_03 != null) { return _containerShape_03; }
                var result = _containerShape_03 = _c.CreateContainerShape();
                result.CenterPoint = new Vector2(254.264008F, 434.846985F);
                result.Scale = new Vector2(0.699999988F, 0.699999988F);
                var shapes = result.Shapes;
                // Transforms: Left ear Offset:<254.30798, 358.042>
                shapes.Add(SpriteShape_03());
                // Transforms: Left ear Offset:<254.30798, 358.042>
                shapes.Add(SpriteShape_04());
                // Transforms: Right ear Offset:<684.11304, 355.501>
                shapes.Add(SpriteShape_05());
                // Transforms: Right ear Offset:<684.11304, 355.501>
                shapes.Add(SpriteShape_06());
                // Transforms: Head White Offset:<5.524002, 5.284012>
                shapes.Add(SpriteShape_07());
                // Transforms: Left Eye
                shapes.Add(ContainerShape_04());
                // Transforms: Right Eye
                shapes.Add(ContainerShape_05());
                // Transforms: Mouth Outline
                shapes.Add(ContainerShape_06());
                // ShapeGroup: Group 1 Offset:<261.016, 218.068>
                shapes.Add(SpriteShape_15());
                // Transforms: left Sing Offset:<116.132996, -63.604>
                shapes.Add(SpriteShape_16());
                // Transforms: left Sing Offset:<116.132996, -63.604>
                shapes.Add(SpriteShape_17());
                // Transforms: left Sing Offset:<116.132996, -63.604>
                shapes.Add(SpriteShape_18());
                // Transforms: Right Sing Offset:<304.233, -63.603>
                shapes.Add(SpriteShape_19());
                // Transforms: Right Sing Offset:<304.233, -63.603>
                shapes.Add(SpriteShape_20());
                // Transforms: Right Sing Offset:<304.233, -63.603>
                shapes.Add(SpriteShape_21());
                // Transforms: Mouth Outline
                shapes.Add(ContainerShape_07());
                // Transforms: Left Eye Bro
                shapes.Add(ContainerShape_08());
                // Transforms: Roght Eye Bro
                shapes.Add(ContainerShape_09());
                // Transforms: Mouth Outline
                shapes.Add(ContainerShape_10());
                return result;
            }

            // - - - Layer aggregator
            // - -  Scale:0.7,0.7, Offset:<960, 540>
            // - Transforms: Head Controler
            // Transforms: Head
            // Transforms for Left Eye
            CompositionContainerShape ContainerShape_04()
            {
                if (_containerShape_04 != null) { return _containerShape_04; }
                var result = _containerShape_04 = _c.CreateContainerShape();
                result.CenterPoint = new Vector2(38.8769989F, 83.5589981F);
                var shapes = result.Shapes;
                // ShapeGroup: Group 3 Offset:<37.448, 49.273>
                shapes.Add(SpriteShape_08());
                // ShapeGroup: Group 2 Offset:<45.201, 28.023>
                shapes.Add(SpriteShape_09());
                // ShapeGroup: Group 1 Offset:<25.963, 76.979>
                shapes.Add(SpriteShape_10());
                return result;
            }

            // - - - Layer aggregator
            // - -  Scale:0.7,0.7, Offset:<960, 540>
            // - Transforms: Head Controler
            // Transforms: Head
            // Transforms for Right Eye
            CompositionContainerShape ContainerShape_05()
            {
                if (_containerShape_05 != null) { return _containerShape_05; }
                var result = _containerShape_05 = _c.CreateContainerShape();
                result.CenterPoint = new Vector2(37.4480019F, 93.5589981F);
                var shapes = result.Shapes;
                // ShapeGroup: Group 3 Offset:<37.448, 49.273>
                shapes.Add(SpriteShape_11());
                // ShapeGroup: Group 2 Offset:<29.694, 28.023>
                shapes.Add(SpriteShape_12());
                // ShapeGroup: Group 1 Offset:<48.932, 76.979>
                shapes.Add(SpriteShape_13());
                return result;
            }

            // - - - Layer aggregator
            // - -  Scale:0.7,0.7, Offset:<960, 540>
            // - Transforms: Head Controler
            // Transforms: Head
            // Transforms for Mouth Outline
            CompositionContainerShape ContainerShape_06()
            {
                if (_containerShape_06 != null) { return _containerShape_06; }
                var result = _containerShape_06 = _c.CreateContainerShape();
                // Transforms: Mouth Offset:<-8.242996, 4.833>
                result.Shapes.Add(SpriteShape_14());
                return result;
            }

            // - - - Layer aggregator
            // - -  Scale:0.7,0.7, Offset:<960, 540>
            // - Transforms: Head Controler
            // Transforms: Head
            // Transforms for Mouth Outline
            CompositionContainerShape ContainerShape_07()
            {
                if (_containerShape_07 != null) { return _containerShape_07; }
                var result = _containerShape_07 = _c.CreateContainerShape();
                // ShapeGroup: Group 1 Offset:<186.666, 99.112>
                result.Shapes.Add(SpriteShape_22());
                return result;
            }

            // - - - Layer aggregator
            // - -  Scale:0.7,0.7, Offset:<960, 540>
            // - Transforms: Head Controler
            // Transforms: Head
            // Transforms for Left Eye Bro
            CompositionContainerShape ContainerShape_08()
            {
                if (_containerShape_08 != null) { return _containerShape_08; }
                var result = _containerShape_08 = _c.CreateContainerShape();
                // ShapeGroup: Group 1 Offset:<31.095, 12.947>
                result.Shapes.Add(SpriteShape_23());
                return result;
            }

            // - - - Layer aggregator
            // - -  Scale:0.7,0.7, Offset:<960, 540>
            // - Transforms: Head Controler
            // Transforms: Head
            // Transforms for Roght Eye Bro
            CompositionContainerShape ContainerShape_09()
            {
                if (_containerShape_09 != null) { return _containerShape_09; }
                var result = _containerShape_09 = _c.CreateContainerShape();
                // ShapeGroup: Group 1 Offset:<31.13, 13.023>
                result.Shapes.Add(SpriteShape_24());
                return result;
            }

            // - - - Layer aggregator
            // - -  Scale:0.7,0.7, Offset:<960, 540>
            // - Transforms: Head Controler
            // Transforms: Head
            // Transforms for Mouth Outline
            CompositionContainerShape ContainerShape_10()
            {
                if (_containerShape_10 != null) { return _containerShape_10; }
                var result = _containerShape_10 = _c.CreateContainerShape();
                var shapes = result.Shapes;
                // Transforms: Left Nose Hole
                shapes.Add(ContainerShape_11());
                // Transforms: Right Nose Hole
                shapes.Add(ContainerShape_12());
                return result;
            }

            // - - - - Layer aggregator
            // - - -  Scale:0.7,0.7, Offset:<960, 540>
            // - - Transforms: Head Controler
            // - Transforms: Head
            // Transforms: Mouth Outline
            // Transforms for Left Nose Hole
            CompositionContainerShape ContainerShape_11()
            {
                if (_containerShape_11 != null) { return _containerShape_11; }
                var result = _containerShape_11 = _c.CreateContainerShape();
                result.CenterPoint = new Vector2(10.0749998F, 12.1899996F);
                result.Offset = new Vector2(132.128006F, 31.1240005F);
                // ShapeGroup: Group 1 Offset:<10.075, 12.19>
                result.Shapes.Add(SpriteShape_25());
                return result;
            }

            // - - - - Layer aggregator
            // - - -  Scale:0.7,0.7, Offset:<960, 540>
            // - - Transforms: Head Controler
            // - Transforms: Head
            // Transforms: Mouth Outline
            // Transforms for Right Nose Hole
            CompositionContainerShape ContainerShape_12()
            {
                if (_containerShape_12 != null) { return _containerShape_12; }
                var result = _containerShape_12 = _c.CreateContainerShape();
                result.CenterPoint = new Vector2(10.0749998F, 12.1899996F);
                result.Offset = new Vector2(221.055008F, 31.1240005F);
                // ShapeGroup: Group 1 Offset:<10.075, 12.19>
                result.Shapes.Add(SpriteShape_26());
                return result;
            }

            // Shape tree root for layer: Staw
            // Transforms for Orignal Straw
            CompositionContainerShape ContainerShape_13()
            {
                if (_containerShape_13 != null) { return _containerShape_13; }
                var result = _containerShape_13 = _c.CreateContainerShape();
                result.CenterPoint = new Vector2(22.8950005F, 152.880005F);
                // Offset:<960, 540>, Scale:<0.7, 0.7>
                result.TransformMatrix = new Matrix3x2(0.699999988F, 0F, 0F, 0.699999988F, 960F, 540F);
                // Transforms: Staw Scale:0.72,1.27, Offset:<0.75, 40.75>
                result.Shapes.Add(SpriteShape_27());
                return result;
            }

            // Shape tree root for layer: Shape Layer 1
            // Transforms for Orignal Straw
            CompositionContainerShape ContainerShape_14()
            {
                if (_containerShape_14 != null) { return _containerShape_14; }
                var result = _containerShape_14 = _c.CreateContainerShape();
                result.CenterPoint = new Vector2(22.8950005F, 152.880005F);
                // Offset:<960, 540>, Scale:<0.7, 0.7>
                result.TransformMatrix = new Matrix3x2(0.699999988F, 0F, 0F, 0.699999988F, 960F, 540F);
                // Transforms: Staw Scale:0.72,1.27, Offset:<0.75, 40.75>
                result.Shapes.Add(SpriteShape_28());
                return result;
            }

            // Shape tree root for layer: Staw 4
            // Transforms for Orignal Straw 4
            CompositionContainerShape ContainerShape_15()
            {
                if (_containerShape_15 != null) { return _containerShape_15; }
                var result = _containerShape_15 = _c.CreateContainerShape();
                result.CenterPoint = new Vector2(22.8950005F, 152.880005F);
                // Offset:<960, 540>, Scale:<0.7, 0.7>
                result.TransformMatrix = new Matrix3x2(0.699999988F, 0F, 0F, 0.699999988F, 960F, 540F);
                // Transforms: Staw 4 Scale:0.72,1.27, Offset:<0.75, 40.75>
                result.Shapes.Add(SpriteShape_29());
                return result;
            }

            // Shape tree root for layer: Shape Layer 5
            // Transforms for Orignal Straw 4
            CompositionContainerShape ContainerShape_16()
            {
                if (_containerShape_16 != null) { return _containerShape_16; }
                var result = _containerShape_16 = _c.CreateContainerShape();
                result.CenterPoint = new Vector2(22.8950005F, 152.880005F);
                // Offset:<960, 540>, Scale:<0.7, 0.7>
                result.TransformMatrix = new Matrix3x2(0.699999988F, 0F, 0F, 0.699999988F, 960F, 540F);
                // Transforms: Staw 4 Scale:0.72,1.27, Offset:<0.75, 40.75>
                result.Shapes.Add(SpriteShape_30());
                return result;
            }

            // Shape tree root for layer: Staw 2
            // Transforms for Bottle Controller
            CompositionContainerShape ContainerShape_17()
            {
                if (_containerShape_17 != null) { return _containerShape_17; }
                var result = _containerShape_17 = _c.CreateContainerShape();
                // Offset:<960, 540>, Scale:<0.7, 0.7>
                result.TransformMatrix = new Matrix3x2(0.699999988F, 0F, 0F, 0.699999988F, 960F, 540F);
                // Transforms: Orignal Straw 2
                result.Shapes.Add(ContainerShape_18());
                return result;
            }

            // - Shape tree root for layer: Staw 2
            // Scale:0.7,0.7, Offset:<960, 540>
            // Transforms for Orignal Straw 2
            CompositionContainerShape ContainerShape_18()
            {
                if (_containerShape_18 != null) { return _containerShape_18; }
                var result = _containerShape_18 = _c.CreateContainerShape();
                result.CenterPoint = new Vector2(22.8950005F, 152.880005F);
                // Transforms: Staw 2 Scale:0.72,1.27, Offset:<0.75, 40.75>
                result.Shapes.Add(SpriteShape_31());
                return result;
            }

            // Shape tree root for layer: Shape Layer 3
            // Transforms for Bottle Controller
            CompositionContainerShape ContainerShape_19()
            {
                if (_containerShape_19 != null) { return _containerShape_19; }
                var result = _containerShape_19 = _c.CreateContainerShape();
                // Offset:<960, 540>, Scale:<0.7, 0.7>
                result.TransformMatrix = new Matrix3x2(0.699999988F, 0F, 0F, 0.699999988F, 960F, 540F);
                // Transforms: Orignal Straw 2
                result.Shapes.Add(ContainerShape_20());
                return result;
            }

            // - Shape tree root for layer: Shape Layer 3
            // Scale:0.7,0.7, Offset:<960, 540>
            // Transforms for Orignal Straw 2
            CompositionContainerShape ContainerShape_20()
            {
                if (_containerShape_20 != null) { return _containerShape_20; }
                var result = _containerShape_20 = _c.CreateContainerShape();
                result.CenterPoint = new Vector2(22.8950005F, 152.880005F);
                // Transforms: Staw 2 Scale:0.72,1.27, Offset:<0.75, 40.75>
                result.Shapes.Add(SpriteShape_32());
                return result;
            }

            // Layer aggregator
            // Transforms for Body
            CompositionContainerShape ContainerShape_21()
            {
                if (_containerShape_21 != null) { return _containerShape_21; }
                var result = _containerShape_21 = _c.CreateContainerShape();
                // Offset:<960, 540>, Scale:<0.7, 0.7>
                result.TransformMatrix = new Matrix3x2(0.699999988F, 0F, 0F, 0.699999988F, 960F, 540F);
                var shapes = result.Shapes;
                // Transforms: Head Controler
                shapes.Add(ContainerShape_22());
                // Transforms: Layer 14 Outlines Offset:<-3.7229996, -6.256996>
                shapes.Add(SpriteShape_36());
                // Transforms: Layer 13 Outlines Offset:<380.332, -6.2549973>
                shapes.Add(SpriteShape_37());
                // Transforms: Left Hand
                shapes.Add(ContainerShape_28());
                // Transforms: Right Hand
                shapes.Add(ContainerShape_29());
                // Transforms: Left Leg
                shapes.Add(ContainerShape_30());
                // Transforms: Right Leg
                shapes.Add(ContainerShape_31());
                return result;
            }

            // - Layer aggregator
            // Scale:0.7,0.7, Offset:<960, 540>
            // Transforms for Head Controler
            CompositionContainerShape ContainerShape_22()
            {
                if (_containerShape_22 != null) { return _containerShape_22; }
                var result = _containerShape_22 = _c.CreateContainerShape();
                result.Offset = new Vector2(479.709015F, -148.279007F);
                // Transforms: Head
                result.Shapes.Add(ContainerShape_23());
                return result;
            }

            // - - Layer aggregator
            // -  Scale:0.7,0.7, Offset:<960, 540>
            // Transforms: Head Controler
            // Transforms for Head
            CompositionContainerShape ContainerShape_23()
            {
                if (_containerShape_23 != null) { return _containerShape_23; }
                var result = _containerShape_23 = _c.CreateContainerShape();
                result.CenterPoint = new Vector2(254.264008F, 434.846985F);
                result.Scale = new Vector2(0.699999988F, 0.699999988F);
                // Transforms: Mouth Outline
                result.Shapes.Add(ContainerShape_24());
                return result;
            }

            // - - - Layer aggregator
            // - -  Scale:0.7,0.7, Offset:<960, 540>
            // - Transforms: Head Controler
            // Transforms: Head
            // Transforms for Mouth Outline
            CompositionContainerShape ContainerShape_24()
            {
                if (_containerShape_24 != null) { return _containerShape_24; }
                var result = _containerShape_24 = _c.CreateContainerShape();
                var shapes = result.Shapes;
                // Transforms: Left Cute
                shapes.Add(ContainerShape_25());
                // Transforms: Right Cute
                shapes.Add(ContainerShape_26());
                // Transforms: Smile
                shapes.Add(ContainerShape_27());
                return result;
            }

            // - - - - Layer aggregator
            // - - -  Scale:0.7,0.7, Offset:<960, 540>
            // - - Transforms: Head Controler
            // - Transforms: Head
            // Transforms: Mouth Outline
            // Transforms for Left Cute
            CompositionContainerShape ContainerShape_25()
            {
                if (_containerShape_25 != null) { return _containerShape_25; }
                var result = _containerShape_25 = _c.CreateContainerShape();
                // ShapeGroup: Group 1 Offset:<13.754, 14.727>
                result.Shapes.Add(SpriteShape_33());
                return result;
            }

            // - - - - Layer aggregator
            // - - -  Scale:0.7,0.7, Offset:<960, 540>
            // - - Transforms: Head Controler
            // - Transforms: Head
            // Transforms: Mouth Outline
            // Transforms for Right Cute
            CompositionContainerShape ContainerShape_26()
            {
                if (_containerShape_26 != null) { return _containerShape_26; }
                var result = _containerShape_26 = _c.CreateContainerShape();
                // ShapeGroup: Group 1 Offset:<13.883, 14.667>
                result.Shapes.Add(SpriteShape_34());
                return result;
            }

            // - - - - Layer aggregator
            // - - -  Scale:0.7,0.7, Offset:<960, 540>
            // - - Transforms: Head Controler
            // - Transforms: Head
            // Transforms: Mouth Outline
            // Transforms for Smile
            CompositionContainerShape ContainerShape_27()
            {
                if (_containerShape_27 != null) { return _containerShape_27; }
                var result = _containerShape_27 = _c.CreateContainerShape();
                result.CenterPoint = new Vector2(61.4679985F, 12.3870001F);
                result.Offset = new Vector2(121.860992F, 109.462997F);
                // ShapeGroup: Group 1 Offset:<61.468, 12.387>
                result.Shapes.Add(SpriteShape_35());
                return result;
            }

            // - Layer aggregator
            // Scale:0.7,0.7, Offset:<960, 540>
            // Transforms for Left Hand
            CompositionContainerShape ContainerShape_28()
            {
                if (_containerShape_28 != null) { return _containerShape_28; }
                var result = _containerShape_28 = _c.CreateContainerShape();
                result.CenterPoint = new Vector2(33.7200012F, 27.2709999F);
                result.Offset = new Vector2(45.5100021F, 88.5850067F);
                var shapes = result.Shapes;
                // ShapeGroup: Group 2 Offset:<94.803, 76.172>
                shapes.Add(SpriteShape_38());
                // ShapeGroup: Group 1 Offset:<66.97, 57.271>
                shapes.Add(SpriteShape_39());
                return result;
            }

            // - Layer aggregator
            // Scale:0.7,0.7, Offset:<960, 540>
            // Transforms for Right Hand
            CompositionContainerShape ContainerShape_29()
            {
                if (_containerShape_29 != null) { return _containerShape_29; }
                var result = _containerShape_29 = _c.CreateContainerShape();
                result.CenterPoint = new Vector2(104.967003F, 21.0900002F);
                result.Offset = new Vector2(292.897003F, 88.2319946F);
                var shapes = result.Shapes;
                // ShapeGroup: Shape 1
                shapes.Add(SpriteShape_40());
                // ShapeGroup: Group 2 Offset:<39.137, 76.526>
                shapes.Add(SpriteShape_41());
                // ShapeGroup: Group 1 Offset:<66.788, 57.448>
                shapes.Add(SpriteShape_42());
                return result;
            }

            // - Layer aggregator
            // Scale:0.7,0.7, Offset:<960, 540>
            // Transforms for Left Leg
            CompositionContainerShape ContainerShape_30()
            {
                if (_containerShape_30 != null) { return _containerShape_30; }
                var result = _containerShape_30 = _c.CreateContainerShape();
                result.CenterPoint = new Vector2(118.800003F, 107.468002F);
                result.Offset = new Vector2(-10.0570068F, 201.201004F);
                var shapes = result.Shapes;
                // ShapeGroup: Group 4 Offset:<90.44, 80.253>
                shapes.Add(SpriteShape_43());
                // ShapeGroup: Group 3 Offset:<78.676, 85.838>
                shapes.Add(SpriteShape_44());
                // ShapeGroup: Group 2 Offset:<46.326, 51.621>
                shapes.Add(SpriteShape_45());
                // ShapeGroup: Group 1 Offset:<78.357, 74.44>
                shapes.Add(SpriteShape_46());
                return result;
            }

            // - Layer aggregator
            // Scale:0.7,0.7, Offset:<960, 540>
            // Transforms for Right Leg
            CompositionContainerShape ContainerShape_31()
            {
                if (_containerShape_31 != null) { return _containerShape_31; }
                var result = _containerShape_31 = _c.CreateContainerShape();
                result.CenterPoint = new Vector2(52.3720016F, 106.393997F);
                result.Offset = new Vector2(310.475983F, 201.206009F);
                var shapes = result.Shapes;
                // ShapeGroup: Group 4 Offset:<85.018, 80.249>
                shapes.Add(SpriteShape_47());
                // ShapeGroup: Group 3 Offset:<96.787, 85.834>
                shapes.Add(SpriteShape_48());
                // ShapeGroup: Group 2 Offset:<130.047, 51.264>
                shapes.Add(SpriteShape_49());
                // ShapeGroup: Group 1 Offset:<97.101, 74.439>
                shapes.Add(SpriteShape_50());
                return result;
            }

            // Layer aggregator
            CompositionContainerShape ContainerShape_32()
            {
                if (_containerShape_32 != null) { return _containerShape_32; }
                var result = _containerShape_32 = _c.CreateContainerShape();
                result.CenterPoint = new Vector2(-3F, 297.75F);
                // ShapeGroup: Ellipse 1 Offset:<-3, 297.75>
                result.Shapes.Add(SpriteShape_51());
                return result;
            }

            // Shape tree root for layer: Milk
            // Transforms for Bottle Controller
            CompositionContainerShape ContainerShape_33()
            {
                if (_containerShape_33 != null) { return _containerShape_33; }
                var result = _containerShape_33 = _c.CreateContainerShape();
                // Offset:<960, 540>, Scale:<0.7, 0.7>
                result.TransformMatrix = new Matrix3x2(0.699999988F, 0F, 0F, 0.699999988F, 960F, 540F);
                // Transforms: Milk Controler
                result.Shapes.Add(ContainerShape_34());
                return result;
            }

            // - Shape tree root for layer: Milk
            // Scale:0.7,0.7, Offset:<960, 540>
            // Transforms for Milk Controler
            CompositionContainerShape ContainerShape_34()
            {
                if (_containerShape_34 != null) { return _containerShape_34; }
                var result = _containerShape_34 = _c.CreateContainerShape();
                // Transforms: Milk
                result.Shapes.Add(SpriteShape_52());
                return result;
            }

            // Shape tree root for layer: Milk
            // Transforms for Bottle Controller
            CompositionContainerShape ContainerShape_35()
            {
                if (_containerShape_35 != null) { return _containerShape_35; }
                var result = _containerShape_35 = _c.CreateContainerShape();
                // Offset:<960, 540>, Scale:<0.7, 0.7>
                result.TransformMatrix = new Matrix3x2(0.699999988F, 0F, 0F, 0.699999988F, 960F, 540F);
                // Transforms: Milk Offset:<55, -429.694>
                result.Shapes.Add(SpriteShape_53());
                return result;
            }

            // Shape tree root for layer: Botle
            // Transforms for Bottle Controller
            CompositionContainerShape ContainerShape_36()
            {
                if (_containerShape_36 != null) { return _containerShape_36; }
                var result = _containerShape_36 = _c.CreateContainerShape();
                // Offset:<960, 540>, Scale:<0.7, 0.7>
                result.TransformMatrix = new Matrix3x2(0.699999988F, 0F, 0F, 0.699999988F, 960F, 540F);
                var shapes = result.Shapes;
                // Transforms: Botle Offset:<-48.796, -337.082>
                shapes.Add(SpriteShape_54());
                // Transforms: Botle Offset:<-48.796, -337.082>
                shapes.Add(SpriteShape_55());
                // Transforms: Botle Offset:<-48.796, -337.082>
                shapes.Add(SpriteShape_56());
                return result;
            }

            // Shape tree root for layer: Milk Label
            // Transforms for Bottle Controller
            CompositionContainerShape ContainerShape_37()
            {
                if (_containerShape_37 != null) { return _containerShape_37; }
                var result = _containerShape_37 = _c.CreateContainerShape();
                // Offset:<960, 540>, Scale:<0.7, 0.7>
                result.TransformMatrix = new Matrix3x2(0.699999988F, 0F, 0F, 0.699999988F, 960F, 540F);
                // Transforms: Milk Label Offset:<55.001, -432.444>
                result.Shapes.Add(SpriteShape_92());
                return result;
            }

            // Shape tree root for layer: Bottle shadow
            // Transforms for Bottle Controller
            CompositionContainerShape ContainerShape_38()
            {
                if (_containerShape_38 != null) { return _containerShape_38; }
                var result = _containerShape_38 = _c.CreateContainerShape();
                // Offset:<960, 540>, Scale:<0.7, 0.7>
                result.TransformMatrix = new Matrix3x2(0.699999988F, 0F, 0F, 0.699999988F, 960F, 540F);
                var shapes = result.Shapes;
                // Transforms: Bottle shadow Offset:<-48.796, -337.082>
                shapes.Add(SpriteShape_93());
                // Transforms: Bottle shadow Offset:<-48.796, -337.082>
                shapes.Add(SpriteShape_94());
                return result;
            }

            // Shape tree root for layer: Staw 3
            // Transforms for Orignal Straw 3
            CompositionContainerShape ContainerShape_39()
            {
                if (_containerShape_39 != null) { return _containerShape_39; }
                var result = _containerShape_39 = _c.CreateContainerShape();
                result.CenterPoint = new Vector2(22.8950005F, 152.880005F);
                // Offset:<960, 540>, Scale:<0.7, 0.7>
                result.TransformMatrix = new Matrix3x2(0.699999988F, 0F, 0F, 0.699999988F, 960F, 540F);
                // Transforms: Staw 3 Scale:0.72,1.27, Offset:<0.75, 40.75>
                result.Shapes.Add(SpriteShape_95());
                return result;
            }

            // Shape tree root for layer: Shape Layer 4
            // Transforms for Orignal Straw 3
            CompositionContainerShape ContainerShape_40()
            {
                if (_containerShape_40 != null) { return _containerShape_40; }
                var result = _containerShape_40 = _c.CreateContainerShape();
                result.CenterPoint = new Vector2(22.8950005F, 152.880005F);
                // Offset:<960, 540>, Scale:<0.7, 0.7>
                result.TransformMatrix = new Matrix3x2(0.699999988F, 0F, 0F, 0.699999988F, 960F, 540F);
                // Transforms: Staw 3 Scale:0.72,1.27, Offset:<0.75, 40.75>
                result.Shapes.Add(SpriteShape_96());
                return result;
            }

            CompositionEffectBrush EffectBrush_0()
            {
                var compositeEffect = new CompositeEffect();
                compositeEffect.Mode = CanvasComposite.DestinationIn;
                compositeEffect.Sources.Add(new CompositionEffectSourceParameter("destination"));
                compositeEffect.Sources.Add(new CompositionEffectSourceParameter("source"));
                var effectFactory = _c.CreateEffectFactory(compositeEffect);
                var result = effectFactory.CreateBrush();
                result.SetSourceParameter("destination", SurfaceBrush_00());
                result.SetSourceParameter("source", SurfaceBrush_01());
                return result;
            }

            CompositionEffectBrush EffectBrush_1()
            {
                var compositeEffect = new CompositeEffect();
                compositeEffect.Mode = CanvasComposite.DestinationIn;
                compositeEffect.Sources.Add(new CompositionEffectSourceParameter("destination"));
                compositeEffect.Sources.Add(new CompositionEffectSourceParameter("source"));
                var effectFactory = _c.CreateEffectFactory(compositeEffect);
                var result = effectFactory.CreateBrush();
                result.SetSourceParameter("destination", SurfaceBrush_02());
                result.SetSourceParameter("source", SurfaceBrush_03());
                return result;
            }

            CompositionEffectBrush EffectBrush_2()
            {
                var compositeEffect = new CompositeEffect();
                compositeEffect.Mode = CanvasComposite.DestinationIn;
                compositeEffect.Sources.Add(new CompositionEffectSourceParameter("destination"));
                compositeEffect.Sources.Add(new CompositionEffectSourceParameter("source"));
                var effectFactory = _c.CreateEffectFactory(compositeEffect);
                var result = effectFactory.CreateBrush();
                result.SetSourceParameter("destination", SurfaceBrush_04());
                result.SetSourceParameter("source", SurfaceBrush_05());
                return result;
            }

            CompositionEffectBrush EffectBrush_3()
            {
                var compositeEffect = new CompositeEffect();
                compositeEffect.Mode = CanvasComposite.DestinationIn;
                compositeEffect.Sources.Add(new CompositionEffectSourceParameter("destination"));
                compositeEffect.Sources.Add(new CompositionEffectSourceParameter("source"));
                var effectFactory = _c.CreateEffectFactory(compositeEffect);
                var result = effectFactory.CreateBrush();
                result.SetSourceParameter("destination", SurfaceBrush_06());
                result.SetSourceParameter("source", SurfaceBrush_07());
                return result;
            }

            CompositionEffectBrush EffectBrush_4()
            {
                var compositeEffect = new CompositeEffect();
                compositeEffect.Mode = CanvasComposite.DestinationIn;
                compositeEffect.Sources.Add(new CompositionEffectSourceParameter("destination"));
                compositeEffect.Sources.Add(new CompositionEffectSourceParameter("source"));
                var effectFactory = _c.CreateEffectFactory(compositeEffect);
                var result = effectFactory.CreateBrush();
                result.SetSourceParameter("destination", SurfaceBrush_08());
                result.SetSourceParameter("source", SurfaceBrush_09());
                return result;
            }

            CompositionEffectBrush EffectBrush_5()
            {
                var compositeEffect = new CompositeEffect();
                compositeEffect.Mode = CanvasComposite.DestinationIn;
                compositeEffect.Sources.Add(new CompositionEffectSourceParameter("destination"));
                compositeEffect.Sources.Add(new CompositionEffectSourceParameter("source"));
                var effectFactory = _c.CreateEffectFactory(compositeEffect);
                var result = effectFactory.CreateBrush();
                result.SetSourceParameter("destination", SurfaceBrush_10());
                result.SetSourceParameter("source", SurfaceBrush_11());
                return result;
            }

            // - - Layer aggregator
            // ShapeGroup: Ellipse 1 Offset:<-3, 297.75>
            // Ellipse Path 1.EllipseGeometry
            CompositionEllipseGeometry Ellipse_60p5x4p75()
            {
                var result = _c.CreateEllipseGeometry();
                result.Radius = new Vector2(60.5F, 4.75F);
                return result;
            }

            // - - Layer aggregator
            // ShapeGroup: Ellipse 1 Offset:<6.5, 264>
            // Ellipse Path 1.EllipseGeometry
            CompositionEllipseGeometry Ellipse_191p5x17()
            {
                var result = _c.CreateEllipseGeometry();
                result.Radius = new Vector2(191.5F, 17F);
                return result;
            }

            CompositionPath Path_00()
            {
                if (_path_00 != null) { return _path_00; }
                var result = _path_00 = new CompositionPath(Geometry_02());
                return result;
            }

            CompositionPath Path_01()
            {
                if (_path_01 != null) { return _path_01; }
                var result = _path_01 = new CompositionPath(Geometry_03());
                return result;
            }

            CompositionPath Path_02()
            {
                if (_path_02 != null) { return _path_02; }
                var result = _path_02 = new CompositionPath(Geometry_05());
                return result;
            }

            CompositionPath Path_03()
            {
                if (_path_03 != null) { return _path_03; }
                var result = _path_03 = new CompositionPath(Geometry_06());
                return result;
            }

            CompositionPath Path_04()
            {
                if (_path_04 != null) { return _path_04; }
                var result = _path_04 = new CompositionPath(Geometry_07());
                return result;
            }

            CompositionPath Path_05()
            {
                if (_path_05 != null) { return _path_05; }
                var result = _path_05 = new CompositionPath(Geometry_09());
                return result;
            }

            CompositionPath Path_06()
            {
                if (_path_06 != null) { return _path_06; }
                var result = _path_06 = new CompositionPath(Geometry_10());
                return result;
            }

            CompositionPath Path_07()
            {
                if (_path_07 != null) { return _path_07; }
                var result = _path_07 = new CompositionPath(Geometry_11());
                return result;
            }

            CompositionPath Path_08()
            {
                if (_path_08 != null) { return _path_08; }
                var result = _path_08 = new CompositionPath(Geometry_13());
                return result;
            }

            CompositionPath Path_09()
            {
                if (_path_09 != null) { return _path_09; }
                var result = _path_09 = new CompositionPath(Geometry_14());
                return result;
            }

            CompositionPath Path_10()
            {
                if (_path_10 != null) { return _path_10; }
                var result = _path_10 = new CompositionPath(Geometry_15());
                return result;
            }

            CompositionPath Path_11()
            {
                if (_path_11 != null) { return _path_11; }
                var result = _path_11 = new CompositionPath(Geometry_16());
                return result;
            }

            CompositionPath Path_12()
            {
                if (_path_12 != null) { return _path_12; }
                var result = _path_12 = new CompositionPath(Geometry_18());
                return result;
            }

            CompositionPath Path_13()
            {
                if (_path_13 != null) { return _path_13; }
                var result = _path_13 = new CompositionPath(Geometry_19());
                return result;
            }

            CompositionPath Path_14()
            {
                if (_path_14 != null) { return _path_14; }
                var result = _path_14 = new CompositionPath(Geometry_63());
                return result;
            }

            // - - Layer aggregator
            // -  Scale:0.7,0.7, Offset:<960, 540>
            // ShapeGroup: Group 1 Offset:<237.88, 144.564>
            CompositionPathGeometry PathGeometry_00()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_00()));
            }

            // - - Layer aggregator
            // -  Scale:0.7,0.7, Offset:<960, 540>
            // Transforms: Layer 39 Outlines Offset:<14.484005, -1.151001>
            CompositionPathGeometry PathGeometry_01()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_01()));
            }

            // - - - - Layer aggregator
            // - - -  Scale:0.7,0.7, Offset:<960, 540>
            // - - Transforms: Head Controler
            // - Transforms: Head
            // Transforms: Left ear Offset:<254.30798, 358.042>
            CompositionPathGeometry PathGeometry_02()
            {
                if (_pathGeometry_02 != null) { return _pathGeometry_02; }
                var result = _pathGeometry_02 = _c.CreatePathGeometry();
                return result;
            }

            // - - - - Layer aggregator
            // - - -  Scale:0.7,0.7, Offset:<960, 540>
            // - - Transforms: Head Controler
            // - Transforms: Head
            // Transforms: Left ear Offset:<254.30798, 358.042>
            CompositionPathGeometry PathGeometry_03()
            {
                if (_pathGeometry_03 != null) { return _pathGeometry_03; }
                var result = _pathGeometry_03 = _c.CreatePathGeometry();
                return result;
            }

            // - - - - Layer aggregator
            // - - -  Scale:0.7,0.7, Offset:<960, 540>
            // - - Transforms: Head Controler
            // - Transforms: Head
            // Transforms: Right ear Offset:<684.11304, 355.501>
            CompositionPathGeometry PathGeometry_04()
            {
                if (_pathGeometry_04 != null) { return _pathGeometry_04; }
                var result = _pathGeometry_04 = _c.CreatePathGeometry();
                return result;
            }

            // - - - - Layer aggregator
            // - - -  Scale:0.7,0.7, Offset:<960, 540>
            // - - Transforms: Head Controler
            // - Transforms: Head
            // Transforms: Right ear Offset:<684.11304, 355.501>
            CompositionPathGeometry PathGeometry_05()
            {
                if (_pathGeometry_05 != null) { return _pathGeometry_05; }
                var result = _pathGeometry_05 = _c.CreatePathGeometry();
                return result;
            }

            // - - - - Layer aggregator
            // - - -  Scale:0.7,0.7, Offset:<960, 540>
            // - - Transforms: Head Controler
            // - Transforms: Head
            // Transforms: Head White Offset:<5.524002, 5.284012>
            CompositionPathGeometry PathGeometry_06()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_20()));
            }

            // - - - - - Layer aggregator
            // - - - -  Scale:0.7,0.7, Offset:<960, 540>
            // - - - Transforms: Head Controler
            // - - Transforms: Head
            // - Transforms: Left Eye
            // ShapeGroup: Group 3 Offset:<37.448, 49.273>
            CompositionPathGeometry PathGeometry_07()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_21()));
            }

            // - - - - - Layer aggregator
            // - - - -  Scale:0.7,0.7, Offset:<960, 540>
            // - - - Transforms: Head Controler
            // - - Transforms: Head
            // - Transforms: Left Eye
            // ShapeGroup: Group 2 Offset:<45.201, 28.023>
            CompositionPathGeometry PathGeometry_08()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_22()));
            }

            // - - - - - Layer aggregator
            // - - - -  Scale:0.7,0.7, Offset:<960, 540>
            // - - - Transforms: Head Controler
            // - - Transforms: Head
            // - Transforms: Left Eye
            // ShapeGroup: Group 1 Offset:<25.963, 76.979>
            CompositionPathGeometry PathGeometry_09()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_23()));
            }

            // - - - - - Layer aggregator
            // - - - -  Scale:0.7,0.7, Offset:<960, 540>
            // - - - Transforms: Head Controler
            // - - Transforms: Head
            // - Transforms: Right Eye
            // ShapeGroup: Group 3 Offset:<37.448, 49.273>
            CompositionPathGeometry PathGeometry_10()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_24()));
            }

            // - - - - - Layer aggregator
            // - - - -  Scale:0.7,0.7, Offset:<960, 540>
            // - - - Transforms: Head Controler
            // - - Transforms: Head
            // - Transforms: Right Eye
            // ShapeGroup: Group 2 Offset:<29.694, 28.023>
            CompositionPathGeometry PathGeometry_11()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_25()));
            }

            // - - - - - Layer aggregator
            // - - - -  Scale:0.7,0.7, Offset:<960, 540>
            // - - - Transforms: Head Controler
            // - - Transforms: Head
            // - Transforms: Right Eye
            // ShapeGroup: Group 1 Offset:<48.932, 76.979>
            CompositionPathGeometry PathGeometry_12()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_26()));
            }

            // - - - - - Layer aggregator
            // - - - -  Scale:0.7,0.7, Offset:<960, 540>
            // - - - Transforms: Head Controler
            // - - Transforms: Head
            // - Transforms: Mouth Outline
            // Transforms: Mouth Offset:<-8.242996, 4.833>
            CompositionPathGeometry PathGeometry_13()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_27()));
            }

            // - - - - Layer aggregator
            // - - -  Scale:0.7,0.7, Offset:<960, 540>
            // - - Transforms: Head Controler
            // - Transforms: Head
            // ShapeGroup: Group 1 Offset:<261.016, 218.068>
            CompositionPathGeometry PathGeometry_14()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_28()));
            }

            // - - - - Layer aggregator
            // - - -  Scale:0.7,0.7, Offset:<960, 540>
            // - - Transforms: Head Controler
            // - Transforms: Head
            // Transforms: left Sing Offset:<116.132996, -63.604>
            CompositionPathGeometry PathGeometry_15()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_29()));
            }

            // - - - - Layer aggregator
            // - - -  Scale:0.7,0.7, Offset:<960, 540>
            // - - Transforms: Head Controler
            // - Transforms: Head
            // Transforms: left Sing Offset:<116.132996, -63.604>
            CompositionPathGeometry PathGeometry_16()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_30()));
            }

            // - - - - Layer aggregator
            // - - -  Scale:0.7,0.7, Offset:<960, 540>
            // - - Transforms: Head Controler
            // - Transforms: Head
            // Transforms: left Sing Offset:<116.132996, -63.604>
            CompositionPathGeometry PathGeometry_17()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_31()));
            }

            // - - - - Layer aggregator
            // - - -  Scale:0.7,0.7, Offset:<960, 540>
            // - - Transforms: Head Controler
            // - Transforms: Head
            // Transforms: Right Sing Offset:<304.233, -63.603>
            CompositionPathGeometry PathGeometry_18()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_32()));
            }

            // - - - - Layer aggregator
            // - - -  Scale:0.7,0.7, Offset:<960, 540>
            // - - Transforms: Head Controler
            // - Transforms: Head
            // Transforms: Right Sing Offset:<304.233, -63.603>
            CompositionPathGeometry PathGeometry_19()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_33()));
            }

            // - - - - Layer aggregator
            // - - -  Scale:0.7,0.7, Offset:<960, 540>
            // - - Transforms: Head Controler
            // - Transforms: Head
            // Transforms: Right Sing Offset:<304.233, -63.603>
            CompositionPathGeometry PathGeometry_20()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_34()));
            }

            // - - - - - Layer aggregator
            // - - - -  Scale:0.7,0.7, Offset:<960, 540>
            // - - - Transforms: Head Controler
            // - - Transforms: Head
            // - Transforms: Mouth Outline
            // ShapeGroup: Group 1 Offset:<186.666, 99.112>
            CompositionPathGeometry PathGeometry_21()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_35()));
            }

            // - - - - - Layer aggregator
            // - - - -  Scale:0.7,0.7, Offset:<960, 540>
            // - - - Transforms: Head Controler
            // - - Transforms: Head
            // - Transforms: Left Eye Bro
            // ShapeGroup: Group 1 Offset:<31.095, 12.947>
            CompositionPathGeometry PathGeometry_22()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_36()));
            }

            // - - - - - Layer aggregator
            // - - - -  Scale:0.7,0.7, Offset:<960, 540>
            // - - - Transforms: Head Controler
            // - - Transforms: Head
            // - Transforms: Roght Eye Bro
            // ShapeGroup: Group 1 Offset:<31.13, 13.023>
            CompositionPathGeometry PathGeometry_23()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_37()));
            }

            // - - - - - - Layer aggregator
            // - - - - -  Scale:0.7,0.7, Offset:<960, 540>
            // - - - - Transforms: Head Controler
            // - - - Transforms: Head
            // - - Transforms: Mouth Outline
            // - Transforms: Left Nose Hole
            // ShapeGroup: Group 1 Offset:<10.075, 12.19>
            CompositionPathGeometry PathGeometry_24()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_38()));
            }

            // - - - - - - Layer aggregator
            // - - - - -  Scale:0.7,0.7, Offset:<960, 540>
            // - - - - Transforms: Head Controler
            // - - - Transforms: Head
            // - - Transforms: Mouth Outline
            // - Transforms: Right Nose Hole
            // ShapeGroup: Group 1 Offset:<10.075, 12.19>
            CompositionPathGeometry PathGeometry_25()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_39()));
            }

            // - - Shape tree root for layer: Staw
            // -  Scale:0.7,0.7, Offset:<960, 540>
            // Transforms: Staw Scale:0.72,1.27, Offset:<0.75, 40.75>
            CompositionPathGeometry PathGeometry_26()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_40()));
            }

            CompositionPathGeometry PathGeometry_27()
            {
                return (_pathGeometry_27 == null)
                    ? _pathGeometry_27 = _c.CreatePathGeometry(new CompositionPath(Geometry_43()))
                    : _pathGeometry_27;
            }

            // - - Shape tree root for layer: Staw 4
            // -  Scale:0.7,0.7, Offset:<960, 540>
            // Transforms: Staw 4 Scale:0.72,1.27, Offset:<0.75, 40.75>
            CompositionPathGeometry PathGeometry_28()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_44()));
            }

            CompositionPathGeometry PathGeometry_29()
            {
                return (_pathGeometry_29 == null)
                    ? _pathGeometry_29 = _c.CreatePathGeometry(new CompositionPath(Geometry_41()))
                    : _pathGeometry_29;
            }

            // - - - - - - Layer aggregator
            // - - - - -  Scale:0.7,0.7, Offset:<960, 540>
            // - - - - Transforms: Head Controler
            // - - - Transforms: Head
            // - - Transforms: Mouth Outline
            // - Transforms: Left Cute
            // ShapeGroup: Group 1 Offset:<13.754, 14.727>
            CompositionPathGeometry PathGeometry_30()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_45()));
            }

            // - - - - - - Layer aggregator
            // - - - - -  Scale:0.7,0.7, Offset:<960, 540>
            // - - - - Transforms: Head Controler
            // - - - Transforms: Head
            // - - Transforms: Mouth Outline
            // - Transforms: Right Cute
            // ShapeGroup: Group 1 Offset:<13.883, 14.667>
            CompositionPathGeometry PathGeometry_31()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_46()));
            }

            // - - - - - - Layer aggregator
            // - - - - -  Scale:0.7,0.7, Offset:<960, 540>
            // - - - - Transforms: Head Controler
            // - - - Transforms: Head
            // - - Transforms: Mouth Outline
            // - Transforms: Smile
            // ShapeGroup: Group 1 Offset:<61.468, 12.387>
            CompositionPathGeometry PathGeometry_32()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_47()));
            }

            // - - Layer aggregator
            // -  Scale:0.7,0.7, Offset:<960, 540>
            // Transforms: Layer 14 Outlines Offset:<-3.7229996, -6.256996>
            CompositionPathGeometry PathGeometry_33()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_48()));
            }

            // - - Layer aggregator
            // -  Scale:0.7,0.7, Offset:<960, 540>
            // Transforms: Layer 13 Outlines Offset:<380.332, -6.2549973>
            CompositionPathGeometry PathGeometry_34()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_49()));
            }

            // - - - Layer aggregator
            // - -  Scale:0.7,0.7, Offset:<960, 540>
            // - Transforms: Left Hand
            // ShapeGroup: Group 2 Offset:<94.803, 76.172>
            CompositionPathGeometry PathGeometry_35()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_50()));
            }

            // - - - Layer aggregator
            // - -  Scale:0.7,0.7, Offset:<960, 540>
            // - Transforms: Left Hand
            // ShapeGroup: Group 1 Offset:<66.97, 57.271>
            CompositionPathGeometry PathGeometry_36()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_51()));
            }

            // - - - Layer aggregator
            // - -  Scale:0.7,0.7, Offset:<960, 540>
            // - Transforms: Right Hand
            // ShapeGroup: Shape 1
            CompositionPathGeometry PathGeometry_37()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_52()));
            }

            // - - - Layer aggregator
            // - -  Scale:0.7,0.7, Offset:<960, 540>
            // - Transforms: Right Hand
            // ShapeGroup: Group 2 Offset:<39.137, 76.526>
            CompositionPathGeometry PathGeometry_38()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_53()));
            }

            // - - - Layer aggregator
            // - -  Scale:0.7,0.7, Offset:<960, 540>
            // - Transforms: Right Hand
            // ShapeGroup: Group 1 Offset:<66.788, 57.448>
            CompositionPathGeometry PathGeometry_39()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_54()));
            }

            // - - - Layer aggregator
            // - -  Scale:0.7,0.7, Offset:<960, 540>
            // - Transforms: Left Leg
            // ShapeGroup: Group 4 Offset:<90.44, 80.253>
            CompositionPathGeometry PathGeometry_40()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_55()));
            }

            // - - - Layer aggregator
            // - -  Scale:0.7,0.7, Offset:<960, 540>
            // - Transforms: Left Leg
            // ShapeGroup: Group 3 Offset:<78.676, 85.838>
            CompositionPathGeometry PathGeometry_41()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_56()));
            }

            // - - - Layer aggregator
            // - -  Scale:0.7,0.7, Offset:<960, 540>
            // - Transforms: Left Leg
            // ShapeGroup: Group 2 Offset:<46.326, 51.621>
            CompositionPathGeometry PathGeometry_42()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_57()));
            }

            // - - - Layer aggregator
            // - -  Scale:0.7,0.7, Offset:<960, 540>
            // - Transforms: Left Leg
            // ShapeGroup: Group 1 Offset:<78.357, 74.44>
            CompositionPathGeometry PathGeometry_43()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_58()));
            }

            // - - - Layer aggregator
            // - -  Scale:0.7,0.7, Offset:<960, 540>
            // - Transforms: Right Leg
            // ShapeGroup: Group 4 Offset:<85.018, 80.249>
            CompositionPathGeometry PathGeometry_44()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_59()));
            }

            // - - - Layer aggregator
            // - -  Scale:0.7,0.7, Offset:<960, 540>
            // - Transforms: Right Leg
            // ShapeGroup: Group 3 Offset:<96.787, 85.834>
            CompositionPathGeometry PathGeometry_45()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_60()));
            }

            // - - - Layer aggregator
            // - -  Scale:0.7,0.7, Offset:<960, 540>
            // - Transforms: Right Leg
            // ShapeGroup: Group 2 Offset:<130.047, 51.264>
            CompositionPathGeometry PathGeometry_46()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_61()));
            }

            // - - - Layer aggregator
            // - -  Scale:0.7,0.7, Offset:<960, 540>
            // - Transforms: Right Leg
            // ShapeGroup: Group 1 Offset:<97.101, 74.439>
            CompositionPathGeometry PathGeometry_47()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_62()));
            }

            // - - - Shape tree root for layer: Milk
            // - -  Scale:0.7,0.7, Offset:<960, 540>
            // - Transforms: Milk Controler
            // Transforms: Milk
            CompositionPathGeometry PathGeometry_48()
            {
                if (_pathGeometry_48 != null) { return _pathGeometry_48; }
                var result = _pathGeometry_48 = _c.CreatePathGeometry();
                return result;
            }

            // - - Shape tree root for layer: Milk
            // -  Scale:0.7,0.7, Offset:<960, 540>
            // Transforms: Milk Offset:<55, -429.694>
            CompositionPathGeometry PathGeometry_49()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_65()));
            }

            // - - Shape tree root for layer: Botle
            // -  Scale:0.7,0.7, Offset:<960, 540>
            // Transforms: Botle Offset:<-48.796, -337.082>
            CompositionPathGeometry PathGeometry_50()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_66()));
            }

            // - - Shape tree root for layer: Botle
            // -  Scale:0.7,0.7, Offset:<960, 540>
            // Transforms: Botle Offset:<-48.796, -337.082>
            CompositionPathGeometry PathGeometry_51()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_67()));
            }

            // - - Shape tree root for layer: Botle
            // -  Scale:0.7,0.7, Offset:<960, 540>
            // Transforms: Botle Offset:<-48.796, -337.082>
            CompositionPathGeometry PathGeometry_52()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_68()));
            }

            CompositionPathGeometry PathGeometry_53()
            {
                return (_pathGeometry_53 == null)
                    ? _pathGeometry_53 = _c.CreatePathGeometry(new CompositionPath(Geometry_69()))
                    : _pathGeometry_53;
            }

            CompositionPathGeometry PathGeometry_54()
            {
                return (_pathGeometry_54 == null)
                    ? _pathGeometry_54 = _c.CreatePathGeometry(new CompositionPath(Geometry_70()))
                    : _pathGeometry_54;
            }

            CompositionPathGeometry PathGeometry_55()
            {
                return (_pathGeometry_55 == null)
                    ? _pathGeometry_55 = _c.CreatePathGeometry(new CompositionPath(Geometry_71()))
                    : _pathGeometry_55;
            }

            CompositionPathGeometry PathGeometry_56()
            {
                return (_pathGeometry_56 == null)
                    ? _pathGeometry_56 = _c.CreatePathGeometry(new CompositionPath(Geometry_72()))
                    : _pathGeometry_56;
            }

            CompositionPathGeometry PathGeometry_57()
            {
                return (_pathGeometry_57 == null)
                    ? _pathGeometry_57 = _c.CreatePathGeometry(new CompositionPath(Geometry_73()))
                    : _pathGeometry_57;
            }

            // - - Shape tree root for layer: Milk Label
            // -  Scale:0.7,0.7, Offset:<960, 540>
            // Transforms: Milk Label Offset:<55.001, -432.444>
            CompositionPathGeometry PathGeometry_58()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_74()));
            }

            // - - Shape tree root for layer: Bottle shadow
            // -  Scale:0.7,0.7, Offset:<960, 540>
            // Transforms: Bottle shadow Offset:<-48.796, -337.082>
            CompositionPathGeometry PathGeometry_59()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_75()));
            }

            // - - Shape tree root for layer: Bottle shadow
            // -  Scale:0.7,0.7, Offset:<960, 540>
            // Transforms: Bottle shadow Offset:<-48.796, -337.082>
            CompositionPathGeometry PathGeometry_60()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_76()));
            }

            // - Layer aggregator
            // Ellipse Path 1
            CompositionSpriteShape SpriteShape_00()
            {
                // Offset:<6.5, 264>
                var geometry = Ellipse_191p5x17();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 6.5F, 264F), ColorBrush_SemiTransparentBlack_0()); ;
                return result;
            }

            // - Layer aggregator
            // Scale:0.7,0.7, Offset:<960, 540>
            // Path 1
            CompositionSpriteShape SpriteShape_01()
            {
                // Offset:<237.88, 144.564>
                var geometry = PathGeometry_00();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 237.880005F, 144.563995F), ColorBrush_White()); ;
                result.StrokeBrush = ColorBrush_AlmostNavy_FF000072();
                result.StrokeMiterLimit = 2F;
                result.StrokeThickness = 9F;
                return result;
            }

            // - Layer aggregator
            // Scale:0.7,0.7, Offset:<960, 540>
            // ShapeGroup: Group 1 Offset:<58.815, 144.313>
            CompositionSpriteShape SpriteShape_02()
            {
                // Offset:<73.299, 143.162>
                var geometry = PathGeometry_01();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 73.2990036F, 143.162003F), ColorBrush_White()); ;
                return result;
            }

            // - - - Layer aggregator
            // - -  Scale:0.7,0.7, Offset:<960, 540>
            // - Transforms: Head Controler
            // Transforms: Head
            // Path 1
            CompositionSpriteShape SpriteShape_03()
            {
                // Offset:<254.30798, 358.042>
                var geometry = PathGeometry_02();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 254.307983F, 358.041992F), ColorBrush_SemiTransparentWhite_0()); ;
                result.StrokeBrush = ColorBrush_SemiTransparentAlmostNavy_FC000072();
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeMiterLimit = 2F;
                result.StrokeThickness = 12F;
                return result;
            }

            // - - - Layer aggregator
            // - -  Scale:0.7,0.7, Offset:<960, 540>
            // - Transforms: Head Controler
            // Transforms: Head
            // Path 1
            CompositionSpriteShape SpriteShape_04()
            {
                // Offset:<254.30798, 358.042>
                var geometry = PathGeometry_03();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 254.307983F, 358.041992F), ColorBrush_SemiTransparentAlmostLightPink_FCFFAFBE()); ;
                result.StrokeBrush = ColorBrush_SemiTransparentAlmostNavy_FC000072();
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeMiterLimit = 2F;
                result.StrokeThickness = 9F;
                return result;
            }

            // - - - Layer aggregator
            // - -  Scale:0.7,0.7, Offset:<960, 540>
            // - Transforms: Head Controler
            // Transforms: Head
            // Path 1
            CompositionSpriteShape SpriteShape_05()
            {
                // Offset:<684.11304, 355.501>
                var geometry = PathGeometry_04();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 684.113037F, 355.501007F), ColorBrush_SemiTransparentWhite_0()); ;
                result.StrokeBrush = ColorBrush_SemiTransparentAlmostNavy_FC000072();
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeMiterLimit = 2F;
                result.StrokeThickness = 12F;
                return result;
            }

            // - - - Layer aggregator
            // - -  Scale:0.7,0.7, Offset:<960, 540>
            // - Transforms: Head Controler
            // Transforms: Head
            // Path 1
            CompositionSpriteShape SpriteShape_06()
            {
                // Offset:<684.11304, 355.501>
                var geometry = PathGeometry_05();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 684.113037F, 355.501007F), ColorBrush_SemiTransparentAlmostLightPink_FCFFAFBE()); ;
                result.StrokeBrush = ColorBrush_SemiTransparentAlmostNavy_FC000072();
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeMiterLimit = 2F;
                result.StrokeThickness = 9F;
                return result;
            }

            // - - - Layer aggregator
            // - -  Scale:0.7,0.7, Offset:<960, 540>
            // - Transforms: Head Controler
            // Transforms: Head
            // ShapeGroup: Group 1 Offset:<254.881, 212.568>
            CompositionSpriteShape SpriteShape_07()
            {
                // Offset:<260.405, 217.852>
                var geometry = PathGeometry_06();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 260.404999F, 217.852005F), ColorBrush_White()); ;
                return result;
            }

            // - - - - Layer aggregator
            // - - -  Scale:0.7,0.7, Offset:<960, 540>
            // - - Transforms: Head Controler
            // - Transforms: Head
            // Transforms: Left Eye
            // ShapeGroup: Group 3 Offset:<37.448, 49.273>
            CompositionSpriteShape SpriteShape_08()
            {
                // Offset:<37.448, 49.273>
                var geometry = PathGeometry_07();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 37.4480019F, 49.2729988F), ColorBrush_AlmostNavy_FF000071()); ;
                return result;
            }

            // - - - - Layer aggregator
            // - - -  Scale:0.7,0.7, Offset:<960, 540>
            // - - Transforms: Head Controler
            // - Transforms: Head
            // Transforms: Left Eye
            // ShapeGroup: Group 2 Offset:<45.201, 28.023>
            CompositionSpriteShape SpriteShape_09()
            {
                // Offset:<45.201, 28.023>
                var geometry = PathGeometry_08();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 45.2010002F, 28.0230007F), ColorBrush_White()); ;
                return result;
            }

            // - - - - Layer aggregator
            // - - -  Scale:0.7,0.7, Offset:<960, 540>
            // - - Transforms: Head Controler
            // - Transforms: Head
            // Transforms: Left Eye
            // ShapeGroup: Group 1 Offset:<25.963, 76.979>
            CompositionSpriteShape SpriteShape_10()
            {
                // Offset:<25.963, 76.979>
                var geometry = PathGeometry_09();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 25.9629993F, 76.9789963F), ColorBrush_AlmostDarkGray_FFB099C5()); ;
                return result;
            }

            // - - - - Layer aggregator
            // - - -  Scale:0.7,0.7, Offset:<960, 540>
            // - - Transforms: Head Controler
            // - Transforms: Head
            // Transforms: Right Eye
            // ShapeGroup: Group 3 Offset:<37.448, 49.273>
            CompositionSpriteShape SpriteShape_11()
            {
                // Offset:<37.448, 49.273>
                var geometry = PathGeometry_10();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 37.4480019F, 49.2729988F), ColorBrush_AlmostNavy_FF000071()); ;
                return result;
            }

            // - - - - Layer aggregator
            // - - -  Scale:0.7,0.7, Offset:<960, 540>
            // - - Transforms: Head Controler
            // - Transforms: Head
            // Transforms: Right Eye
            // ShapeGroup: Group 2 Offset:<29.694, 28.023>
            CompositionSpriteShape SpriteShape_12()
            {
                // Offset:<29.694, 28.023>
                var geometry = PathGeometry_11();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 29.6940002F, 28.0230007F), ColorBrush_White()); ;
                return result;
            }

            // - - - - Layer aggregator
            // - - -  Scale:0.7,0.7, Offset:<960, 540>
            // - - Transforms: Head Controler
            // - Transforms: Head
            // Transforms: Right Eye
            // ShapeGroup: Group 1 Offset:<48.932, 76.979>
            CompositionSpriteShape SpriteShape_13()
            {
                // Offset:<48.932, 76.979>
                var geometry = PathGeometry_12();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 48.9319992F, 76.9789963F), ColorBrush_AlmostDarkGray_FFB099C5()); ;
                return result;
            }

            // - - - - Layer aggregator
            // - - -  Scale:0.7,0.7, Offset:<960, 540>
            // - - Transforms: Head Controler
            // - Transforms: Head
            // Transforms: Mouth Outline
            // ShapeGroup: Group 1 Offset:<194.908, 99.031>
            CompositionSpriteShape SpriteShape_14()
            {
                // Offset:<186.66501, 103.864>
                var geometry = PathGeometry_13();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 186.665009F, 103.863998F), ColorBrush_AlmostLightPink_FFFFAEBD()); ;
                return result;
            }

            // - - - Layer aggregator
            // - -  Scale:0.7,0.7, Offset:<960, 540>
            // - Transforms: Head Controler
            // Transforms: Head
            // ShapeGroup: Group 1 Offset:<261.016, 218.068>
            CompositionSpriteShape SpriteShape_15()
            {
                // Offset:<261.016, 218.068>
                var geometry = PathGeometry_14();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 261.015991F, 218.067993F), ColorBrush_AlmostNavy_FF000071()); ;
                return result;
            }

            // - - - Layer aggregator
            // - -  Scale:0.7,0.7, Offset:<960, 540>
            // - Transforms: Head Controler
            // Transforms: Head
            // ShapeGroup: Group 3 Offset:<43.712, 53.394>
            CompositionSpriteShape SpriteShape_16()
            {
                // Offset:<159.845, -10.209999>
                var geometry = PathGeometry_15();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 159.845001F, -10.2099991F), ColorBrush_AlmostGoldenrod_FFECD12E()); ;
                return result;
            }

            // - - - Layer aggregator
            // - -  Scale:0.7,0.7, Offset:<960, 540>
            // - Transforms: Head Controler
            // Transforms: Head
            // ShapeGroup: Group 2 Offset:<25.176, 52.655>
            CompositionSpriteShape SpriteShape_17()
            {
                // Offset:<141.30899, -10.949001>
                var geometry = PathGeometry_16();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 141.30899F, -10.9490013F), ColorBrush_White()); ;
                return result;
            }

            // - - - Layer aggregator
            // - -  Scale:0.7,0.7, Offset:<960, 540>
            // - Transforms: Head Controler
            // Transforms: Head
            // ShapeGroup: Group 1 Offset:<44.125, 52.055>
            CompositionSpriteShape SpriteShape_18()
            {
                // Offset:<160.258, -11.549>
                var geometry = PathGeometry_17();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 160.257996F, -11.5489998F), ColorBrush_AlmostNavy_FF000071()); ;
                return result;
            }

            // - - - Layer aggregator
            // - -  Scale:0.7,0.7, Offset:<960, 540>
            // - Transforms: Head Controler
            // Transforms: Head
            // ShapeGroup: Group 3 Offset:<44.537, 53.393>
            CompositionSpriteShape SpriteShape_19()
            {
                // Offset:<348.77, -10.209999>
                var geometry = PathGeometry_18();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 348.769989F, -10.2099991F), ColorBrush_AlmostGoldenrod_FFECD12E()); ;
                return result;
            }

            // - - - Layer aggregator
            // - -  Scale:0.7,0.7, Offset:<960, 540>
            // - Transforms: Head Controler
            // Transforms: Head
            // ShapeGroup: Group 2 Offset:<43.732, 49.475>
            CompositionSpriteShape SpriteShape_20()
            {
                // Offset:<347.965, -14.128002>
                var geometry = PathGeometry_19();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 347.964996F, -14.1280022F), ColorBrush_White()); ;
                return result;
            }

            // - - - Layer aggregator
            // - -  Scale:0.7,0.7, Offset:<960, 540>
            // - Transforms: Head Controler
            // Transforms: Head
            // ShapeGroup: Group 1 Offset:<44.125, 52.055>
            CompositionSpriteShape SpriteShape_21()
            {
                // Offset:<348.358, -11.548>
                var geometry = PathGeometry_20();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 348.358002F, -11.5480003F), ColorBrush_AlmostNavy_FF000071()); ;
                return result;
            }

            // - - - - Layer aggregator
            // - - -  Scale:0.7,0.7, Offset:<960, 540>
            // - - Transforms: Head Controler
            // - Transforms: Head
            // Transforms: Mouth Outline
            // ShapeGroup: Group 1 Offset:<186.666, 99.112>
            CompositionSpriteShape SpriteShape_22()
            {
                // Offset:<186.666, 99.112>
                var geometry = PathGeometry_21();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 186.666F, 99.1119995F), ColorBrush_AlmostNavy_FF000071()); ;
                return result;
            }

            // - - - - Layer aggregator
            // - - -  Scale:0.7,0.7, Offset:<960, 540>
            // - - Transforms: Head Controler
            // - Transforms: Head
            // Transforms: Left Eye Bro
            // ShapeGroup: Group 1 Offset:<31.095, 12.947>
            CompositionSpriteShape SpriteShape_23()
            {
                // Offset:<31.095, 12.947>
                var geometry = PathGeometry_22();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 31.0949993F, 12.9469995F), ColorBrush_AlmostNavy_FF000071()); ;
                return result;
            }

            // - - - - Layer aggregator
            // - - -  Scale:0.7,0.7, Offset:<960, 540>
            // - - Transforms: Head Controler
            // - Transforms: Head
            // Transforms: Roght Eye Bro
            // ShapeGroup: Group 1 Offset:<31.13, 13.023>
            CompositionSpriteShape SpriteShape_24()
            {
                // Offset:<31.13, 13.023>
                var geometry = PathGeometry_23();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 31.1299992F, 13.0229998F), ColorBrush_AlmostNavy_FF000071()); ;
                return result;
            }

            // - - - - - Layer aggregator
            // - - - -  Scale:0.7,0.7, Offset:<960, 540>
            // - - - Transforms: Head Controler
            // - - Transforms: Head
            // - Transforms: Mouth Outline
            // Transforms: Left Nose Hole
            // ShapeGroup: Group 1 Offset:<10.075, 12.19>
            CompositionSpriteShape SpriteShape_25()
            {
                // Offset:<10.075, 12.19>
                var geometry = PathGeometry_24();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 10.0749998F, 12.1899996F), ColorBrush_AlmostNavy_FF000071()); ;
                return result;
            }

            // - - - - - Layer aggregator
            // - - - -  Scale:0.7,0.7, Offset:<960, 540>
            // - - - Transforms: Head Controler
            // - - Transforms: Head
            // - Transforms: Mouth Outline
            // Transforms: Right Nose Hole
            // ShapeGroup: Group 1 Offset:<10.075, 12.19>
            CompositionSpriteShape SpriteShape_26()
            {
                // Offset:<10.075, 12.19>
                var geometry = PathGeometry_25();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 10.0749998F, 12.1899996F), ColorBrush_AlmostNavy_FF000071()); ;
                return result;
            }

            // - Shape tree root for layer: Staw
            // Scale:0.7,0.7, Offset:<960, 540>
            // Transforms for Staw Scale:0.72,1.27, Offset:<0.75, 40.75>
            CompositionSpriteShape SpriteShape_27()
            {
                // Offset:<7.1605997, -0.52759933>, Scale:<0.72, 1.2700001>
                var geometry = PathGeometry_26();
                var result = CreateSpriteShape(geometry, new Matrix3x2(0.720000029F, 0F, 0F, 1.26999998F, 7.16059971F, -0.527599335F), ColorBrush_AlmostRed_FFDF0000()); ;
                result.StrokeBrush = ColorBrush_AlmostNavy_FF000072();
                result.StrokeMiterLimit = 2F;
                result.StrokeThickness = 11F;
                return result;
            }

            // - Shape tree root for layer: Shape Layer 1
            // Scale:0.7,0.7, Offset:<960, 540>
            // Path 1
            CompositionSpriteShape SpriteShape_28()
            {
                // Offset:<-233.03572, 8.95549>, Scale:<0.72, 1.2700001>
                var geometry = PathGeometry_27();
                var result = CreateSpriteShape(geometry, new Matrix3x2(0.720000029F, 0F, 0F, 1.26999998F, -233.035721F, 8.95549011F), ColorBrush_AlmostRed_FFDF0000()); ;
                return result;
            }

            // - Shape tree root for layer: Staw 4
            // Scale:0.7,0.7, Offset:<960, 540>
            // Transforms for Staw 4 Scale:0.72,1.27, Offset:<0.75, 40.75>
            CompositionSpriteShape SpriteShape_29()
            {
                // Offset:<7.1605997, -0.52759933>, Scale:<0.72, 1.2700001>
                var geometry = PathGeometry_28();
                var result = CreateSpriteShape(geometry, new Matrix3x2(0.720000029F, 0F, 0F, 1.26999998F, 7.16059971F, -0.527599335F), ColorBrush_AlmostRed_FFDF0000()); ;
                result.StrokeBrush = ColorBrush_AlmostNavy_FF000072();
                result.StrokeMiterLimit = 2F;
                result.StrokeThickness = 11F;
                return result;
            }

            // - Shape tree root for layer: Shape Layer 5
            // Scale:0.7,0.7, Offset:<960, 540>
            // Path 1
            CompositionSpriteShape SpriteShape_30()
            {
                // Offset:<-233.03572, 8.95549>, Scale:<0.72, 1.2700001>
                var geometry = PathGeometry_27();
                var result = CreateSpriteShape(geometry, new Matrix3x2(0.720000029F, 0F, 0F, 1.26999998F, -233.035721F, 8.95549011F), ColorBrush_AlmostRed_FFDF0000()); ;
                return result;
            }

            // - - Shape tree root for layer: Staw 2
            // -  Scale:0.7,0.7, Offset:<960, 540>
            // Transforms: Orignal Straw 2
            // Transforms for Staw 2 Scale:0.72,1.27, Offset:<0.75, 40.75>
            CompositionSpriteShape SpriteShape_31()
            {
                // Offset:<7.1605997, -0.52759933>, Scale:<0.72, 1.2700001>
                var geometry = PathGeometry_29();
                var result = CreateSpriteShape(geometry, new Matrix3x2(0.720000029F, 0F, 0F, 1.26999998F, 7.16059971F, -0.527599335F), ColorBrush_AlmostRed_FFDF0000()); ;
                result.StrokeBrush = ColorBrush_AlmostNavy_FF000072();
                result.StrokeMiterLimit = 2F;
                result.StrokeThickness = 11F;
                return result;
            }

            // - - Shape tree root for layer: Shape Layer 3
            // -  Scale:0.7,0.7, Offset:<960, 540>
            // Transforms: Orignal Straw 2
            // Path 1
            CompositionSpriteShape SpriteShape_32()
            {
                // Offset:<-233.03572, 8.95549>, Scale:<0.72, 1.2700001>
                var geometry = PathGeometry_27();
                var result = CreateSpriteShape(geometry, new Matrix3x2(0.720000029F, 0F, 0F, 1.26999998F, -233.035721F, 8.95549011F), ColorBrush_AlmostRed_FFDF0000()); ;
                return result;
            }

            // - - - - - Layer aggregator
            // - - - -  Scale:0.7,0.7, Offset:<960, 540>
            // - - - Transforms: Head Controler
            // - - Transforms: Head
            // - Transforms: Mouth Outline
            // Transforms: Left Cute
            // ShapeGroup: Group 1 Offset:<13.754, 14.727>
            CompositionSpriteShape SpriteShape_33()
            {
                // Offset:<13.754, 14.727>
                var geometry = PathGeometry_30();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 13.7539997F, 14.7270002F), ColorBrush_AlmostNavy_FF000071()); ;
                return result;
            }

            // - - - - - Layer aggregator
            // - - - -  Scale:0.7,0.7, Offset:<960, 540>
            // - - - Transforms: Head Controler
            // - - Transforms: Head
            // - Transforms: Mouth Outline
            // Transforms: Right Cute
            // ShapeGroup: Group 1 Offset:<13.883, 14.667>
            CompositionSpriteShape SpriteShape_34()
            {
                // Offset:<13.883, 14.667>
                var geometry = PathGeometry_31();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 13.8830004F, 14.6669998F), ColorBrush_AlmostNavy_FF000071()); ;
                return result;
            }

            // - - - - - Layer aggregator
            // - - - -  Scale:0.7,0.7, Offset:<960, 540>
            // - - - Transforms: Head Controler
            // - - Transforms: Head
            // - Transforms: Mouth Outline
            // Transforms: Smile
            // ShapeGroup: Group 1 Offset:<61.468, 12.387>
            CompositionSpriteShape SpriteShape_35()
            {
                // Offset:<61.468, 12.387>
                var geometry = PathGeometry_32();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 61.4679985F, 12.3870001F), ColorBrush_AlmostNavy_FF000071()); ;
                return result;
            }

            // - Layer aggregator
            // Scale:0.7,0.7, Offset:<960, 540>
            // ShapeGroup: Group 1 Offset:<49.634, 113.212>
            CompositionSpriteShape SpriteShape_36()
            {
                // Offset:<45.911, 106.955>
                var geometry = PathGeometry_33();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 45.9109993F, 106.955002F), ColorBrush_AlmostNavy_FF000071()); ;
                return result;
            }

            // - Layer aggregator
            // Scale:0.7,0.7, Offset:<960, 540>
            // ShapeGroup: Group 1 Offset:<49.634, 113.211>
            CompositionSpriteShape SpriteShape_37()
            {
                // Offset:<429.966, 106.956>
                var geometry = PathGeometry_34();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 429.966003F, 106.956001F), ColorBrush_AlmostNavy_FF000071()); ;
                return result;
            }

            // - - Layer aggregator
            // -  Scale:0.7,0.7, Offset:<960, 540>
            // Transforms: Left Hand
            // ShapeGroup: Group 2 Offset:<94.803, 76.172>
            CompositionSpriteShape SpriteShape_38()
            {
                // Offset:<94.803, 76.172>
                var geometry = PathGeometry_35();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 94.8030014F, 76.1719971F), ColorBrush_AlmostNavy_FF000071()); ;
                return result;
            }

            // - - Layer aggregator
            // -  Scale:0.7,0.7, Offset:<960, 540>
            // Transforms: Left Hand
            // ShapeGroup: Group 1 Offset:<66.97, 57.271>
            CompositionSpriteShape SpriteShape_39()
            {
                // Offset:<66.97, 57.271>
                var geometry = PathGeometry_36();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 66.9700012F, 57.2709999F), ColorBrush_AlmostNavy_FF000071()); ;
                return result;
            }

            // - - Layer aggregator
            // -  Scale:0.7,0.7, Offset:<960, 540>
            // Transforms: Right Hand
            // Path 1
            CompositionSpriteShape SpriteShape_40()
            {
                var result = _c.CreateSpriteShape(PathGeometry_37());
                result.FillBrush = ColorBrush_White();
                return result;
            }

            // - - Layer aggregator
            // -  Scale:0.7,0.7, Offset:<960, 540>
            // Transforms: Right Hand
            // ShapeGroup: Group 2 Offset:<39.137, 76.526>
            CompositionSpriteShape SpriteShape_41()
            {
                // Offset:<39.137, 76.526>
                var geometry = PathGeometry_38();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 39.137001F, 76.526001F), ColorBrush_AlmostNavy_FF000071()); ;
                return result;
            }

            // - - Layer aggregator
            // -  Scale:0.7,0.7, Offset:<960, 540>
            // Transforms: Right Hand
            // ShapeGroup: Group 1 Offset:<66.788, 57.448>
            CompositionSpriteShape SpriteShape_42()
            {
                // Offset:<66.788, 57.448>
                var geometry = PathGeometry_39();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 66.788002F, 57.4480019F), ColorBrush_AlmostNavy_FF000071()); ;
                return result;
            }

            // - - Layer aggregator
            // -  Scale:0.7,0.7, Offset:<960, 540>
            // Transforms: Left Leg
            // ShapeGroup: Group 4 Offset:<90.44, 80.253>
            CompositionSpriteShape SpriteShape_43()
            {
                // Offset:<90.44, 80.253>
                var geometry = PathGeometry_40();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 90.4400024F, 80.2529984F), ColorBrush_AlmostLightPink_FFFFAEBD()); ;
                return result;
            }

            // - - Layer aggregator
            // -  Scale:0.7,0.7, Offset:<960, 540>
            // Transforms: Left Leg
            // ShapeGroup: Group 3 Offset:<78.676, 85.838>
            CompositionSpriteShape SpriteShape_44()
            {
                // Offset:<78.676, 85.838>
                var geometry = PathGeometry_41();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 78.6760025F, 85.8379974F), ColorBrush_AlmostNavy_FF000071()); ;
                return result;
            }

            // - - Layer aggregator
            // -  Scale:0.7,0.7, Offset:<960, 540>
            // Transforms: Left Leg
            // ShapeGroup: Group 2 Offset:<46.326, 51.621>
            CompositionSpriteShape SpriteShape_45()
            {
                // Offset:<46.326, 51.621>
                var geometry = PathGeometry_42();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 46.3260002F, 51.6209984F), ColorBrush_AlmostNavy_FF000071()); ;
                return result;
            }

            // - - Layer aggregator
            // -  Scale:0.7,0.7, Offset:<960, 540>
            // Transforms: Left Leg
            // ShapeGroup: Group 1 Offset:<78.357, 74.44>
            CompositionSpriteShape SpriteShape_46()
            {
                // Offset:<78.357, 74.44>
                var geometry = PathGeometry_43();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 78.3570023F, 74.4400024F), ColorBrush_AlmostNavy_FF000071()); ;
                return result;
            }

            // - - Layer aggregator
            // -  Scale:0.7,0.7, Offset:<960, 540>
            // Transforms: Right Leg
            // ShapeGroup: Group 4 Offset:<85.018, 80.249>
            CompositionSpriteShape SpriteShape_47()
            {
                // Offset:<85.018, 80.249>
                var geometry = PathGeometry_44();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 85.0179977F, 80.2490005F), ColorBrush_AlmostLightPink_FFFFAEBD()); ;
                return result;
            }

            // - - Layer aggregator
            // -  Scale:0.7,0.7, Offset:<960, 540>
            // Transforms: Right Leg
            // ShapeGroup: Group 3 Offset:<96.787, 85.834>
            CompositionSpriteShape SpriteShape_48()
            {
                // Offset:<96.787, 85.834>
                var geometry = PathGeometry_45();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 96.7870026F, 85.8339996F), ColorBrush_AlmostNavy_FF000071()); ;
                return result;
            }

            // - - Layer aggregator
            // -  Scale:0.7,0.7, Offset:<960, 540>
            // Transforms: Right Leg
            // ShapeGroup: Group 2 Offset:<130.047, 51.264>
            CompositionSpriteShape SpriteShape_49()
            {
                // Offset:<130.047, 51.264>
                var geometry = PathGeometry_46();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 130.046997F, 51.2639999F), ColorBrush_AlmostNavy_FF000071()); ;
                return result;
            }

            // - - Layer aggregator
            // -  Scale:0.7,0.7, Offset:<960, 540>
            // Transforms: Right Leg
            // ShapeGroup: Group 1 Offset:<97.101, 74.439>
            CompositionSpriteShape SpriteShape_50()
            {
                // Offset:<97.101, 74.439>
                var geometry = PathGeometry_47();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 97.1009979F, 74.439003F), ColorBrush_AlmostNavy_FF000071()); ;
                return result;
            }

            // - Layer aggregator
            // Ellipse Path 1
            CompositionSpriteShape SpriteShape_51()
            {
                // Offset:<-3, 297.75>
                var geometry = Ellipse_60p5x4p75();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, -3F, 297.75F), ColorBrush_SemiTransparentBlack_1()); ;
                return result;
            }

            // - - Shape tree root for layer: Milk
            // -  Scale:0.7,0.7, Offset:<960, 540>
            // Transforms: Milk Controler
            // Path 1
            CompositionSpriteShape SpriteShape_52()
            {
                if (_spriteShape_52 != null) { return _spriteShape_52; }
                var result = _spriteShape_52 = _c.CreateSpriteShape(PathGeometry_48());
                result.FillBrush = ColorBrush_White();
                result.StrokeBrush = ColorBrush_AlmostBlack_FF232323();
                result.StrokeMiterLimit = 2F;
                result.StrokeThickness = 12F;
                return result;
            }

            // - Shape tree root for layer: Milk
            // Scale:0.7,0.7, Offset:<960, 540>
            // Path 1
            CompositionSpriteShape SpriteShape_53()
            {
                // Offset:<52.25, -80.819>
                var geometry = PathGeometry_49();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 52.25F, -80.8190002F), ColorBrush_White()); ;
                return result;
            }

            // - Shape tree root for layer: Botle
            // Scale:0.7,0.7, Offset:<960, 540>
            // ShapeGroup: Group 11 Offset:<100.963, 187.937>
            CompositionSpriteShape SpriteShape_54()
            {
                // Offset:<52.166996, -149.145>
                var geometry = PathGeometry_50();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 52.166996F, -149.145004F), ColorBrush_AlmostNavy_FF000071()); ;
                return result;
            }

            // - Shape tree root for layer: Botle
            // Scale:0.7,0.7, Offset:<960, 540>
            // ShapeGroup: Group 8 Offset:<104.502, 23.706>
            CompositionSpriteShape SpriteShape_55()
            {
                // Offset:<55.705997, -313.376>
                var geometry = PathGeometry_51();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 55.7059975F, -313.376007F), ColorBrush_AlmostOrange_FFFF9B00()); ;
                return result;
            }

            // - Shape tree root for layer: Botle
            // Scale:0.7,0.7, Offset:<960, 540>
            // ShapeGroup: Group 7 Offset:<104.505, 23.707>
            CompositionSpriteShape SpriteShape_56()
            {
                // Offset:<55.708996, -313.375>
                var geometry = PathGeometry_52();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 55.7089958F, -313.375F), ColorBrush_AlmostNavy_FF000071()); ;
                return result;
            }

            // - - - PreComp layer: Milk Lable
            // - - Transforms for Bottle Controller
            // Layer aggregator
            // ShapeGroup: Group 6 Offset:<104.505, 251.624>
            CompositionSpriteShape SpriteShape_57()
            {
                // Offset:<960.4962, 780.9656>, Scale:<0.7, 0.7>
                var geometry = PathGeometry_53();
                var result = CreateSpriteShape(geometry, new Matrix3x2(0.699999988F, 0F, 0F, 0.699999988F, 960.496216F, 780.965576F), ColorBrush_AlmostNavy_FF000071()); ;
                return result;
            }

            // - - - PreComp layer: Milk Lable
            // - - Transforms for Bottle Controller
            // Layer aggregator
            // ShapeGroup: Group 5 Offset:<84.745, 250.2>
            CompositionSpriteShape SpriteShape_58()
            {
                // Offset:<946.6642, 779.9688>, Scale:<0.7, 0.7>
                var geometry = PathGeometry_54();
                var result = CreateSpriteShape(geometry, new Matrix3x2(0.699999988F, 0F, 0F, 0.699999988F, 946.664185F, 779.968811F), ColorBrush_White()); ;
                return result;
            }

            // - - - PreComp layer: Milk Lable
            // - - Transforms for Bottle Controller
            // Layer aggregator
            // ShapeGroup: Group 4 Offset:<102.053, 250.169>
            CompositionSpriteShape SpriteShape_59()
            {
                // Offset:<958.7798, 779.9471>, Scale:<0.7, 0.7>
                var geometry = PathGeometry_55();
                var result = CreateSpriteShape(geometry, new Matrix3x2(0.699999988F, 0F, 0F, 0.699999988F, 958.779785F, 779.947083F), ColorBrush_White()); ;
                return result;
            }

            // - - - PreComp layer: Milk Lable
            // - - Transforms for Bottle Controller
            // Layer aggregator
            // ShapeGroup: Group 3 Offset:<113.972, 249.582>
            CompositionSpriteShape SpriteShape_60()
            {
                // Offset:<967.1231, 779.5362>, Scale:<0.7, 0.7>
                var geometry = PathGeometry_56();
                var result = CreateSpriteShape(geometry, new Matrix3x2(0.699999988F, 0F, 0F, 0.699999988F, 967.123108F, 779.536194F), ColorBrush_White()); ;
                return result;
            }

            // - - - PreComp layer: Milk Lable
            // - - Transforms for Bottle Controller
            // Layer aggregator
            // ShapeGroup: Group 2 Offset:<131.25, 250.323>
            CompositionSpriteShape SpriteShape_61()
            {
                // Offset:<979.2177, 780.0549>, Scale:<0.7, 0.7>
                var geometry = PathGeometry_57();
                var result = CreateSpriteShape(geometry, new Matrix3x2(0.699999988F, 0F, 0F, 0.699999988F, 979.217712F, 780.054871F), ColorBrush_White()); ;
                return result;
            }

            // - - - PreComp layer: Milk Lable
            // - - Transforms for Bottle Controller
            // Layer aggregator
            // ShapeGroup: Group 6 Offset:<104.505, 251.624>
            CompositionSpriteShape SpriteShape_62()
            {
                // Offset:<1092.9962, 780.9656>, Scale:<0.7, 0.7>
                var geometry = PathGeometry_53();
                var result = CreateSpriteShape(geometry, new Matrix3x2(0.699999988F, 0F, 0F, 0.699999988F, 1092.99622F, 780.965576F), ColorBrush_AlmostNavy_FF000071()); ;
                return result;
            }

            // - - - PreComp layer: Milk Lable
            // - - Transforms for Bottle Controller
            // Layer aggregator
            // ShapeGroup: Group 5 Offset:<84.745, 250.2>
            CompositionSpriteShape SpriteShape_63()
            {
                // Offset:<1079.1642, 779.9688>, Scale:<0.7, 0.7>
                var geometry = PathGeometry_54();
                var result = CreateSpriteShape(geometry, new Matrix3x2(0.699999988F, 0F, 0F, 0.699999988F, 1079.16418F, 779.968811F), ColorBrush_White()); ;
                return result;
            }

            // - - - PreComp layer: Milk Lable
            // - - Transforms for Bottle Controller
            // Layer aggregator
            // ShapeGroup: Group 4 Offset:<102.053, 250.169>
            CompositionSpriteShape SpriteShape_64()
            {
                // Offset:<1091.2798, 779.9471>, Scale:<0.7, 0.7>
                var geometry = PathGeometry_55();
                var result = CreateSpriteShape(geometry, new Matrix3x2(0.699999988F, 0F, 0F, 0.699999988F, 1091.27979F, 779.947083F), ColorBrush_White()); ;
                return result;
            }

            // - - - PreComp layer: Milk Lable
            // - - Transforms for Bottle Controller
            // Layer aggregator
            // ShapeGroup: Group 3 Offset:<113.972, 249.582>
            CompositionSpriteShape SpriteShape_65()
            {
                // Offset:<1099.623, 779.5362>, Scale:<0.7, 0.7>
                var geometry = PathGeometry_56();
                var result = CreateSpriteShape(geometry, new Matrix3x2(0.699999988F, 0F, 0F, 0.699999988F, 1099.62305F, 779.536194F), ColorBrush_White()); ;
                return result;
            }

            // - - - PreComp layer: Milk Lable
            // - - Transforms for Bottle Controller
            // Layer aggregator
            // ShapeGroup: Group 2 Offset:<131.25, 250.323>
            CompositionSpriteShape SpriteShape_66()
            {
                // Offset:<1111.7178, 780.0549>, Scale:<0.7, 0.7>
                var geometry = PathGeometry_57();
                var result = CreateSpriteShape(geometry, new Matrix3x2(0.699999988F, 0F, 0F, 0.699999988F, 1111.71777F, 780.054871F), ColorBrush_White()); ;
                return result;
            }

            // - - - PreComp layer: Milk Lable
            // - - Transforms for Bottle Controller
            // Layer aggregator
            // ShapeGroup: Group 6 Offset:<104.505, 251.624>
            CompositionSpriteShape SpriteShape_67()
            {
                // Offset:<1232.4962, 780.9656>, Scale:<0.7, 0.7>
                var geometry = PathGeometry_53();
                var result = CreateSpriteShape(geometry, new Matrix3x2(0.699999988F, 0F, 0F, 0.699999988F, 1232.49622F, 780.965576F), ColorBrush_AlmostNavy_FF000071()); ;
                return result;
            }

            // - - - PreComp layer: Milk Lable
            // - - Transforms for Bottle Controller
            // Layer aggregator
            // ShapeGroup: Group 5 Offset:<84.745, 250.2>
            CompositionSpriteShape SpriteShape_68()
            {
                // Offset:<1218.6643, 779.9688>, Scale:<0.7, 0.7>
                var geometry = PathGeometry_54();
                var result = CreateSpriteShape(geometry, new Matrix3x2(0.699999988F, 0F, 0F, 0.699999988F, 1218.66431F, 779.968811F), ColorBrush_White()); ;
                return result;
            }

            // - - - PreComp layer: Milk Lable
            // - - Transforms for Bottle Controller
            // Layer aggregator
            // ShapeGroup: Group 4 Offset:<102.053, 250.169>
            CompositionSpriteShape SpriteShape_69()
            {
                // Offset:<1230.7799, 779.9471>, Scale:<0.7, 0.7>
                var geometry = PathGeometry_55();
                var result = CreateSpriteShape(geometry, new Matrix3x2(0.699999988F, 0F, 0F, 0.699999988F, 1230.77991F, 779.947083F), ColorBrush_White()); ;
                return result;
            }

            // - - - PreComp layer: Milk Lable
            // - - Transforms for Bottle Controller
            // Layer aggregator
            // ShapeGroup: Group 3 Offset:<113.972, 249.582>
            CompositionSpriteShape SpriteShape_70()
            {
                // Offset:<1239.1232, 779.5362>, Scale:<0.7, 0.7>
                var geometry = PathGeometry_56();
                var result = CreateSpriteShape(geometry, new Matrix3x2(0.699999988F, 0F, 0F, 0.699999988F, 1239.12317F, 779.536194F), ColorBrush_White()); ;
                return result;
            }

            // - - - PreComp layer: Milk Lable
            // - - Transforms for Bottle Controller
            // Layer aggregator
            // ShapeGroup: Group 2 Offset:<131.25, 250.323>
            CompositionSpriteShape SpriteShape_71()
            {
                // Offset:<1251.2178, 780.0549>, Scale:<0.7, 0.7>
                var geometry = PathGeometry_57();
                var result = CreateSpriteShape(geometry, new Matrix3x2(0.699999988F, 0F, 0F, 0.699999988F, 1251.21777F, 780.054871F), ColorBrush_White()); ;
                return result;
            }

            // - - - PreComp layer: Milk Lable
            // - - Transforms for Bottle Controller
            // Layer aggregator
            // ShapeGroup: Group 6 Offset:<104.505, 251.624>
            CompositionSpriteShape SpriteShape_72()
            {
                // Offset:<1374.4962, 780.9656>, Scale:<0.7, 0.7>
                var geometry = PathGeometry_53();
                var result = CreateSpriteShape(geometry, new Matrix3x2(0.699999988F, 0F, 0F, 0.699999988F, 1374.49622F, 780.965576F), ColorBrush_AlmostNavy_FF000071()); ;
                return result;
            }

            // - - - PreComp layer: Milk Lable
            // - - Transforms for Bottle Controller
            // Layer aggregator
            // ShapeGroup: Group 5 Offset:<84.745, 250.2>
            CompositionSpriteShape SpriteShape_73()
            {
                // Offset:<1360.6643, 779.9688>, Scale:<0.7, 0.7>
                var geometry = PathGeometry_54();
                var result = CreateSpriteShape(geometry, new Matrix3x2(0.699999988F, 0F, 0F, 0.699999988F, 1360.66431F, 779.968811F), ColorBrush_White()); ;
                return result;
            }

            // - - - PreComp layer: Milk Lable
            // - - Transforms for Bottle Controller
            // Layer aggregator
            // ShapeGroup: Group 4 Offset:<102.053, 250.169>
            CompositionSpriteShape SpriteShape_74()
            {
                // Offset:<1372.7799, 779.9471>, Scale:<0.7, 0.7>
                var geometry = PathGeometry_55();
                var result = CreateSpriteShape(geometry, new Matrix3x2(0.699999988F, 0F, 0F, 0.699999988F, 1372.77991F, 779.947083F), ColorBrush_White()); ;
                return result;
            }

            // - - - PreComp layer: Milk Lable
            // - - Transforms for Bottle Controller
            // Layer aggregator
            // ShapeGroup: Group 3 Offset:<113.972, 249.582>
            CompositionSpriteShape SpriteShape_75()
            {
                // Offset:<1381.1232, 779.5362>, Scale:<0.7, 0.7>
                var geometry = PathGeometry_56();
                var result = CreateSpriteShape(geometry, new Matrix3x2(0.699999988F, 0F, 0F, 0.699999988F, 1381.12317F, 779.536194F), ColorBrush_White()); ;
                return result;
            }

            // - - - PreComp layer: Milk Lable
            // - - Transforms for Bottle Controller
            // Layer aggregator
            // ShapeGroup: Group 2 Offset:<131.25, 250.323>
            CompositionSpriteShape SpriteShape_76()
            {
                // Offset:<1393.2178, 780.0549>, Scale:<0.7, 0.7>
                var geometry = PathGeometry_57();
                var result = CreateSpriteShape(geometry, new Matrix3x2(0.699999988F, 0F, 0F, 0.699999988F, 1393.21777F, 780.054871F), ColorBrush_White()); ;
                return result;
            }

            // - - - PreComp layer: Milk Lable
            // - - Transforms for Bottle Controller
            // Layer aggregator
            // ShapeGroup: Group 6 Offset:<104.505, 251.624>
            CompositionSpriteShape SpriteShape_77()
            {
                // Offset:<1525.4962, 780.9656>, Scale:<0.7, 0.7>
                var geometry = PathGeometry_53();
                var result = CreateSpriteShape(geometry, new Matrix3x2(0.699999988F, 0F, 0F, 0.699999988F, 1525.49622F, 780.965576F), ColorBrush_AlmostNavy_FF000071()); ;
                return result;
            }

            // - - - PreComp layer: Milk Lable
            // - - Transforms for Bottle Controller
            // Layer aggregator
            // ShapeGroup: Group 5 Offset:<84.745, 250.2>
            CompositionSpriteShape SpriteShape_78()
            {
                // Offset:<1511.6643, 779.9688>, Scale:<0.7, 0.7>
                var geometry = PathGeometry_54();
                var result = CreateSpriteShape(geometry, new Matrix3x2(0.699999988F, 0F, 0F, 0.699999988F, 1511.66431F, 779.968811F), ColorBrush_White()); ;
                return result;
            }

            // - - - PreComp layer: Milk Lable
            // - - Transforms for Bottle Controller
            // Layer aggregator
            // ShapeGroup: Group 4 Offset:<102.053, 250.169>
            CompositionSpriteShape SpriteShape_79()
            {
                // Offset:<1523.7799, 779.9471>, Scale:<0.7, 0.7>
                var geometry = PathGeometry_55();
                var result = CreateSpriteShape(geometry, new Matrix3x2(0.699999988F, 0F, 0F, 0.699999988F, 1523.77991F, 779.947083F), ColorBrush_White()); ;
                return result;
            }

            // - - - PreComp layer: Milk Lable
            // - - Transforms for Bottle Controller
            // Layer aggregator
            // ShapeGroup: Group 3 Offset:<113.972, 249.582>
            CompositionSpriteShape SpriteShape_80()
            {
                // Offset:<1532.1232, 779.5362>, Scale:<0.7, 0.7>
                var geometry = PathGeometry_56();
                var result = CreateSpriteShape(geometry, new Matrix3x2(0.699999988F, 0F, 0F, 0.699999988F, 1532.12317F, 779.536194F), ColorBrush_White()); ;
                return result;
            }

            // - - - PreComp layer: Milk Lable
            // - - Transforms for Bottle Controller
            // Layer aggregator
            // ShapeGroup: Group 2 Offset:<131.25, 250.323>
            CompositionSpriteShape SpriteShape_81()
            {
                // Offset:<1544.2178, 780.0549>, Scale:<0.7, 0.7>
                var geometry = PathGeometry_57();
                var result = CreateSpriteShape(geometry, new Matrix3x2(0.699999988F, 0F, 0F, 0.699999988F, 1544.21777F, 780.054871F), ColorBrush_White()); ;
                return result;
            }

            // - - - PreComp layer: Milk Lable
            // - - Transforms for Bottle Controller
            // Layer aggregator
            // ShapeGroup: Group 6 Offset:<104.505, 251.624>
            CompositionSpriteShape SpriteShape_82()
            {
                // Offset:<1655.4962, 780.9656>, Scale:<0.7, 0.7>
                var geometry = PathGeometry_53();
                var result = CreateSpriteShape(geometry, new Matrix3x2(0.699999988F, 0F, 0F, 0.699999988F, 1655.49622F, 780.965576F), ColorBrush_AlmostNavy_FF000071()); ;
                return result;
            }

            // - - - PreComp layer: Milk Lable
            // - - Transforms for Bottle Controller
            // Layer aggregator
            // ShapeGroup: Group 5 Offset:<84.745, 250.2>
            CompositionSpriteShape SpriteShape_83()
            {
                // Offset:<1641.6643, 779.9688>, Scale:<0.7, 0.7>
                var geometry = PathGeometry_54();
                var result = CreateSpriteShape(geometry, new Matrix3x2(0.699999988F, 0F, 0F, 0.699999988F, 1641.66431F, 779.968811F), ColorBrush_White()); ;
                return result;
            }

            // - - - PreComp layer: Milk Lable
            // - - Transforms for Bottle Controller
            // Layer aggregator
            // ShapeGroup: Group 4 Offset:<102.053, 250.169>
            CompositionSpriteShape SpriteShape_84()
            {
                // Offset:<1653.7799, 779.9471>, Scale:<0.7, 0.7>
                var geometry = PathGeometry_55();
                var result = CreateSpriteShape(geometry, new Matrix3x2(0.699999988F, 0F, 0F, 0.699999988F, 1653.77991F, 779.947083F), ColorBrush_White()); ;
                return result;
            }

            // - - - PreComp layer: Milk Lable
            // - - Transforms for Bottle Controller
            // Layer aggregator
            // ShapeGroup: Group 3 Offset:<113.972, 249.582>
            CompositionSpriteShape SpriteShape_85()
            {
                // Offset:<1662.1232, 779.5362>, Scale:<0.7, 0.7>
                var geometry = PathGeometry_56();
                var result = CreateSpriteShape(geometry, new Matrix3x2(0.699999988F, 0F, 0F, 0.699999988F, 1662.12317F, 779.536194F), ColorBrush_White()); ;
                return result;
            }

            // - - - PreComp layer: Milk Lable
            // - - Transforms for Bottle Controller
            // Layer aggregator
            // ShapeGroup: Group 2 Offset:<131.25, 250.323>
            CompositionSpriteShape SpriteShape_86()
            {
                // Offset:<1674.2178, 780.0549>, Scale:<0.7, 0.7>
                var geometry = PathGeometry_57();
                var result = CreateSpriteShape(geometry, new Matrix3x2(0.699999988F, 0F, 0F, 0.699999988F, 1674.21777F, 780.054871F), ColorBrush_White()); ;
                return result;
            }

            // - - - PreComp layer: Milk Lable
            // - - Transforms for Bottle Controller
            // Layer aggregator
            // ShapeGroup: Group 6 Offset:<104.505, 251.624>
            CompositionSpriteShape SpriteShape_87()
            {
                // Offset:<1788.4962, 780.9656>, Scale:<0.7, 0.7>
                var geometry = PathGeometry_53();
                var result = CreateSpriteShape(geometry, new Matrix3x2(0.699999988F, 0F, 0F, 0.699999988F, 1788.49622F, 780.965576F), ColorBrush_AlmostNavy_FF000071()); ;
                return result;
            }

            // - - - PreComp layer: Milk Lable
            // - - Transforms for Bottle Controller
            // Layer aggregator
            // ShapeGroup: Group 5 Offset:<84.745, 250.2>
            CompositionSpriteShape SpriteShape_88()
            {
                // Offset:<1774.6643, 779.9688>, Scale:<0.7, 0.7>
                var geometry = PathGeometry_54();
                var result = CreateSpriteShape(geometry, new Matrix3x2(0.699999988F, 0F, 0F, 0.699999988F, 1774.66431F, 779.968811F), ColorBrush_White()); ;
                return result;
            }

            // - - - PreComp layer: Milk Lable
            // - - Transforms for Bottle Controller
            // Layer aggregator
            // ShapeGroup: Group 4 Offset:<102.053, 250.169>
            CompositionSpriteShape SpriteShape_89()
            {
                // Offset:<1786.7799, 779.9471>, Scale:<0.7, 0.7>
                var geometry = PathGeometry_55();
                var result = CreateSpriteShape(geometry, new Matrix3x2(0.699999988F, 0F, 0F, 0.699999988F, 1786.77991F, 779.947083F), ColorBrush_White()); ;
                return result;
            }

            // - - - PreComp layer: Milk Lable
            // - - Transforms for Bottle Controller
            // Layer aggregator
            // ShapeGroup: Group 3 Offset:<113.972, 249.582>
            CompositionSpriteShape SpriteShape_90()
            {
                // Offset:<1795.1232, 779.5362>, Scale:<0.7, 0.7>
                var geometry = PathGeometry_56();
                var result = CreateSpriteShape(geometry, new Matrix3x2(0.699999988F, 0F, 0F, 0.699999988F, 1795.12317F, 779.536194F), ColorBrush_White()); ;
                return result;
            }

            // - - - PreComp layer: Milk Lable
            // - - Transforms for Bottle Controller
            // Layer aggregator
            // ShapeGroup: Group 2 Offset:<131.25, 250.323>
            CompositionSpriteShape SpriteShape_91()
            {
                // Offset:<1807.2178, 780.0549>, Scale:<0.7, 0.7>
                var geometry = PathGeometry_57();
                var result = CreateSpriteShape(geometry, new Matrix3x2(0.699999988F, 0F, 0F, 0.699999988F, 1807.21777F, 780.054871F), ColorBrush_White()); ;
                return result;
            }

            // - Shape tree root for layer: Milk Label
            // Scale:0.7,0.7, Offset:<960, 540>
            // Path 1
            CompositionSpriteShape SpriteShape_92()
            {
                // Offset:<54.001, -84.194>
                var geometry = PathGeometry_58();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 54.0009995F, -84.1940002F), ColorBrush_AlmostOrange_FFFF9B00()); ;
                return result;
            }

            // - Shape tree root for layer: Bottle shadow
            // Scale:0.7,0.7, Offset:<960, 540>
            // ShapeGroup: Group 9 Offset:<149.841, 185.105>
            CompositionSpriteShape SpriteShape_93()
            {
                // Offset:<101.045, -151.977>
                var geometry = PathGeometry_59();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 101.044998F, -151.977005F), ColorBrush_SemiTransparentAlmostNavy_42000071()); ;
                return result;
            }

            // - Shape tree root for layer: Bottle shadow
            // Scale:0.7,0.7, Offset:<960, 540>
            // ShapeGroup: Group 1 Offset:<84.745, 211.728>
            CompositionSpriteShape SpriteShape_94()
            {
                // Offset:<35.949, -125.354004>
                var geometry = PathGeometry_60();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 35.9490013F, -125.354004F), ColorBrush_SemiTransparentWhite_1()); ;
                return result;
            }

            // - Shape tree root for layer: Staw 3
            // Scale:0.7,0.7, Offset:<960, 540>
            // Transforms for Staw 3 Scale:0.72,1.27, Offset:<0.75, 40.75>
            CompositionSpriteShape SpriteShape_95()
            {
                // Offset:<7.1605997, -0.52759933>, Scale:<0.72, 1.2700001>
                var geometry = PathGeometry_29();
                var result = CreateSpriteShape(geometry, new Matrix3x2(0.720000029F, 0F, 0F, 1.26999998F, 7.16059971F, -0.527599335F), ColorBrush_AlmostRed_FFDF0000()); ;
                result.StrokeBrush = ColorBrush_AlmostNavy_FF000072();
                result.StrokeMiterLimit = 2F;
                result.StrokeThickness = 11F;
                return result;
            }

            // - Shape tree root for layer: Shape Layer 4
            // Scale:0.7,0.7, Offset:<960, 540>
            // Path 1
            CompositionSpriteShape SpriteShape_96()
            {
                // Offset:<-233.03572, 8.95549>, Scale:<0.72, 1.2700001>
                var geometry = PathGeometry_27();
                var result = CreateSpriteShape(geometry, new Matrix3x2(0.720000029F, 0F, 0F, 1.26999998F, -233.035721F, 8.95549011F), ColorBrush_AlmostRed_FFDF0000()); ;
                return result;
            }

            CompositionSurfaceBrush SurfaceBrush_00()
            {
                return _c.CreateSurfaceBrush(VisualSurface_00());
            }

            CompositionSurfaceBrush SurfaceBrush_01()
            {
                return _c.CreateSurfaceBrush(VisualSurface_01());
            }

            CompositionSurfaceBrush SurfaceBrush_02()
            {
                return _c.CreateSurfaceBrush(VisualSurface_02());
            }

            CompositionSurfaceBrush SurfaceBrush_03()
            {
                return _c.CreateSurfaceBrush(VisualSurface_03());
            }

            CompositionSurfaceBrush SurfaceBrush_04()
            {
                return _c.CreateSurfaceBrush(VisualSurface_04());
            }

            CompositionSurfaceBrush SurfaceBrush_05()
            {
                return _c.CreateSurfaceBrush(VisualSurface_05());
            }

            CompositionSurfaceBrush SurfaceBrush_06()
            {
                return _c.CreateSurfaceBrush(VisualSurface_06());
            }

            CompositionSurfaceBrush SurfaceBrush_07()
            {
                return _c.CreateSurfaceBrush(VisualSurface_07());
            }

            CompositionSurfaceBrush SurfaceBrush_08()
            {
                return _c.CreateSurfaceBrush(VisualSurface_08());
            }

            CompositionSurfaceBrush SurfaceBrush_09()
            {
                return _c.CreateSurfaceBrush(VisualSurface_09());
            }

            CompositionSurfaceBrush SurfaceBrush_10()
            {
                return _c.CreateSurfaceBrush(VisualSurface_10());
            }

            CompositionSurfaceBrush SurfaceBrush_11()
            {
                return _c.CreateSurfaceBrush(VisualSurface_11());
            }

            CompositionVisualSurface VisualSurface_00()
            {
                var result = _c.CreateVisualSurface();
                result.SourceVisual = ContainerVisual_00();
                result.SourceSize = new Vector2(1920F, 1080F);
                return result;
            }

            CompositionVisualSurface VisualSurface_01()
            {
                var result = _c.CreateVisualSurface();
                result.SourceVisual = ContainerVisual_01();
                result.SourceSize = new Vector2(1920F, 1080F);
                return result;
            }

            CompositionVisualSurface VisualSurface_02()
            {
                var result = _c.CreateVisualSurface();
                result.SourceVisual = ContainerVisual_02();
                result.SourceSize = new Vector2(1920F, 1080F);
                return result;
            }

            CompositionVisualSurface VisualSurface_03()
            {
                var result = _c.CreateVisualSurface();
                result.SourceVisual = ContainerVisual_03();
                result.SourceSize = new Vector2(1920F, 1080F);
                return result;
            }

            CompositionVisualSurface VisualSurface_04()
            {
                var result = _c.CreateVisualSurface();
                result.SourceVisual = ContainerVisual_04();
                result.SourceSize = new Vector2(1920F, 1080F);
                return result;
            }

            CompositionVisualSurface VisualSurface_05()
            {
                var result = _c.CreateVisualSurface();
                result.SourceVisual = ContainerVisual_05();
                result.SourceSize = new Vector2(1920F, 1080F);
                return result;
            }

            CompositionVisualSurface VisualSurface_06()
            {
                var result = _c.CreateVisualSurface();
                result.SourceVisual = ContainerVisual_06();
                result.SourceSize = new Vector2(1920F, 1080F);
                return result;
            }

            CompositionVisualSurface VisualSurface_07()
            {
                var result = _c.CreateVisualSurface();
                result.SourceVisual = ContainerVisual_07();
                result.SourceSize = new Vector2(1920F, 1080F);
                return result;
            }

            CompositionVisualSurface VisualSurface_08()
            {
                var result = _c.CreateVisualSurface();
                result.SourceVisual = ContainerVisual_08();
                result.SourceSize = new Vector2(1920F, 1080F);
                return result;
            }

            CompositionVisualSurface VisualSurface_09()
            {
                var result = _c.CreateVisualSurface();
                result.SourceVisual = ContainerVisual_12();
                result.SourceSize = new Vector2(1920F, 1080F);
                return result;
            }

            CompositionVisualSurface VisualSurface_10()
            {
                var result = _c.CreateVisualSurface();
                result.SourceVisual = ContainerVisual_13();
                result.SourceSize = new Vector2(1920F, 1080F);
                return result;
            }

            CompositionVisualSurface VisualSurface_11()
            {
                var result = _c.CreateVisualSurface();
                result.SourceVisual = ContainerVisual_14();
                result.SourceSize = new Vector2(1920F, 1080F);
                return result;
            }

            ContainerVisual ContainerVisual_00()
            {
                var result = _c.CreateContainerVisual();
                result.BorderMode = CompositionBorderMode.Soft;
                // Shape tree root for layer: Staw
                result.Children.InsertAtTop(ShapeVisual_01());
                return result;
            }

            ContainerVisual ContainerVisual_01()
            {
                var result = _c.CreateContainerVisual();
                result.BorderMode = CompositionBorderMode.Soft;
                // Shape tree root for layer: Shape Layer 1
                result.Children.InsertAtTop(ShapeVisual_02());
                return result;
            }

            ContainerVisual ContainerVisual_02()
            {
                var result = _c.CreateContainerVisual();
                result.BorderMode = CompositionBorderMode.Soft;
                // Shape tree root for layer: Staw 4
                result.Children.InsertAtTop(ShapeVisual_03());
                return result;
            }

            ContainerVisual ContainerVisual_03()
            {
                var result = _c.CreateContainerVisual();
                result.BorderMode = CompositionBorderMode.Soft;
                // Shape tree root for layer: Shape Layer 5
                result.Children.InsertAtTop(ShapeVisual_04());
                return result;
            }

            ContainerVisual ContainerVisual_04()
            {
                var result = _c.CreateContainerVisual();
                result.BorderMode = CompositionBorderMode.Soft;
                // Shape tree root for layer: Staw 2
                result.Children.InsertAtTop(ShapeVisual_05());
                return result;
            }

            ContainerVisual ContainerVisual_05()
            {
                var result = _c.CreateContainerVisual();
                result.BorderMode = CompositionBorderMode.Soft;
                // Shape tree root for layer: Shape Layer 3
                result.Children.InsertAtTop(ShapeVisual_06());
                return result;
            }

            ContainerVisual ContainerVisual_06()
            {
                var result = _c.CreateContainerVisual();
                result.BorderMode = CompositionBorderMode.Soft;
                // Shape tree root for layer: Milk
                result.Children.InsertAtTop(ShapeVisual_08());
                return result;
            }

            ContainerVisual ContainerVisual_07()
            {
                var result = _c.CreateContainerVisual();
                result.BorderMode = CompositionBorderMode.Soft;
                // Shape tree root for layer: Milk
                result.Children.InsertAtTop(ShapeVisual_09());
                return result;
            }

            ContainerVisual ContainerVisual_08()
            {
                var result = _c.CreateContainerVisual();
                result.BorderMode = CompositionBorderMode.Soft;
                // PreComp layer: Milk Lable
                result.Children.InsertAtTop(ContainerVisual_09());
                return result;
            }

            // Transforms for Scale Controler Scale(0.7,0.7,0), Offset(960,540,0)
            ContainerVisual ContainerVisual_09()
            {
                if (_containerVisual_09 != null) { return _containerVisual_09; }
                var result = _containerVisual_09 = _c.CreateContainerVisual();
                result.Scale = new Vector3(1F, 1F, 0F);
                // Offset:<960, 540>, Scale:<0.7, 0.7>
                result.TransformMatrix = new Matrix4x4(0.699999988F, 0F, 0F, 0F, 0F, 0.699999988F, 0F, 0F, 0F, 0F, 0F, 0F, 960F, 540F, 0F, 1F);
                // Transforms for Bottle Controller
                result.Children.InsertAtTop(ContainerVisual_10());
                return result;
            }

            // PreComp layer: Milk Lable
            // Transforms for Milk Lable
            ContainerVisual ContainerVisual_10()
            {
                if (_containerVisual_10 != null) { return _containerVisual_10; }
                var result = _containerVisual_10 = _c.CreateContainerVisual();
                result.CenterPoint = new Vector3(960F, 540F, 0F);
                result.Scale = new Vector3(1.42857003F, 1.42857003F, 0F);
                result.Children.InsertAtTop(ContainerVisual_11());
                return result;
            }

            // - PreComp layer: Milk Lable
            // Transforms for Bottle Controller
            ContainerVisual ContainerVisual_11()
            {
                var result = _c.CreateContainerVisual();
                result.Clip = InsetClip_0();
                result.Size = new Vector2(1920F, 1080F);
                // Layer aggregator
                result.Children.InsertAtTop(ShapeVisual_11());
                return result;
            }

            ContainerVisual ContainerVisual_12()
            {
                var result = _c.CreateContainerVisual();
                result.BorderMode = CompositionBorderMode.Soft;
                // Shape tree root for layer: Milk Label
                result.Children.InsertAtTop(ShapeVisual_12());
                return result;
            }

            ContainerVisual ContainerVisual_13()
            {
                var result = _c.CreateContainerVisual();
                result.BorderMode = CompositionBorderMode.Soft;
                // Shape tree root for layer: Staw 3
                result.Children.InsertAtTop(ShapeVisual_14());
                return result;
            }

            ContainerVisual ContainerVisual_14()
            {
                var result = _c.CreateContainerVisual();
                result.BorderMode = CompositionBorderMode.Soft;
                // Shape tree root for layer: Shape Layer 4
                result.Children.InsertAtTop(ShapeVisual_15());
                return result;
            }

            // The root of the composition.
            ContainerVisual Root()
            {
                if (_root != null) { return _root; }
                var result = _root = _c.CreateContainerVisual();
                var propertySet = result.Properties;
                propertySet.InsertScalar("Progress", 0F);
                propertySet.InsertScalar("t0", 0F);
                propertySet.InsertScalar("t1", 0F);
                propertySet.InsertScalar("t2", 0F);
                propertySet.InsertScalar("t3", 0F);
                var children = result.Children;
                // Layer aggregator
                children.InsertAtTop(ShapeVisual_00());
                children.InsertAtTop(SpriteVisual_0());
                children.InsertAtTop(SpriteVisual_1());
                children.InsertAtTop(SpriteVisual_2());
                // Layer aggregator
                children.InsertAtTop(ShapeVisual_07());
                children.InsertAtTop(SpriteVisual_3());
                // Shape tree root for layer: Botle
                children.InsertAtTop(ShapeVisual_10());
                children.InsertAtTop(SpriteVisual_4());
                // Shape tree root for layer: Bottle shadow
                children.InsertAtTop(ShapeVisual_13());
                children.InsertAtTop(SpriteVisual_5());
                return result;
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_00()
            {
                return (_cubicBezierEasingFunction_00 == null)
                    ? _cubicBezierEasingFunction_00 = _c.CreateCubicBezierEasingFunction(new Vector2(0.333000004F, 0F), new Vector2(0.666999996F, 1F))
                    : _cubicBezierEasingFunction_00;
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_01()
            {
                return (_cubicBezierEasingFunction_01 == null)
                    ? _cubicBezierEasingFunction_01 = _c.CreateCubicBezierEasingFunction(new Vector2(0.333000004F, 0F), new Vector2(0.833000004F, 1F))
                    : _cubicBezierEasingFunction_01;
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_02()
            {
                return (_cubicBezierEasingFunction_02 == null)
                    ? _cubicBezierEasingFunction_02 = _c.CreateCubicBezierEasingFunction(new Vector2(0.166999996F, 0F), new Vector2(0.666999996F, 1F))
                    : _cubicBezierEasingFunction_02;
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_03()
            {
                return (_cubicBezierEasingFunction_03 == null)
                    ? _cubicBezierEasingFunction_03 = _c.CreateCubicBezierEasingFunction(new Vector2(0.333000004F, 0F), new Vector2(0.833000004F, 0.833000004F))
                    : _cubicBezierEasingFunction_03;
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_04()
            {
                return (_cubicBezierEasingFunction_04 == null)
                    ? _cubicBezierEasingFunction_04 = _c.CreateCubicBezierEasingFunction(new Vector2(0.166999996F, 0.166999996F), new Vector2(0.833000004F, 0.833000004F))
                    : _cubicBezierEasingFunction_04;
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_05()
            {
                return (_cubicBezierEasingFunction_05 == null)
                    ? _cubicBezierEasingFunction_05 = _c.CreateCubicBezierEasingFunction(new Vector2(0.166999996F, 0.166999996F), new Vector2(0.666999996F, 1F))
                    : _cubicBezierEasingFunction_05;
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_06()
            {
                return (_cubicBezierEasingFunction_06 == null)
                    ? _cubicBezierEasingFunction_06 = _c.CreateCubicBezierEasingFunction(new Vector2(0.333000004F, 0F), new Vector2(0.465000004F, 1F))
                    : _cubicBezierEasingFunction_06;
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_07()
            {
                return (_cubicBezierEasingFunction_07 == null)
                    ? _cubicBezierEasingFunction_07 = _c.CreateCubicBezierEasingFunction(new Vector2(0.333000004F, 0F), new Vector2(0.270999998F, 1F))
                    : _cubicBezierEasingFunction_07;
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_08()
            {
                return (_cubicBezierEasingFunction_08 == null)
                    ? _cubicBezierEasingFunction_08 = _c.CreateCubicBezierEasingFunction(new Vector2(0.166999996F, 0F), new Vector2(0.833000004F, 1F))
                    : _cubicBezierEasingFunction_08;
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_09()
            {
                return (_cubicBezierEasingFunction_09 == null)
                    ? _cubicBezierEasingFunction_09 = _c.CreateCubicBezierEasingFunction(new Vector2(0.166999996F, 0.166999996F), new Vector2(0.666999996F, 0.666999996F))
                    : _cubicBezierEasingFunction_09;
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_10()
            {
                return (_cubicBezierEasingFunction_10 == null)
                    ? _cubicBezierEasingFunction_10 = _c.CreateCubicBezierEasingFunction(new Vector2(0.717999995F, 0.00999999978F), new Vector2(0.666999996F, 1F))
                    : _cubicBezierEasingFunction_10;
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_11()
            {
                return (_cubicBezierEasingFunction_11 == null)
                    ? _cubicBezierEasingFunction_11 = _c.CreateCubicBezierEasingFunction(new Vector2(0.166999996F, 0.166999996F), new Vector2(0.280999988F, 1F))
                    : _cubicBezierEasingFunction_11;
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_12()
            {
                return (_cubicBezierEasingFunction_12 == null)
                    ? _cubicBezierEasingFunction_12 = _c.CreateCubicBezierEasingFunction(new Vector2(0.333000004F, 0F), new Vector2(0.296000004F, 1F))
                    : _cubicBezierEasingFunction_12;
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_13()
            {
                return (_cubicBezierEasingFunction_13 == null)
                    ? _cubicBezierEasingFunction_13 = _c.CreateCubicBezierEasingFunction(new Vector2(0.275999993F, 0.275999993F), new Vector2(0.745999992F, 0.745999992F))
                    : _cubicBezierEasingFunction_13;
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_14()
            {
                return (_cubicBezierEasingFunction_14 == null)
                    ? _cubicBezierEasingFunction_14 = _c.CreateCubicBezierEasingFunction(new Vector2(0.356999993F, 0F), new Vector2(0.690999985F, 1F))
                    : _cubicBezierEasingFunction_14;
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_15()
            {
                return (_cubicBezierEasingFunction_15 == null)
                    ? _cubicBezierEasingFunction_15 = _c.CreateCubicBezierEasingFunction(new Vector2(0.372999996F, 0F), new Vector2(0.708000004F, 1F))
                    : _cubicBezierEasingFunction_15;
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_16()
            {
                return (_cubicBezierEasingFunction_16 == null)
                    ? _cubicBezierEasingFunction_16 = _c.CreateCubicBezierEasingFunction(new Vector2(0.479999989F, 0F), new Vector2(0.439999998F, 1F))
                    : _cubicBezierEasingFunction_16;
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_17()
            {
                return (_cubicBezierEasingFunction_17 == null)
                    ? _cubicBezierEasingFunction_17 = _c.CreateCubicBezierEasingFunction(new Vector2(0.166999996F, 0F), new Vector2(0.833000004F, 0.833000004F))
                    : _cubicBezierEasingFunction_17;
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_18()
            {
                return (_cubicBezierEasingFunction_18 == null)
                    ? _cubicBezierEasingFunction_18 = _c.CreateCubicBezierEasingFunction(new Vector2(0.166999996F, 0F), new Vector2(0.330000013F, 1F))
                    : _cubicBezierEasingFunction_18;
            }

            ExpressionAnimation RootProgress()
            {
                if (_rootProgress != null) { return _rootProgress; }
                var result = _rootProgress = _c.CreateExpressionAnimation("_.Progress");
                result.SetReferenceParameter("_", _root);
                return result;
            }

            // - - PreComp layer: Milk Lable
            // - Transforms for Bottle Controller
            InsetClip InsetClip_0()
            {
                var result = _c.CreateInsetClip();
                return result;
            }

            // - - - - - Layer aggregator
            // - - - -  Scale:0.7,0.7, Offset:<960, 540>
            // - - - Transforms: Head Controler
            // - - Transforms: Head
            // - Transforms: Left ear Offset:<254.30798, 358.042>
            // Path
            PathKeyFrameAnimation PathKeyFrameAnimation_0()
            {
                // Frame 0.
                var result = CreatePathKeyFrameAnimation(0F, Path_00(), HoldThenStepEasingFunction());
                // Frame 7.
                result.InsertKeyFrame(0.01686747F, Path_01(), CubicBezierEasingFunction_00());
                // Frame 16.
                result.InsertKeyFrame(0.0385542177F, new CompositionPath(Geometry_04()), CubicBezierEasingFunction_00());
                // Frame 23.
                result.InsertKeyFrame(0.0554216877F, Path_02(), CubicBezierEasingFunction_00());
                // Frame 30.
                result.InsertKeyFrame(0.0722891539F, Path_01(), CubicBezierEasingFunction_00());
                // Frame 38.
                result.InsertKeyFrame(0.0915662646F, Path_00(), CubicBezierEasingFunction_00());
                // Frame 386.
                result.InsertKeyFrame(0.930120468F, Path_00(), CubicBezierEasingFunction_01());
                // Frame 401.
                result.InsertKeyFrame(0.966265082F, Path_02(), _c.CreateCubicBezierEasingFunction(new Vector2(0.44600001F, 0F), new Vector2(0.509000003F, 0.768000007F)));
                // Frame 414.
                result.InsertKeyFrame(0.997590363F, Path_00(), _c.CreateCubicBezierEasingFunction(new Vector2(0.333000004F, 0.157000005F), new Vector2(0.456F, 1F)));
                return result;
            }

            // - - - - - Layer aggregator
            // - - - -  Scale:0.7,0.7, Offset:<960, 540>
            // - - - Transforms: Head Controler
            // - - Transforms: Head
            // - Transforms: Left ear Offset:<254.30798, 358.042>
            // Path
            PathKeyFrameAnimation PathKeyFrameAnimation_1()
            {
                // Frame 0.
                var result = CreatePathKeyFrameAnimation(0F, Path_03(), HoldThenStepEasingFunction());
                // Frame 7.
                result.InsertKeyFrame(0.01686747F, Path_04(), CubicBezierEasingFunction_00());
                // Frame 16.
                result.InsertKeyFrame(0.0385542177F, new CompositionPath(Geometry_08()), CubicBezierEasingFunction_00());
                // Frame 23.
                result.InsertKeyFrame(0.0554216877F, Path_05(), CubicBezierEasingFunction_00());
                // Frame 30.
                result.InsertKeyFrame(0.0722891539F, Path_04(), CubicBezierEasingFunction_00());
                // Frame 38.
                result.InsertKeyFrame(0.0915662646F, Path_03(), CubicBezierEasingFunction_00());
                // Frame 386.
                result.InsertKeyFrame(0.930120468F, Path_03(), CubicBezierEasingFunction_01());
                // Frame 401.
                result.InsertKeyFrame(0.966265082F, Path_05(), _c.CreateCubicBezierEasingFunction(new Vector2(0.44600001F, 0F), new Vector2(0.509000003F, 0.773999989F)));
                // Frame 414.
                result.InsertKeyFrame(0.997590363F, Path_03(), _c.CreateCubicBezierEasingFunction(new Vector2(0.333000004F, 0.152999997F), new Vector2(0.456F, 1F)));
                return result;
            }

            // - - - - - Layer aggregator
            // - - - -  Scale:0.7,0.7, Offset:<960, 540>
            // - - - Transforms: Head Controler
            // - - Transforms: Head
            // - Transforms: Right ear Offset:<684.11304, 355.501>
            // Path
            PathKeyFrameAnimation PathKeyFrameAnimation_2()
            {
                // Frame 0.
                var result = CreatePathKeyFrameAnimation(0F, Path_06(), HoldThenStepEasingFunction());
                // Frame 7.
                result.InsertKeyFrame(0.01686747F, Path_07(), CubicBezierEasingFunction_00());
                // Frame 16.
                result.InsertKeyFrame(0.0385542177F, new CompositionPath(Geometry_12()), CubicBezierEasingFunction_00());
                // Frame 23.
                result.InsertKeyFrame(0.0554216877F, Path_08(), CubicBezierEasingFunction_00());
                // Frame 30.
                result.InsertKeyFrame(0.0722891539F, Path_07(), CubicBezierEasingFunction_00());
                // Frame 38.
                result.InsertKeyFrame(0.0915662646F, Path_06(), CubicBezierEasingFunction_00());
                // Frame 252.
                result.InsertKeyFrame(0.607228935F, Path_06(), CubicBezierEasingFunction_03());
                // Frame 254.68.
                result.InsertKeyFrame(0.613696396F, Path_09(), CubicBezierEasingFunction_04());
                // Frame 257.45.
                result.InsertKeyFrame(0.620363832F, Path_06(), CubicBezierEasingFunction_04());
                // Frame 259.49.
                result.InsertKeyFrame(0.625286758F, Path_06(), CubicBezierEasingFunction_04());
                // Frame 262.28.
                result.InsertKeyFrame(0.632002413F, Path_09(), CubicBezierEasingFunction_04());
                // Frame 264.74.
                result.InsertKeyFrame(0.637932539F, Path_06(), CubicBezierEasingFunction_04());
                // Frame 266.75.
                result.InsertKeyFrame(0.642780721F, Path_06(), CubicBezierEasingFunction_04());
                // Frame 269.54.
                result.InsertKeyFrame(0.649496377F, Path_09(), CubicBezierEasingFunction_04());
                // Frame 272.
                result.InsertKeyFrame(0.655421674F, Path_06(), CubicBezierEasingFunction_04());
                // Frame 386.
                result.InsertKeyFrame(0.930120468F, Path_06(), CubicBezierEasingFunction_05());
                // Frame 401.
                result.InsertKeyFrame(0.966265082F, Path_08(), CubicBezierEasingFunction_06());
                // Frame 414.
                result.InsertKeyFrame(0.997590363F, Path_06(), CubicBezierEasingFunction_07());
                return result;
            }

            // - - - - - Layer aggregator
            // - - - -  Scale:0.7,0.7, Offset:<960, 540>
            // - - - Transforms: Head Controler
            // - - Transforms: Head
            // - Transforms: Right ear Offset:<684.11304, 355.501>
            // Path
            PathKeyFrameAnimation PathKeyFrameAnimation_3()
            {
                // Frame 0.
                var result = CreatePathKeyFrameAnimation(0F, Path_10(), HoldThenStepEasingFunction());
                // Frame 7.
                result.InsertKeyFrame(0.01686747F, Path_11(), CubicBezierEasingFunction_00());
                // Frame 16.
                result.InsertKeyFrame(0.0385542177F, new CompositionPath(Geometry_17()), CubicBezierEasingFunction_00());
                // Frame 23.
                result.InsertKeyFrame(0.0554216877F, Path_12(), CubicBezierEasingFunction_00());
                // Frame 30.
                result.InsertKeyFrame(0.0722891539F, Path_11(), CubicBezierEasingFunction_00());
                // Frame 38.
                result.InsertKeyFrame(0.0915662646F, Path_10(), CubicBezierEasingFunction_00());
                // Frame 252.
                result.InsertKeyFrame(0.607228935F, Path_10(), CubicBezierEasingFunction_03());
                // Frame 254.68.
                result.InsertKeyFrame(0.613696396F, Path_13(), CubicBezierEasingFunction_04());
                // Frame 257.45.
                result.InsertKeyFrame(0.620363832F, Path_10(), CubicBezierEasingFunction_04());
                // Frame 259.49.
                result.InsertKeyFrame(0.625286758F, Path_10(), CubicBezierEasingFunction_04());
                // Frame 262.28.
                result.InsertKeyFrame(0.632002413F, Path_13(), CubicBezierEasingFunction_04());
                // Frame 264.74.
                result.InsertKeyFrame(0.637932539F, Path_10(), CubicBezierEasingFunction_04());
                // Frame 266.75.
                result.InsertKeyFrame(0.642780721F, Path_10(), CubicBezierEasingFunction_04());
                // Frame 269.54.
                result.InsertKeyFrame(0.649496377F, Path_13(), CubicBezierEasingFunction_04());
                // Frame 272.
                result.InsertKeyFrame(0.655421674F, Path_10(), CubicBezierEasingFunction_04());
                // Frame 386.
                result.InsertKeyFrame(0.930120468F, Path_10(), CubicBezierEasingFunction_05());
                // Frame 401.
                result.InsertKeyFrame(0.966265082F, Path_12(), CubicBezierEasingFunction_06());
                // Frame 414.
                result.InsertKeyFrame(0.997590363F, Path_10(), CubicBezierEasingFunction_07());
                return result;
            }

            // - - - - Shape tree root for layer: Milk
            // - - -  Scale:0.7,0.7, Offset:<960, 540>
            // - - Transforms: Milk Controler
            // - Transforms: Milk
            // Path
            PathKeyFrameAnimation PathKeyFrameAnimation_4()
            {
                // Frame 0.
                var result = CreatePathKeyFrameAnimation(0F, Path_14(), StepThenHoldEasingFunction());
                // Frame 219.
                result.InsertKeyFrame(0.527710855F, Path_14(), HoldThenStepEasingFunction());
                // Frame 266.
                result.InsertKeyFrame(0.640963852F, new CompositionPath(Geometry_64()), CubicBezierEasingFunction_04());
                return result;
            }

            // Rotation
            ScalarKeyFrameAnimation RotationAngleInDegreesScalarAnimation_0_to_m176()
            {
                // Frame 0.
                if (_rotationAngleInDegreesScalarAnimation_0_to_m176 != null) { return _rotationAngleInDegreesScalarAnimation_0_to_m176; }
                var result = _rotationAngleInDegreesScalarAnimation_0_to_m176 = CreateScalarKeyFrameAnimation(0F, 0F, StepThenHoldEasingFunction());
                // Frame 78.
                result.InsertKeyFrame(0.187951803F, 0F, HoldThenStepEasingFunction());
                // Frame 127.
                result.InsertKeyFrame(0.306024104F, -16F, _c.CreateCubicBezierEasingFunction(new Vector2(0.333000004F, 0F), new Vector2(0.189999998F, 1F)));
                // Frame 138.
                result.InsertKeyFrame(0.332530111F, 0F, _c.CreateCubicBezierEasingFunction(new Vector2(0.333000004F, 0F), new Vector2(0.963F, 1F)));
                // Frame 316.
                result.InsertKeyFrame(0.761445761F, 0F, CubicBezierEasingFunction_02());
                // Frame 325.
                result.InsertKeyFrame(0.783132553F, 15.5010004F, _c.CreateCubicBezierEasingFunction(new Vector2(0.333000004F, 0F), new Vector2(0.666999996F, 0.827000022F)));
                // Frame 350.
                result.InsertKeyFrame(0.843373477F, 26F, _c.CreateCubicBezierEasingFunction(new Vector2(0.333000004F, 0.708999991F), new Vector2(0.666999996F, 1F)));
                // Frame 388.
                result.InsertKeyFrame(0.934939742F, -176F, _c.CreateCubicBezierEasingFunction(new Vector2(0.555000007F, 0F), new Vector2(0.229000002F, 0.606999993F)));
                return result;
            }

            // - - Layer aggregator
            // -  Scale:0.7,0.7, Offset:<960, 540>
            // Transforms: Right Hand
            // Rotation
            ScalarKeyFrameAnimation RotationAngleInDegreesScalarAnimation_15_to_15()
            {
                // Frame 0.
                var result = CreateScalarKeyFrameAnimation(0F, 15F, StepThenHoldEasingFunction());
                // Frame 18.
                result.InsertKeyFrame(0.0433734953F, 15F, HoldThenStepEasingFunction());
                // Frame 28.
                result.InsertKeyFrame(0.06746988F, -5F, CubicBezierEasingFunction_00());
                // Frame 39.
                result.InsertKeyFrame(0.0939759016F, 0F, CubicBezierEasingFunction_00());
                // Frame 48.
                result.InsertKeyFrame(0.115662649F, 0F, CubicBezierEasingFunction_01());
                // Frame 83.
                result.InsertKeyFrame(0.200000003F, -152F, _c.CreateCubicBezierEasingFunction(new Vector2(0.166999996F, 0F), new Vector2(0.129999995F, 1F)));
                // Frame 94.
                result.InsertKeyFrame(0.226506025F, -152F, CubicBezierEasingFunction_08());
                // Frame 121.
                result.InsertKeyFrame(0.291566253F, 11F, _c.CreateCubicBezierEasingFunction(new Vector2(0.166999996F, 0F), new Vector2(0.388999999F, 1F)));
                // Frame 139.
                result.InsertKeyFrame(0.334939748F, 0F, _c.CreateCubicBezierEasingFunction(new Vector2(0.610000014F, 0F), new Vector2(0.833000004F, 1F)));
                // Frame 302.
                result.InsertKeyFrame(0.727710843F, 0F, CubicBezierEasingFunction_08());
                // Frame 315.
                result.InsertKeyFrame(0.759036124F, -18F, CubicBezierEasingFunction_08());
                // Frame 325.
                result.InsertKeyFrame(0.783132553F, -2F, CubicBezierEasingFunction_08());
                // Frame 350.
                result.InsertKeyFrame(0.843373477F, -20F, CubicBezierEasingFunction_08());
                // Frame 386.
                result.InsertKeyFrame(0.930120468F, -20F, CubicBezierEasingFunction_08());
                // Frame 414.
                result.InsertKeyFrame(0.997590363F, 15F, CubicBezierEasingFunction_02());
                return result;
            }

            // - - Layer aggregator
            // -  Scale:0.7,0.7, Offset:<960, 540>
            // Transforms: Left Leg
            // Rotation
            ScalarKeyFrameAnimation RotationAngleInDegreesScalarAnimation_30_to_30()
            {
                // Frame 0.
                var result = CreateScalarKeyFrameAnimation(0F, 30F, StepThenHoldEasingFunction());
                // Frame 18.
                result.InsertKeyFrame(0.0433734953F, 30F, HoldThenStepEasingFunction());
                // Frame 26.
                result.InsertKeyFrame(0.062650606F, -17F, CubicBezierEasingFunction_05());
                // Frame 34.
                result.InsertKeyFrame(0.0819277093F, 6F, CubicBezierEasingFunction_00());
                // Frame 42.
                result.InsertKeyFrame(0.10120482F, 0F, CubicBezierEasingFunction_01());
                // Frame 386.
                result.InsertKeyFrame(0.930120468F, 0F, CubicBezierEasingFunction_08());
                // Frame 414.
                result.InsertKeyFrame(0.997590363F, 30F, CubicBezierEasingFunction_17());
                return result;
            }

            // - - Layer aggregator
            // -  Scale:0.7,0.7, Offset:<960, 540>
            // Transforms: Left Hand
            // Rotation
            ScalarKeyFrameAnimation RotationAngleInDegreesScalarAnimation_m15_to_m15()
            {
                // Frame 0.
                var result = CreateScalarKeyFrameAnimation(0F, -15F, StepThenHoldEasingFunction());
                // Frame 18.
                result.InsertKeyFrame(0.0433734953F, -15F, HoldThenStepEasingFunction());
                // Frame 28.
                result.InsertKeyFrame(0.06746988F, 5F, _c.CreateCubicBezierEasingFunction(new Vector2(0.333000004F, 0F), new Vector2(0.439999998F, 1F)));
                // Frame 39.
                result.InsertKeyFrame(0.0939759016F, 0F, CubicBezierEasingFunction_00());
                // Frame 70.
                result.InsertKeyFrame(0.168674693F, 16F, CubicBezierEasingFunction_08());
                // Frame 105.
                result.InsertKeyFrame(0.253012061F, 16F, CubicBezierEasingFunction_08());
                // Frame 126.
                result.InsertKeyFrame(0.303614467F, 59F, _c.CreateCubicBezierEasingFunction(new Vector2(0.166999996F, 0F), new Vector2(0.395000011F, 1F)));
                // Frame 142.
                result.InsertKeyFrame(0.342168689F, 0F, CubicBezierEasingFunction_08());
                // Frame 302.
                result.InsertKeyFrame(0.727710843F, 0F, CubicBezierEasingFunction_08());
                // Frame 315.
                result.InsertKeyFrame(0.759036124F, 18F, _c.CreateCubicBezierEasingFunction(new Vector2(0.333999991F, 0F), new Vector2(0.646000028F, 1F)));
                // Frame 325.
                result.InsertKeyFrame(0.783132553F, -10F, _c.CreateCubicBezierEasingFunction(new Vector2(0.344999999F, 0F), new Vector2(0.671000004F, 1F)));
                // Frame 350.
                result.InsertKeyFrame(0.843373477F, 67F, _c.CreateCubicBezierEasingFunction(new Vector2(0.550999999F, 0F), new Vector2(0.66900003F, 1F)));
                // Frame 375.
                result.InsertKeyFrame(0.903614461F, -92F, _c.CreateCubicBezierEasingFunction(new Vector2(0.44600001F, 0F), new Vector2(0F, 1F)));
                // Frame 394.
                result.InsertKeyFrame(0.949397564F, 0F, _c.CreateCubicBezierEasingFunction(new Vector2(0.623000026F, 0F), new Vector2(0.495000005F, 1F)));
                // Frame 414.
                result.InsertKeyFrame(0.997590363F, -15F, CubicBezierEasingFunction_08());
                return result;
            }

            // - - Layer aggregator
            // -  Scale:0.7,0.7, Offset:<960, 540>
            // Transforms: Right Leg
            // Rotation
            ScalarKeyFrameAnimation RotationAngleInDegreesScalarAnimation_m30_to_m30()
            {
                // Frame 0.
                var result = CreateScalarKeyFrameAnimation(0F, -30F, StepThenHoldEasingFunction());
                // Frame 18.
                result.InsertKeyFrame(0.0433734953F, -30F, HoldThenStepEasingFunction());
                // Frame 26.
                result.InsertKeyFrame(0.062650606F, 17F, CubicBezierEasingFunction_05());
                // Frame 34.
                result.InsertKeyFrame(0.0819277093F, -6F, CubicBezierEasingFunction_00());
                // Frame 42.
                result.InsertKeyFrame(0.10120482F, 0F, CubicBezierEasingFunction_01());
                // Frame 386.
                result.InsertKeyFrame(0.930120468F, 0F, CubicBezierEasingFunction_08());
                // Frame 414.
                result.InsertKeyFrame(0.997590363F, -30F, CubicBezierEasingFunction_17());
                return result;
            }

            // Rotation
            ScalarKeyFrameAnimation RotationAngleInDegreesScalarAnimation_m496_to_0()
            {
                // Frame 0.
                if (_rotationAngleInDegreesScalarAnimation_m496_to_0 != null) { return _rotationAngleInDegreesScalarAnimation_m496_to_0; }
                var result = _rotationAngleInDegreesScalarAnimation_m496_to_0 = CreateScalarKeyFrameAnimation(0F, -496F, StepThenHoldEasingFunction());
                // Frame 95.
                result.InsertKeyFrame(0.228915662F, -496F, HoldThenStepEasingFunction());
                // Frame 146.46.
                result.InsertKeyFrame(0.35291791F, 0F, _c.CreateCubicBezierEasingFunction(new Vector2(0.552999973F, 0F), new Vector2(0.469999999F, 1F)));
                return result;
            }

            ScalarKeyFrameAnimation t0ScalarAnimation_0_to_1()
            {
                // Frame 100.16.
                var result = CreateScalarKeyFrameAnimation(0.241354227F, 0F, StepThenHoldEasingFunction());
                result.SetReferenceParameter("_", _root);
                // Frame 140.
                result.InsertKeyFrame(0.337349355F, 1F, _c.CreateCubicBezierEasingFunction(new Vector2(0.333000004F, 0F), new Vector2(0.192000002F, 0.994000018F)));
                // Frame 154.
                result.InsertKeyFrame(0.371084362F, 0F, StepThenHoldEasingFunction());
                // Frame 171.44.
                result.InsertKeyFrame(0.413110822F, 1F, CubicBezierEasingFunction_00());
                return result;
            }

            ScalarKeyFrameAnimation t1ScalarAnimation_0_to_1()
            {
                // Frame 0.
                var result = CreateScalarKeyFrameAnimation(0F, 0F, StepThenHoldEasingFunction());
                result.SetReferenceParameter("_", _root);
                // Frame 23.
                result.InsertKeyFrame(0.0554216839F, 1F, CubicBezierEasingFunction_00());
                // Frame 30.
                result.InsertKeyFrame(0.0722891614F, 0F, StepThenHoldEasingFunction());
                // Frame 37.
                result.InsertKeyFrame(0.0891566202F, 1F, CubicBezierEasingFunction_02());
                return result;
            }

            ScalarKeyFrameAnimation t2ScalarAnimation_0_to_1()
            {
                // Frame 60.
                var result = CreateScalarKeyFrameAnimation(0.144578323F, 0F, StepThenHoldEasingFunction());
                result.SetReferenceParameter("_", _root);
                // Frame 74.
                result.InsertKeyFrame(0.17831324F, 1F, _c.CreateCubicBezierEasingFunction(new Vector2(0.333000004F, 0F), new Vector2(0.287999988F, 1F)));
                // Frame 74.
                result.InsertKeyFrame(0.178313255F, 0F, StepThenHoldEasingFunction());
                // Frame 129.
                result.InsertKeyFrame(0.310843349F, 1F, _c.CreateCubicBezierEasingFunction(new Vector2(0.199000001F, 0F), new Vector2(0.833000004F, 0.833000004F)));
                return result;
            }

            ScalarKeyFrameAnimation t3ScalarAnimation_0_to_1()
            {
                // Frame 263.01.
                var result = CreateScalarKeyFrameAnimation(0.633763909F, 0F, StepThenHoldEasingFunction());
                result.SetReferenceParameter("_", _root);
                // Frame 279.
                result.InsertKeyFrame(0.672289073F, 1F, CubicBezierEasingFunction_00());
                return result;
            }

            // Layer aggregator
            ShapeVisual ShapeVisual_00()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(1920F, 1080F);
                var shapes = result.Shapes;
                shapes.Add(ContainerShape_00());
                // Scale:0.7,0.7, Offset:<960, 540>
                shapes.Add(ContainerShape_01());
                return result;
            }

            // Shape tree root for layer: Staw
            ShapeVisual ShapeVisual_01()
            {
                if (_shapeVisual_01 != null) { return _shapeVisual_01; }
                var result = _shapeVisual_01 = _c.CreateShapeVisual();
                result.Size = new Vector2(1920F, 1080F);
                // Scale:0.7,0.7, Offset:<960, 540>
                result.Shapes.Add(ContainerShape_13());
                return result;
            }

            // Shape tree root for layer: Shape Layer 1
            ShapeVisual ShapeVisual_02()
            {
                if (_shapeVisual_02 != null) { return _shapeVisual_02; }
                var result = _shapeVisual_02 = _c.CreateShapeVisual();
                result.Size = new Vector2(1920F, 1080F);
                // Scale:0.7,0.7, Offset:<960, 540>
                result.Shapes.Add(ContainerShape_14());
                return result;
            }

            // Shape tree root for layer: Staw 4
            ShapeVisual ShapeVisual_03()
            {
                if (_shapeVisual_03 != null) { return _shapeVisual_03; }
                var result = _shapeVisual_03 = _c.CreateShapeVisual();
                result.IsVisible = false;
                result.Size = new Vector2(1920F, 1080F);
                // Scale:0.7,0.7, Offset:<960, 540>
                result.Shapes.Add(ContainerShape_15());
                return result;
            }

            // Shape tree root for layer: Shape Layer 5
            ShapeVisual ShapeVisual_04()
            {
                if (_shapeVisual_04 != null) { return _shapeVisual_04; }
                var result = _shapeVisual_04 = _c.CreateShapeVisual();
                result.IsVisible = false;
                result.Size = new Vector2(1920F, 1080F);
                // Scale:0.7,0.7, Offset:<960, 540>
                result.Shapes.Add(ContainerShape_16());
                return result;
            }

            // Shape tree root for layer: Staw 2
            ShapeVisual ShapeVisual_05()
            {
                if (_shapeVisual_05 != null) { return _shapeVisual_05; }
                var result = _shapeVisual_05 = _c.CreateShapeVisual();
                result.IsVisible = false;
                result.Size = new Vector2(1920F, 1080F);
                // Scale:0.7,0.7, Offset:<960, 540>
                result.Shapes.Add(ContainerShape_17());
                return result;
            }

            // Shape tree root for layer: Shape Layer 3
            ShapeVisual ShapeVisual_06()
            {
                if (_shapeVisual_06 != null) { return _shapeVisual_06; }
                var result = _shapeVisual_06 = _c.CreateShapeVisual();
                result.IsVisible = false;
                result.Size = new Vector2(1920F, 1080F);
                // Scale:0.7,0.7, Offset:<960, 540>
                result.Shapes.Add(ContainerShape_19());
                return result;
            }

            // Layer aggregator
            ShapeVisual ShapeVisual_07()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(1920F, 1080F);
                var shapes = result.Shapes;
                // Scale:0.7,0.7, Offset:<960, 540>
                shapes.Add(ContainerShape_21());
                shapes.Add(ContainerShape_32());
                return result;
            }

            // Shape tree root for layer: Milk
            ShapeVisual ShapeVisual_08()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(1920F, 1080F);
                // Scale:0.7,0.7, Offset:<960, 540>
                result.Shapes.Add(ContainerShape_33());
                return result;
            }

            // Shape tree root for layer: Milk
            ShapeVisual ShapeVisual_09()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(1920F, 1080F);
                // Scale:0.7,0.7, Offset:<960, 540>
                result.Shapes.Add(ContainerShape_35());
                return result;
            }

            // Shape tree root for layer: Botle
            ShapeVisual ShapeVisual_10()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(1920F, 1080F);
                // Scale:0.7,0.7, Offset:<960, 540>
                result.Shapes.Add(ContainerShape_36());
                return result;
            }

            // - - PreComp layer: Milk Lable
            // - Transforms for Bottle Controller
            // Layer aggregator
            ShapeVisual ShapeVisual_11()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(1920F, 1080F);
                var shapes = result.Shapes;
                // Scale:0.7,0.7, Offset:<856.947, 554.229>
                shapes.Add(SpriteShape_57());
                // Scale:0.7,0.7, Offset:<856.947, 554.229>
                shapes.Add(SpriteShape_58());
                // Scale:0.7,0.7, Offset:<856.947, 554.229>
                shapes.Add(SpriteShape_59());
                // Scale:0.7,0.7, Offset:<856.947, 554.229>
                shapes.Add(SpriteShape_60());
                // Scale:0.7,0.7, Offset:<856.947, 554.229>
                shapes.Add(SpriteShape_61());
                // Scale:0.7,0.7, Offset:<989.447, 554.229>
                shapes.Add(SpriteShape_62());
                // Scale:0.7,0.7, Offset:<989.447, 554.229>
                shapes.Add(SpriteShape_63());
                // Scale:0.7,0.7, Offset:<989.447, 554.229>
                shapes.Add(SpriteShape_64());
                // Scale:0.7,0.7, Offset:<989.447, 554.229>
                shapes.Add(SpriteShape_65());
                // Scale:0.7,0.7, Offset:<989.447, 554.229>
                shapes.Add(SpriteShape_66());
                // Scale:0.7,0.7, Offset:<1128.947, 554.229>
                shapes.Add(SpriteShape_67());
                // Scale:0.7,0.7, Offset:<1128.947, 554.229>
                shapes.Add(SpriteShape_68());
                // Scale:0.7,0.7, Offset:<1128.947, 554.229>
                shapes.Add(SpriteShape_69());
                // Scale:0.7,0.7, Offset:<1128.947, 554.229>
                shapes.Add(SpriteShape_70());
                // Scale:0.7,0.7, Offset:<1128.947, 554.229>
                shapes.Add(SpriteShape_71());
                // Scale:0.7,0.7, Offset:<1270.947, 554.229>
                shapes.Add(SpriteShape_72());
                // Scale:0.7,0.7, Offset:<1270.947, 554.229>
                shapes.Add(SpriteShape_73());
                // Scale:0.7,0.7, Offset:<1270.947, 554.229>
                shapes.Add(SpriteShape_74());
                // Scale:0.7,0.7, Offset:<1270.947, 554.229>
                shapes.Add(SpriteShape_75());
                // Scale:0.7,0.7, Offset:<1270.947, 554.229>
                shapes.Add(SpriteShape_76());
                // Scale:0.7,0.7, Offset:<1421.947, 554.229>
                shapes.Add(SpriteShape_77());
                // Scale:0.7,0.7, Offset:<1421.947, 554.229>
                shapes.Add(SpriteShape_78());
                // Scale:0.7,0.7, Offset:<1421.947, 554.229>
                shapes.Add(SpriteShape_79());
                // Scale:0.7,0.7, Offset:<1421.947, 554.229>
                shapes.Add(SpriteShape_80());
                // Scale:0.7,0.7, Offset:<1421.947, 554.229>
                shapes.Add(SpriteShape_81());
                // Scale:0.7,0.7, Offset:<1551.947, 554.229>
                shapes.Add(SpriteShape_82());
                // Scale:0.7,0.7, Offset:<1551.947, 554.229>
                shapes.Add(SpriteShape_83());
                // Scale:0.7,0.7, Offset:<1551.947, 554.229>
                shapes.Add(SpriteShape_84());
                // Scale:0.7,0.7, Offset:<1551.947, 554.229>
                shapes.Add(SpriteShape_85());
                // Scale:0.7,0.7, Offset:<1551.947, 554.229>
                shapes.Add(SpriteShape_86());
                // Scale:0.7,0.7, Offset:<1684.947, 554.229>
                shapes.Add(SpriteShape_87());
                // Scale:0.7,0.7, Offset:<1684.947, 554.229>
                shapes.Add(SpriteShape_88());
                // Scale:0.7,0.7, Offset:<1684.947, 554.229>
                shapes.Add(SpriteShape_89());
                // Scale:0.7,0.7, Offset:<1684.947, 554.229>
                shapes.Add(SpriteShape_90());
                // Scale:0.7,0.7, Offset:<1684.947, 554.229>
                shapes.Add(SpriteShape_91());
                return result;
            }

            // Shape tree root for layer: Milk Label
            ShapeVisual ShapeVisual_12()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(1920F, 1080F);
                // Scale:0.7,0.7, Offset:<960, 540>
                result.Shapes.Add(ContainerShape_37());
                return result;
            }

            // Shape tree root for layer: Bottle shadow
            ShapeVisual ShapeVisual_13()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(1920F, 1080F);
                // Scale:0.7,0.7, Offset:<960, 540>
                result.Shapes.Add(ContainerShape_38());
                return result;
            }

            // Shape tree root for layer: Staw 3
            ShapeVisual ShapeVisual_14()
            {
                if (_shapeVisual_14 != null) { return _shapeVisual_14; }
                var result = _shapeVisual_14 = _c.CreateShapeVisual();
                result.IsVisible = false;
                result.Size = new Vector2(1920F, 1080F);
                // Scale:0.7,0.7, Offset:<960, 540>
                result.Shapes.Add(ContainerShape_39());
                return result;
            }

            // Shape tree root for layer: Shape Layer 4
            ShapeVisual ShapeVisual_15()
            {
                if (_shapeVisual_15 != null) { return _shapeVisual_15; }
                var result = _shapeVisual_15 = _c.CreateShapeVisual();
                result.IsVisible = false;
                result.Size = new Vector2(1920F, 1080F);
                // Scale:0.7,0.7, Offset:<960, 540>
                result.Shapes.Add(ContainerShape_40());
                return result;
            }

            SpriteVisual SpriteVisual_0()
            {
                var result = _c.CreateSpriteVisual();
                result.Size = new Vector2(1920F, 1080F);
                result.Brush = EffectBrush_0();
                return result;
            }

            SpriteVisual SpriteVisual_1()
            {
                var result = _c.CreateSpriteVisual();
                result.Size = new Vector2(1920F, 1080F);
                result.Brush = EffectBrush_1();
                return result;
            }

            SpriteVisual SpriteVisual_2()
            {
                var result = _c.CreateSpriteVisual();
                result.Size = new Vector2(1920F, 1080F);
                result.Brush = EffectBrush_2();
                return result;
            }

            SpriteVisual SpriteVisual_3()
            {
                var result = _c.CreateSpriteVisual();
                result.Size = new Vector2(1920F, 1080F);
                result.Brush = EffectBrush_3();
                return result;
            }

            SpriteVisual SpriteVisual_4()
            {
                var result = _c.CreateSpriteVisual();
                result.Size = new Vector2(1920F, 1080F);
                result.Brush = EffectBrush_4();
                return result;
            }

            SpriteVisual SpriteVisual_5()
            {
                var result = _c.CreateSpriteVisual();
                result.Size = new Vector2(1920F, 1080F);
                result.Brush = EffectBrush_5();
                return result;
            }

            StepEasingFunction HoldThenStepEasingFunction()
            {
                if (_holdThenStepEasingFunction != null) { return _holdThenStepEasingFunction; }
                var result = _holdThenStepEasingFunction = _c.CreateStepEasingFunction();
                result.IsFinalStepSingleFrame = true;
                return result;
            }

            StepEasingFunction StepThenHoldEasingFunction()
            {
                if (_stepThenHoldEasingFunction != null) { return _stepThenHoldEasingFunction; }
                var result = _stepThenHoldEasingFunction = _c.CreateStepEasingFunction();
                result.IsInitialStepSingleFrame = true;
                return result;
            }

            // - - - - Layer aggregator
            // - - -  Scale:0.7,0.7, Offset:<960, 540>
            // - - Transforms: Head Controler
            // - Transforms: Head
            // Transforms: Left Eye
            // Offset
            Vector2KeyFrameAnimation OffsetVector2Animation_00()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(120.227997F, 162.367004F), StepThenHoldEasingFunction());
                result.SetReferenceParameter("_", _root);
                // Frame 60.
                result.InsertKeyFrame(0.144578308F, new Vector2(120.227997F, 162.367004F), HoldThenStepEasingFunction());
                // Frame 74.
                result.InsertExpressionKeyFrame(0.17831324F, "Pow(1-_.t2,3)*Vector2(120.228,162.367)+(3*Square(1-_.t2)*_.t2*Vector2(125.677,164.748))+(3*(1-_.t2)*Square(_.t2)*Vector2(145.412,170.888))+(Pow(_.t2,3)*Vector2(152.919,176.653))", StepThenHoldEasingFunction());
                // Frame 129.
                result.InsertExpressionKeyFrame(0.310843349F, "Pow(1-_.t2,3)*Vector2(152.919,176.653)+(3*Square(1-_.t2)*_.t2*Vector2(132.569,187.775))+(3*(1-_.t2)*Square(_.t2)*Vector2(125.677,164.748))+(Pow(_.t2,3)*Vector2(120.228,162.367))", StepThenHoldEasingFunction());
                // Frame 129.
                result.InsertKeyFrame(0.310843378F, new Vector2(120.227997F, 162.367004F), StepThenHoldEasingFunction());
                return result;
            }

            // - - - - Layer aggregator
            // - - -  Scale:0.7,0.7, Offset:<960, 540>
            // - - Transforms: Head Controler
            // - Transforms: Head
            // Transforms: Right Eye
            // Offset
            Vector2KeyFrameAnimation OffsetVector2Animation_01()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(313.487F, 162.367004F), StepThenHoldEasingFunction());
                result.SetReferenceParameter("_", _root);
                // Frame 60.
                result.InsertKeyFrame(0.144578308F, new Vector2(313.487F, 162.367004F), HoldThenStepEasingFunction());
                // Frame 74.
                result.InsertExpressionKeyFrame(0.17831324F, "Pow(1-_.t2,3)*Vector2(313.487,162.367)+(3*Square(1-_.t2)*_.t2*Vector2(318.936,164.748))+(3*(1-_.t2)*Square(_.t2)*Vector2(346.178,176.653))+(Pow(_.t2,3)*Vector2(346.178,176.653))", StepThenHoldEasingFunction());
                // Frame 129.
                result.InsertExpressionKeyFrame(0.310843349F, "Pow(1-_.t2,3)*Vector2(346.178,176.653)+(3*Square(1-_.t2)*_.t2*Vector2(344.992,176.653))+(3*(1-_.t2)*Square(_.t2)*Vector2(312.622,196.177))+(Pow(_.t2,3)*Vector2(313.487,162.367))", StepThenHoldEasingFunction());
                // Frame 129.
                result.InsertKeyFrame(0.310843378F, new Vector2(313.487F, 162.367004F), StepThenHoldEasingFunction());
                return result;
            }

            // Offset
            Vector2KeyFrameAnimation OffsetVector2Animation_02()
            {
                // Frame 0.
                if (_offsetVector2Animation_02 != null) { return _offsetVector2Animation_02; }
                var result = _offsetVector2Animation_02 = CreateVector2KeyFrameAnimation(0F, new Vector2(67.6409988F, 229.432999F), StepThenHoldEasingFunction());
                // Frame 53.
                result.InsertKeyFrame(0.127710849F, new Vector2(67.6409988F, 229.432999F), HoldThenStepEasingFunction());
                // Frame 72.
                result.InsertKeyFrame(0.173493981F, new Vector2(111.860001F, 229.432999F), CubicBezierEasingFunction_00());
                // Frame 80.
                result.InsertKeyFrame(0.192771077F, new Vector2(111.860001F, 229.432999F), CubicBezierEasingFunction_09());
                // Frame 119.
                result.InsertKeyFrame(0.286746979F, new Vector2(67.6409988F, 229.432999F), CubicBezierEasingFunction_02());
                return result;
            }

            // - - - - Layer aggregator
            // - - -  Scale:0.7,0.7, Offset:<960, 540>
            // - - Transforms: Head Controler
            // - Transforms: Head
            // Transforms: Left Eye Bro
            // Offset
            Vector2KeyFrameAnimation OffsetVector2Animation_03()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(115.869003F, 124.694F), HoldThenStepEasingFunction());
                // Frame 10.
                result.InsertKeyFrame(0.0240963846F, new Vector2(115.869003F, 110.408997F), CubicBezierEasingFunction_00());
                // Frame 19.
                result.InsertKeyFrame(0.0457831323F, new Vector2(115.869003F, 124.694F), CubicBezierEasingFunction_00());
                // Frame 26.
                result.InsertKeyFrame(0.062650606F, new Vector2(115.869003F, 110.408997F), CubicBezierEasingFunction_00());
                // Frame 386.
                result.InsertKeyFrame(0.930120468F, new Vector2(115.869003F, 110.408997F), CubicBezierEasingFunction_09());
                // Frame 414.
                result.InsertKeyFrame(0.997590363F, new Vector2(115.869003F, 124.694F), CubicBezierEasingFunction_08());
                return result;
            }

            // - - - - Layer aggregator
            // - - -  Scale:0.7,0.7, Offset:<960, 540>
            // - - Transforms: Head Controler
            // - Transforms: Head
            // Transforms: Roght Eye Bro
            // Offset
            Vector2KeyFrameAnimation OffsetVector2Animation_04()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(330.697998F, 124.695F), HoldThenStepEasingFunction());
                // Frame 10.
                result.InsertKeyFrame(0.0240963846F, new Vector2(330.697998F, 110.408997F), CubicBezierEasingFunction_00());
                // Frame 19.
                result.InsertKeyFrame(0.0457831323F, new Vector2(330.697998F, 124.695F), CubicBezierEasingFunction_00());
                // Frame 26.
                result.InsertKeyFrame(0.062650606F, new Vector2(330.697998F, 110.408997F), CubicBezierEasingFunction_00());
                // Frame 386.
                result.InsertKeyFrame(0.930120468F, new Vector2(330.697998F, 110.408997F), CubicBezierEasingFunction_09());
                // Frame 414.
                result.InsertKeyFrame(0.997590363F, new Vector2(330.697998F, 124.695F), CubicBezierEasingFunction_08());
                return result;
            }

            // Offset
            Vector2KeyFrameAnimation OffsetVector2Animation_05()
            {
                // Frame 0.
                if (_offsetVector2Animation_05 != null) { return _offsetVector2Animation_05; }
                var result = _offsetVector2Animation_05 = CreateVector2KeyFrameAnimation(0F, new Vector2(-425.295013F, -311.084015F), HoldThenStepEasingFunction());
                result.SetReferenceParameter("_", _root);
                // Frame 23.
                result.InsertExpressionKeyFrame(0.0554216839F, "Pow(1-_.t1,3)*Vector2(-425.295,-311.084)+(3*Square(1-_.t1)*_.t1*Vector2(-425.295,-309.417))+(3*(1-_.t1)*Square(_.t1)*Vector2(-425.295,-299.584))+(Pow(_.t1,3)*Vector2(-425.295,-301.084))", StepThenHoldEasingFunction());
                // Frame 30.
                result.InsertKeyFrame(0.0722891539F, new Vector2(-425.295013F, -301.084015F), StepThenHoldEasingFunction());
                // Frame 30.
                result.InsertKeyFrame(0.0722891614F, new Vector2(-425.295013F, -320.084015F), CubicBezierEasingFunction_00());
                // Frame 37.
                result.InsertExpressionKeyFrame(0.0891566202F, "Pow(1-_.t1,3)*Vector2(-425.295,-320.084)+(3*Square(1-_.t1)*_.t1*Vector2(-425.295,-321.751))+(3*(1-_.t1)*Square(_.t1)*Vector2(-425.295,-312.584))+(Pow(_.t1,3)*Vector2(-425.295,-311.084))", StepThenHoldEasingFunction());
                // Frame 37.
                result.InsertKeyFrame(0.0891566277F, new Vector2(-425.295013F, -311.084015F), StepThenHoldEasingFunction());
                return result;
            }

            // Offset
            Vector2KeyFrameAnimation OffsetVector2Animation_06()
            {
                // Frame 0.
                if (_offsetVector2Animation_06 != null) { return _offsetVector2Animation_06; }
                var result = _offsetVector2Animation_06 = CreateVector2KeyFrameAnimation(0F, new Vector2(-235.423004F, -208.863998F), HoldThenStepEasingFunction());
                // Frame 19.
                result.InsertKeyFrame(0.0457831323F, new Vector2(-235.423004F, 48.2789993F), _c.CreateCubicBezierEasingFunction(new Vector2(0.549000025F, 0F), new Vector2(1F, 1F)));
                // Frame 386.
                result.InsertKeyFrame(0.930120468F, new Vector2(-235.423004F, 48.2789993F), CubicBezierEasingFunction_09());
                // Frame 414.
                result.InsertKeyFrame(0.997590363F, new Vector2(-235.423004F, -208.863998F), CubicBezierEasingFunction_00());
                return result;
            }

            // Offset
            Vector2KeyFrameAnimation OffsetVector2Animation_07()
            {
                // Frame 0.
                if (_offsetVector2Animation_07 != null) { return _offsetVector2Animation_07; }
                var result = _offsetVector2Animation_07 = CreateVector2KeyFrameAnimation(0F, new Vector2(-17.1809998F, 771.104004F), StepThenHoldEasingFunction());
                result.SetReferenceParameter("_", _root);
                // Frame 100.16.
                result.InsertKeyFrame(0.241354212F, new Vector2(-17.1809998F, 771.104004F), HoldThenStepEasingFunction());
                // Frame 140.
                result.InsertExpressionKeyFrame(0.337349355F, "Pow(1-_.t0,3)*Vector2(-17.181,771.104)+(3*Square(1-_.t0)*_.t0*Vector2(-12.286,-76.19702))+(3*(1-_.t0)*Square(_.t0)*Vector2(-22.943,-728.087))+(Pow(_.t0,3)*Vector2(-22.943,-728.087))", StepThenHoldEasingFunction());
                // Frame 140.
                result.InsertKeyFrame(0.337349385F, new Vector2(-22.9430008F, -728.086975F), StepThenHoldEasingFunction());
                // Frame 176.92.
                result.InsertKeyFrame(0.426313251F, new Vector2(-22.8950005F, 42.5330009F), CubicBezierEasingFunction_10());
                // Frame 187.
                result.InsertKeyFrame(0.450602412F, new Vector2(-22.8950005F, -7.46700001F), CubicBezierEasingFunction_00());
                // Frame 302.
                result.InsertKeyFrame(0.727710843F, new Vector2(-22.8950005F, -7.46700001F), CubicBezierEasingFunction_04());
                // Frame 318.
                result.InsertKeyFrame(0.766265035F, new Vector2(-22.8950005F, 32.5330009F), CubicBezierEasingFunction_11());
                return result;
            }

            // Offset
            Vector2KeyFrameAnimation OffsetVector2Animation_08()
            {
                // Frame 0.
                if (_offsetVector2Animation_08 != null) { return _offsetVector2Animation_08; }
                var result = _offsetVector2Animation_08 = CreateVector2KeyFrameAnimation(0F, new Vector2(37.8190002F, 341.410004F), StepThenHoldEasingFunction());
                result.SetReferenceParameter("_", _root);
                // Frame 100.16.
                result.InsertKeyFrame(0.241354212F, new Vector2(37.8190002F, 341.410004F), HoldThenStepEasingFunction());
                // Frame 140.
                result.InsertExpressionKeyFrame(0.337349355F, "Pow(1-_.t0,3)*Vector2(37.819,341.41)+(3*Square(1-_.t0)*_.t0*Vector2(42.714,-505.891))+(3*(1-_.t0)*Square(_.t0)*Vector2(32.057,-1157.782))+(Pow(_.t0,3)*Vector2(32.057,-1157.782))", StepThenHoldEasingFunction());
                // Frame 140.
                result.InsertKeyFrame(0.337349385F, new Vector2(32.0569992F, -1157.78198F), StepThenHoldEasingFunction());
                // Frame 176.92.
                result.InsertKeyFrame(0.426313251F, new Vector2(32.1049995F, -387.161987F), CubicBezierEasingFunction_10());
                // Frame 187.
                result.InsertKeyFrame(0.450602412F, new Vector2(32.1049995F, -437.161987F), CubicBezierEasingFunction_00());
                // Frame 302.
                result.InsertKeyFrame(0.727710843F, new Vector2(32.1049995F, -437.161987F), CubicBezierEasingFunction_04());
                // Frame 318.
                result.InsertKeyFrame(0.766265035F, new Vector2(32.1049995F, -397.161987F), CubicBezierEasingFunction_11());
                return result;
            }

            // Offset
            Vector2KeyFrameAnimation OffsetVector2Animation_09()
            {
                // Frame 0.
                if (_offsetVector2Animation_09 != null) { return _offsetVector2Animation_09; }
                var result = _offsetVector2Animation_09 = CreateVector2KeyFrameAnimation(0F, new Vector2(1487.85706F, 429.694F), StepThenHoldEasingFunction());
                // Frame 64.
                result.InsertKeyFrame(0.154216871F, new Vector2(1487.85706F, 429.694F), HoldThenStepEasingFunction());
                // Frame 127.
                result.InsertKeyFrame(0.306024104F, new Vector2(-55F, 429.694F), CubicBezierEasingFunction_12());
                // Frame 315.
                result.InsertKeyFrame(0.759036124F, new Vector2(-55F, 429.694F), CubicBezierEasingFunction_13());
                // Frame 325.
                result.InsertKeyFrame(0.783132553F, new Vector2(-86.4290009F, 386.837006F), CubicBezierEasingFunction_14());
                // Frame 350.
                result.InsertKeyFrame(0.843373477F, new Vector2(-183.570999F, 415.408997F), CubicBezierEasingFunction_15());
                // Frame 388.
                result.InsertKeyFrame(0.934939742F, new Vector2(1373.57104F, -1213.16296F), CubicBezierEasingFunction_16());
                return result;
            }

            // - - - - - Layer aggregator
            // - - - -  Scale:0.7,0.7, Offset:<960, 540>
            // - - - Transforms: Head Controler
            // - - Transforms: Head
            // - Transforms: Mouth Outline
            // Transforms: Left Cute
            // Offset
            Vector2KeyFrameAnimation OffsetVector2Animation_10()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(111.217003F, 99.5839996F), StepThenHoldEasingFunction());
                result.SetReferenceParameter("_", _root);
                // Frame 154.
                result.InsertKeyFrame(0.371084332F, new Vector2(111.217003F, 99.5839996F), HoldThenStepEasingFunction());
                // Frame 171.44.
                result.InsertExpressionKeyFrame(0.413110822F, "Pow(1-_.t0,3)*Vector2(111.217,99.584)+(3*Square(1-_.t0)*_.t0*Vector2(109.634,99.292))+(3*(1-_.t0)*Square(_.t0)*Vector2(101.717,97.834))+(Pow(_.t0,3)*Vector2(101.717,97.834))", StepThenHoldEasingFunction());
                // Frame 171.44.
                result.InsertKeyFrame(0.413110852F, new Vector2(101.717003F, 97.8339996F), StepThenHoldEasingFunction());
                // Frame 187.43.
                result.InsertKeyFrame(0.45163855F, new Vector2(111.217003F, 99.5839996F), CubicBezierEasingFunction_00());
                // Frame 201.97.
                result.InsertKeyFrame(0.486662656F, new Vector2(101.717003F, 97.8339996F), CubicBezierEasingFunction_00());
                // Frame 217.95.
                result.InsertKeyFrame(0.525187969F, new Vector2(111.217003F, 99.5839996F), CubicBezierEasingFunction_00());
                // Frame 232.49.
                result.InsertKeyFrame(0.560212076F, new Vector2(101.717003F, 97.8339996F), CubicBezierEasingFunction_00());
                // Frame 248.48.
                result.InsertKeyFrame(0.598739743F, new Vector2(111.217003F, 99.5839996F), CubicBezierEasingFunction_00());
                // Frame 263.01.
                result.InsertKeyFrame(0.63376385F, new Vector2(101.717003F, 97.8339996F), CubicBezierEasingFunction_00());
                // Frame 279.
                result.InsertExpressionKeyFrame(0.672289073F, "Pow(1-_.t3,3)*Vector2(101.717,97.834)+(3*Square(1-_.t3)*_.t3*Vector2(101.717,97.834))+(3*(1-_.t3)*Square(_.t3)*Vector2(109.634,99.292))+(Pow(_.t3,3)*Vector2(111.217,99.584))", StepThenHoldEasingFunction());
                // Frame 279.
                result.InsertKeyFrame(0.672289133F, new Vector2(111.217003F, 99.5839996F), StepThenHoldEasingFunction());
                return result;
            }

            // - - - - - Layer aggregator
            // - - - -  Scale:0.7,0.7, Offset:<960, 540>
            // - - - Transforms: Head Controler
            // - - Transforms: Head
            // - Transforms: Mouth Outline
            // Transforms: Right Cute
            // Offset
            Vector2KeyFrameAnimation OffsetVector2Animation_11()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(227.955994F, 99.7030029F), StepThenHoldEasingFunction());
                result.SetReferenceParameter("_", _root);
                // Frame 154.
                result.InsertKeyFrame(0.371084332F, new Vector2(227.955994F, 99.7030029F), HoldThenStepEasingFunction());
                // Frame 171.44.
                result.InsertKeyFrame(0.413110852F, new Vector2(242.705994F, 99.7030029F), CubicBezierEasingFunction_00());
                // Frame 187.43.
                result.InsertKeyFrame(0.45163855F, new Vector2(227.955994F, 99.7030029F), CubicBezierEasingFunction_00());
                // Frame 201.97.
                result.InsertKeyFrame(0.486662656F, new Vector2(242.705994F, 99.7030029F), CubicBezierEasingFunction_00());
                // Frame 217.95.
                result.InsertKeyFrame(0.525187969F, new Vector2(227.955994F, 99.7030029F), CubicBezierEasingFunction_00());
                // Frame 232.49.
                result.InsertKeyFrame(0.560212076F, new Vector2(242.705994F, 99.7030029F), CubicBezierEasingFunction_00());
                // Frame 248.48.
                result.InsertKeyFrame(0.598739743F, new Vector2(227.955994F, 99.7030029F), CubicBezierEasingFunction_00());
                // Frame 263.01.
                result.InsertKeyFrame(0.63376385F, new Vector2(242.705994F, 99.7030029F), CubicBezierEasingFunction_00());
                // Frame 279.
                result.InsertExpressionKeyFrame(0.672289073F, "Pow(1-_.t3,3)*Vector2(242.706,99.703)+(3*Square(1-_.t3)*_.t3*Vector2(242.706,99.703))+(3*(1-_.t3)*Square(_.t3)*Vector2(230.414,99.703))+(Pow(_.t3,3)*Vector2(227.956,99.703))", StepThenHoldEasingFunction());
                // Frame 279.
                result.InsertKeyFrame(0.672289133F, new Vector2(227.955994F, 99.7030029F), StepThenHoldEasingFunction());
                return result;
            }

            // - Layer aggregator
            // Offset
            Vector2KeyFrameAnimation OffsetVector2Animation_12()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(2030F, 540F), StepThenHoldEasingFunction());
                // Frame 64.
                result.InsertKeyFrame(0.154216871F, new Vector2(2030F, 540F), HoldThenStepEasingFunction());
                // Frame 127.
                result.InsertKeyFrame(0.306024104F, new Vector2(960F, 540F), _c.CreateCubicBezierEasingFunction(new Vector2(0.352999985F, 0F), new Vector2(0.330000013F, 1F)));
                // Frame 316.
                result.InsertKeyFrame(0.761445761F, new Vector2(960F, 540F), _c.CreateCubicBezierEasingFunction(new Vector2(0.333000004F, 0.333000004F), new Vector2(0.330000013F, 0.330000013F)));
                // Frame 325.
                result.InsertKeyFrame(0.783132553F, new Vector2(955.700012F, 540F), CubicBezierEasingFunction_18());
                // Frame 350.
                result.InsertKeyFrame(0.843373477F, new Vector2(880.700012F, 574.5F), CubicBezierEasingFunction_18());
                // Frame 388.
                result.InsertKeyFrame(0.934939742F, new Vector2(2102.69995F, 574.5F), _c.CreateCubicBezierEasingFunction(new Vector2(0.504999995F, 0F), new Vector2(0.402999997F, 1F)));
                return result;
            }

            // - - - Shape tree root for layer: Milk
            // - -  Scale:0.7,0.7, Offset:<960, 540>
            // - Transforms: Milk Controler
            // Transforms: Milk
            // Offset
            Vector2KeyFrameAnimation OffsetVector2Animation_13()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(228F, -260F), StepThenHoldEasingFunction());
                // Frame 131.
                result.InsertKeyFrame(0.315662652F, new Vector2(228F, -260F), HoldThenStepEasingFunction());
                // Frame 335.
                result.InsertKeyFrame(0.807228923F, new Vector2(-266.227997F, -260F), _c.CreateCubicBezierEasingFunction(new Vector2(0.179000005F, 0F), new Vector2(0.365999997F, 1F)));
                return result;
            }

            // - - Shape tree root for layer: Milk
            // -  Scale:0.7,0.7, Offset:<960, 540>
            // Transforms: Milk Controler
            // Offset
            Vector2KeyFrameAnimation OffsetVector2Animation_14()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(55F, -319.694F), StepThenHoldEasingFunction());
                // Frame 165.
                result.InsertKeyFrame(0.397590369F, new Vector2(55F, -319.694F), HoldThenStepEasingFunction());
                // Frame 306.
                result.InsertKeyFrame(0.737349391F, new Vector2(55F, -124.605003F), _c.CreateCubicBezierEasingFunction(new Vector2(0.213F, 0F), new Vector2(0.477999985F, 1F)));
                return result;
            }

            // - Layer aggregator
            // Scale
            Vector2KeyFrameAnimation ScaleVector2Animation_0()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(0.5F, 1F), HoldThenStepEasingFunction());
                // Frame 26.74.
                result.InsertKeyFrame(0.0644391403F, new Vector2(1F, 1F), CubicBezierEasingFunction_00());
                // Frame 33.68.
                result.InsertKeyFrame(0.0811455846F, new Vector2(0.970000029F, 1F), CubicBezierEasingFunction_00());
                // Frame 41.6.
                result.InsertKeyFrame(0.100238666F, new Vector2(1F, 1F), CubicBezierEasingFunction_00());
                // Frame 386.28.
                result.InsertKeyFrame(0.930787563F, new Vector2(1F, 1F), CubicBezierEasingFunction_01());
                // Frame 414.01.
                result.InsertKeyFrame(0.99761337F, new Vector2(0.5F, 1F), CubicBezierEasingFunction_02());
                return result;
            }

            // Scale
            Vector2KeyFrameAnimation ScaleVector2Animation_1()
            {
                // Frame 0.
                if (_scaleVector2Animation_1 != null) { return _scaleVector2Animation_1; }
                var result = _scaleVector2Animation_1 = CreateVector2KeyFrameAnimation(0F, new Vector2(1F, 1F), StepThenHoldEasingFunction());
                // Frame 54.
                result.InsertKeyFrame(0.130120486F, new Vector2(1F, 1F), HoldThenStepEasingFunction());
                // Frame 59.
                result.InsertKeyFrame(0.142168671F, new Vector2(1F, 0F), CubicBezierEasingFunction_00());
                // Frame 68.
                result.InsertKeyFrame(0.163855419F, new Vector2(1F, 1F), CubicBezierEasingFunction_00());
                // Frame 125.
                result.InsertKeyFrame(0.30120483F, new Vector2(1F, 1F), CubicBezierEasingFunction_08());
                // Frame 131.
                result.InsertKeyFrame(0.315662652F, new Vector2(1F, 0F), CubicBezierEasingFunction_00());
                // Frame 139.
                result.InsertKeyFrame(0.334939748F, new Vector2(1F, 1F), CubicBezierEasingFunction_00());
                // Frame 222.
                result.InsertKeyFrame(0.534939766F, new Vector2(1F, 1F), CubicBezierEasingFunction_08());
                // Frame 228.
                result.InsertKeyFrame(0.549397588F, new Vector2(1F, 0F), CubicBezierEasingFunction_00());
                // Frame 236.
                result.InsertKeyFrame(0.568674684F, new Vector2(1F, 1F), CubicBezierEasingFunction_00());
                // Frame 296.
                result.InsertKeyFrame(0.713253021F, new Vector2(1F, 1F), CubicBezierEasingFunction_08());
                // Frame 302.
                result.InsertKeyFrame(0.727710843F, new Vector2(1F, 0F), CubicBezierEasingFunction_00());
                // Frame 310.
                result.InsertKeyFrame(0.746987939F, new Vector2(1F, 1F), CubicBezierEasingFunction_00());
                return result;
            }

            // Scale
            Vector2KeyFrameAnimation ScaleVector2Animation_2()
            {
                // Frame 0.
                if (_scaleVector2Animation_2 != null) { return _scaleVector2Animation_2; }
                var result = _scaleVector2Animation_2 = CreateVector2KeyFrameAnimation(0F, new Vector2(1F, 1F), StepThenHoldEasingFunction());
                // Frame 175.
                result.InsertKeyFrame(0.421686739F, new Vector2(1F, 1F), HoldThenStepEasingFunction());
                // Frame 205.
                result.InsertKeyFrame(0.493975908F, new Vector2(1.79999995F, 1.79999995F), CubicBezierEasingFunction_00());
                // Frame 222.
                result.InsertKeyFrame(0.534939766F, new Vector2(1.70000005F, 1.70000005F), CubicBezierEasingFunction_01());
                // Frame 240.
                result.InsertKeyFrame(0.578313231F, new Vector2(1.79999995F, 1.79999995F), CubicBezierEasingFunction_08());
                // Frame 283.
                result.InsertKeyFrame(0.681927741F, new Vector2(1.79999995F, 1.79999995F), CubicBezierEasingFunction_08());
                // Frame 294.
                result.InsertKeyFrame(0.708433747F, new Vector2(1F, 1F), CubicBezierEasingFunction_08());
                return result;
            }

            // Scale
            Vector2KeyFrameAnimation ScaleVector2Animation_3()
            {
                // Frame 0.
                if (_scaleVector2Animation_3 != null) { return _scaleVector2Animation_3; }
                var result = _scaleVector2Animation_3 = CreateVector2KeyFrameAnimation(0F, new Vector2(1.42857003F, 1.42857003F), StepThenHoldEasingFunction());
                // Frame 53.
                result.InsertKeyFrame(0.127710849F, new Vector2(1.42857003F, 1.42857003F), HoldThenStepEasingFunction());
                // Frame 72.
                result.InsertKeyFrame(0.173493981F, new Vector2(1.31256998F, 1.42857003F), CubicBezierEasingFunction_00());
                // Frame 80.
                result.InsertKeyFrame(0.192771077F, new Vector2(1.31256998F, 1.42857003F), CubicBezierEasingFunction_02());
                // Frame 119.
                result.InsertKeyFrame(0.286746979F, new Vector2(1.42857003F, 1.42857003F), CubicBezierEasingFunction_02());
                return result;
            }

            // Scale
            Vector2KeyFrameAnimation ScaleVector2Animation_4()
            {
                // Frame 0.
                if (_scaleVector2Animation_4 != null) { return _scaleVector2Animation_4; }
                var result = _scaleVector2Animation_4 = CreateVector2KeyFrameAnimation(0F, new Vector2(1F, 0F), StepThenHoldEasingFunction());
                // Frame 100.16.
                result.InsertKeyFrame(0.241354212F, new Vector2(1F, 0F), HoldThenStepEasingFunction());
                // Frame 124.53.
                result.InsertKeyFrame(0.300069869F, new Vector2(1F, 0.579999983F), CubicBezierEasingFunction_08());
                // Frame 176.92.
                result.InsertKeyFrame(0.426313251F, new Vector2(1F, 1F), CubicBezierEasingFunction_00());
                // Frame 187.
                result.InsertKeyFrame(0.450602412F, new Vector2(1F, 1F), CubicBezierEasingFunction_00());
                return result;
            }

            // - - - - - Layer aggregator
            // - - - -  Scale:0.7,0.7, Offset:<960, 540>
            // - - - Transforms: Head Controler
            // - - Transforms: Head
            // - Transforms: Mouth Outline
            // Transforms: Smile
            // Scale
            Vector2KeyFrameAnimation ScaleVector2Animation_5()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(1F, 1F), StepThenHoldEasingFunction());
                // Frame 154.
                result.InsertKeyFrame(0.371084332F, new Vector2(1F, 1F), HoldThenStepEasingFunction());
                // Frame 171.44.
                result.InsertKeyFrame(0.413110852F, new Vector2(1.20000005F, 1F), CubicBezierEasingFunction_00());
                // Frame 187.43.
                result.InsertKeyFrame(0.45163855F, new Vector2(0.949999988F, 1F), CubicBezierEasingFunction_00());
                // Frame 201.97.
                result.InsertKeyFrame(0.486662656F, new Vector2(1.20000005F, 1F), CubicBezierEasingFunction_00());
                // Frame 217.95.
                result.InsertKeyFrame(0.525187969F, new Vector2(0.949999988F, 1F), CubicBezierEasingFunction_00());
                // Frame 232.49.
                result.InsertKeyFrame(0.560212076F, new Vector2(1.20000005F, 1F), CubicBezierEasingFunction_00());
                // Frame 248.48.
                result.InsertKeyFrame(0.598739743F, new Vector2(0.949999988F, 1F), CubicBezierEasingFunction_00());
                // Frame 263.01.
                result.InsertKeyFrame(0.63376385F, new Vector2(1.20000005F, 1F), CubicBezierEasingFunction_00());
                // Frame 279.
                result.InsertKeyFrame(0.672289133F, new Vector2(0.949999988F, 1F), CubicBezierEasingFunction_00());
                return result;
            }

            // - Layer aggregator
            // Scale
            Vector2KeyFrameAnimation ScaleVector2Animation_6()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(1F, 1F), StepThenHoldEasingFunction());
                // Frame 127.
                result.InsertKeyFrame(0.306024104F, new Vector2(1F, 1F), HoldThenStepEasingFunction());
                // Frame 350.
                result.InsertKeyFrame(0.843373477F, new Vector2(1F, 1F), HoldThenStepEasingFunction());
                // Frame 370.
                result.InsertKeyFrame(0.891566277F, new Vector2(0F, 0F), CubicBezierEasingFunction_04());
                return result;
            }

            // - PreComp layer: Milk Lable
            // Transforms for Bottle Controller
            // Offset
            Vector3KeyFrameAnimation OffsetVector3Animation_0()
            {
                // Frame 0.
                var result = CreateVector3KeyFrameAnimation(0F, new Vector3(-1832F, -969.69397F, 0F), StepThenHoldEasingFunction());
                // Frame 60.
                result.InsertKeyFrame(0.144578308F, new Vector3(-1832F, -969.69397F, 0F), HoldThenStepEasingFunction());
                // Frame 123.
                result.InsertKeyFrame(0.296385556F, new Vector3(-905F, -969.69397F, 0F), CubicBezierEasingFunction_12());
                return result;
            }

            // PreComp layer: Milk Lable
            // Offset
            Vector3KeyFrameAnimation OffsetVector3Animation_1()
            {
                // Frame 0.
                var result = CreateVector3KeyFrameAnimation(0F, new Vector3(1487.85706F, 429.694F, 0F), StepThenHoldEasingFunction());
                // Frame 64.
                result.InsertKeyFrame(0.154216871F, new Vector3(1487.85706F, 429.694F, 0F), HoldThenStepEasingFunction());
                // Frame 127.
                result.InsertKeyFrame(0.306024104F, new Vector3(-55F, 429.694F, 0F), CubicBezierEasingFunction_12());
                // Frame 315.
                result.InsertKeyFrame(0.759036124F, new Vector3(-55F, 429.694F, 0F), CubicBezierEasingFunction_13());
                // Frame 325.
                result.InsertKeyFrame(0.783132553F, new Vector3(-86.4290009F, 386.837006F, 0F), CubicBezierEasingFunction_14());
                // Frame 350.
                result.InsertKeyFrame(0.843373477F, new Vector3(-183.570999F, 415.408997F, 0F), CubicBezierEasingFunction_15());
                // Frame 388.
                result.InsertKeyFrame(0.934939742F, new Vector3(1373.57104F, -1213.16296F, 0F), CubicBezierEasingFunction_16());
                return result;
            }

            internal Cow_AnimatedVisual(
                Compositor compositor
                )
            {
                _c = compositor;
                _reusableExpressionAnimation = compositor.CreateExpressionAnimation();
                Root();
            }

            public Visual RootVisual => _root;
            public TimeSpan Duration => TimeSpan.FromTicks(c_durationTicks);
            public Vector2 Size => new Vector2(1920F, 1080F);
            void IDisposable.Dispose() => _root?.Dispose();

            public void CreateAnimations()
            {
                _containerShape_00.StartAnimation("Scale", ScaleVector2Animation_0());
                var controller = _containerShape_00.TryGetAnimationController("Scale");
                controller.Pause();
                BindProperty(controller, "Progress", "_.Progress*0.9904535+0.00954654", "_", _root);
                StartProgressBoundAnimation(_containerShape_01, "Offset", OffsetVector2Animation_06(), RootProgress());
                StartProgressBoundAnimation(_containerShape_02, "Scale", ScaleVector2Animation_3(), RootProgress());
                StartProgressBoundAnimation(_containerShape_03, "Offset", OffsetVector2Animation_05(), RootProgress());
                StartProgressBoundAnimation(_containerShape_04, "Scale", ScaleVector2Animation_1(), RootProgress());
                StartProgressBoundAnimation(_containerShape_04, "Offset", OffsetVector2Animation_00(), RootProgress());
                StartProgressBoundAnimation(_containerShape_05, "Scale", ScaleVector2Animation_1(), RootProgress());
                StartProgressBoundAnimation(_containerShape_05, "Offset", OffsetVector2Animation_01(), RootProgress());
                StartProgressBoundAnimation(_containerShape_06, "Offset", OffsetVector2Animation_02(), RootProgress());
                StartProgressBoundAnimation(_containerShape_07, "Offset", OffsetVector2Animation_02(), RootProgress());
                StartProgressBoundAnimation(_containerShape_08, "Offset", OffsetVector2Animation_03(), RootProgress());
                StartProgressBoundAnimation(_containerShape_09, "Offset", OffsetVector2Animation_04(), RootProgress());
                StartProgressBoundAnimation(_containerShape_10, "Offset", OffsetVector2Animation_02(), RootProgress());
                StartProgressBoundAnimation(_containerShape_11, "Scale", ScaleVector2Animation_2(), RootProgress());
                StartProgressBoundAnimation(_containerShape_12, "Scale", ScaleVector2Animation_2(), RootProgress());
                StartProgressBoundAnimation(_containerShape_13, "RotationAngleInDegrees", RotationAngleInDegreesScalarAnimation_m496_to_0(), RootProgress());
                StartProgressBoundAnimation(_containerShape_13, "Scale", ScaleVector2Animation_4(), RootProgress());
                StartProgressBoundAnimation(_containerShape_13, "Offset", OffsetVector2Animation_07(), RootProgress());
                StartProgressBoundAnimation(_containerShape_14, "RotationAngleInDegrees", RotationAngleInDegreesScalarAnimation_m496_to_0(), RootProgress());
                StartProgressBoundAnimation(_containerShape_14, "Scale", ScaleVector2Animation_4(), RootProgress());
                StartProgressBoundAnimation(_containerShape_14, "Offset", OffsetVector2Animation_07(), RootProgress());
                StartProgressBoundAnimation(_containerShape_15, "RotationAngleInDegrees", RotationAngleInDegreesScalarAnimation_m496_to_0(), RootProgress());
                StartProgressBoundAnimation(_containerShape_15, "Scale", ScaleVector2Animation_4(), RootProgress());
                StartProgressBoundAnimation(_containerShape_15, "Offset", OffsetVector2Animation_07(), RootProgress());
                StartProgressBoundAnimation(_containerShape_16, "RotationAngleInDegrees", RotationAngleInDegreesScalarAnimation_m496_to_0(), RootProgress());
                StartProgressBoundAnimation(_containerShape_16, "Scale", ScaleVector2Animation_4(), RootProgress());
                StartProgressBoundAnimation(_containerShape_16, "Offset", OffsetVector2Animation_07(), RootProgress());
                StartProgressBoundAnimation(_containerShape_17, "RotationAngleInDegrees", RotationAngleInDegreesScalarAnimation_0_to_m176(), RootProgress());
                StartProgressBoundAnimation(_containerShape_17, "Offset", OffsetVector2Animation_09(), RootProgress());
                StartProgressBoundAnimation(_containerShape_18, "RotationAngleInDegrees", RotationAngleInDegreesScalarAnimation_m496_to_0(), RootProgress());
                StartProgressBoundAnimation(_containerShape_18, "Scale", ScaleVector2Animation_4(), RootProgress());
                StartProgressBoundAnimation(_containerShape_18, "Offset", OffsetVector2Animation_08(), RootProgress());
                StartProgressBoundAnimation(_containerShape_19, "RotationAngleInDegrees", RotationAngleInDegreesScalarAnimation_0_to_m176(), RootProgress());
                StartProgressBoundAnimation(_containerShape_19, "Offset", OffsetVector2Animation_09(), RootProgress());
                StartProgressBoundAnimation(_containerShape_20, "RotationAngleInDegrees", RotationAngleInDegreesScalarAnimation_m496_to_0(), RootProgress());
                StartProgressBoundAnimation(_containerShape_20, "Scale", ScaleVector2Animation_4(), RootProgress());
                StartProgressBoundAnimation(_containerShape_20, "Offset", OffsetVector2Animation_08(), RootProgress());
                StartProgressBoundAnimation(_containerShape_21, "Offset", OffsetVector2Animation_06(), RootProgress());
                StartProgressBoundAnimation(_containerShape_22, "Scale", ScaleVector2Animation_3(), RootProgress());
                StartProgressBoundAnimation(_containerShape_23, "Offset", OffsetVector2Animation_05(), RootProgress());
                StartProgressBoundAnimation(_containerShape_24, "Offset", OffsetVector2Animation_02(), RootProgress());
                StartProgressBoundAnimation(_containerShape_25, "Offset", OffsetVector2Animation_10(), RootProgress());
                StartProgressBoundAnimation(_containerShape_26, "Offset", OffsetVector2Animation_11(), RootProgress());
                StartProgressBoundAnimation(_containerShape_27, "Scale", ScaleVector2Animation_5(), RootProgress());
                StartProgressBoundAnimation(_containerShape_28, "RotationAngleInDegrees", RotationAngleInDegreesScalarAnimation_m15_to_m15(), RootProgress());
                StartProgressBoundAnimation(_containerShape_29, "RotationAngleInDegrees", RotationAngleInDegreesScalarAnimation_15_to_15(), RootProgress());
                StartProgressBoundAnimation(_containerShape_30, "RotationAngleInDegrees", RotationAngleInDegreesScalarAnimation_30_to_30(), RootProgress());
                StartProgressBoundAnimation(_containerShape_31, "RotationAngleInDegrees", RotationAngleInDegreesScalarAnimation_m30_to_m30(), RootProgress());
                StartProgressBoundAnimation(_containerShape_32, "Scale", ScaleVector2Animation_6(), RootProgress());
                StartProgressBoundAnimation(_containerShape_32, "Offset", OffsetVector2Animation_12(), RootProgress());
                StartProgressBoundAnimation(_containerShape_33, "RotationAngleInDegrees", RotationAngleInDegreesScalarAnimation_0_to_m176(), RootProgress());
                StartProgressBoundAnimation(_containerShape_33, "Offset", OffsetVector2Animation_09(), RootProgress());
                StartProgressBoundAnimation(_containerShape_34, "Offset", OffsetVector2Animation_14(), RootProgress());
                StartProgressBoundAnimation(_containerShape_35, "RotationAngleInDegrees", RotationAngleInDegreesScalarAnimation_0_to_m176(), RootProgress());
                StartProgressBoundAnimation(_containerShape_35, "Offset", OffsetVector2Animation_09(), RootProgress());
                StartProgressBoundAnimation(_containerShape_36, "RotationAngleInDegrees", RotationAngleInDegreesScalarAnimation_0_to_m176(), RootProgress());
                StartProgressBoundAnimation(_containerShape_36, "Offset", OffsetVector2Animation_09(), RootProgress());
                StartProgressBoundAnimation(_containerShape_37, "RotationAngleInDegrees", RotationAngleInDegreesScalarAnimation_0_to_m176(), RootProgress());
                StartProgressBoundAnimation(_containerShape_37, "Offset", OffsetVector2Animation_09(), RootProgress());
                StartProgressBoundAnimation(_containerShape_38, "RotationAngleInDegrees", RotationAngleInDegreesScalarAnimation_0_to_m176(), RootProgress());
                StartProgressBoundAnimation(_containerShape_38, "Offset", OffsetVector2Animation_09(), RootProgress());
                StartProgressBoundAnimation(_containerShape_39, "RotationAngleInDegrees", RotationAngleInDegreesScalarAnimation_m496_to_0(), RootProgress());
                StartProgressBoundAnimation(_containerShape_39, "Scale", ScaleVector2Animation_4(), RootProgress());
                StartProgressBoundAnimation(_containerShape_39, "Offset", OffsetVector2Animation_07(), RootProgress());
                StartProgressBoundAnimation(_containerShape_40, "RotationAngleInDegrees", RotationAngleInDegreesScalarAnimation_m496_to_0(), RootProgress());
                StartProgressBoundAnimation(_containerShape_40, "Scale", ScaleVector2Animation_4(), RootProgress());
                StartProgressBoundAnimation(_containerShape_40, "Offset", OffsetVector2Animation_07(), RootProgress());
                StartProgressBoundAnimation(_pathGeometry_02, "Path", PathKeyFrameAnimation_0(), RootProgress());
                StartProgressBoundAnimation(_pathGeometry_03, "Path", PathKeyFrameAnimation_1(), RootProgress());
                StartProgressBoundAnimation(_pathGeometry_04, "Path", PathKeyFrameAnimation_2(), RootProgress());
                StartProgressBoundAnimation(_pathGeometry_05, "Path", PathKeyFrameAnimation_3(), RootProgress());
                StartProgressBoundAnimation(_pathGeometry_48, "Path", PathKeyFrameAnimation_4(), RootProgress());
                StartProgressBoundAnimation(_spriteShape_52, "Offset", OffsetVector2Animation_13(), RootProgress());
                StartProgressBoundAnimation(_containerVisual_09, "RotationAngleInDegrees", RotationAngleInDegreesScalarAnimation_0_to_m176(), RootProgress());
                StartProgressBoundAnimation(_containerVisual_09, "Offset", OffsetVector3Animation_1(), RootProgress());
                StartProgressBoundAnimation(_containerVisual_10, "Offset", OffsetVector3Animation_0(), RootProgress());
                StartProgressBoundAnimation(_root.Properties, "t0", t0ScalarAnimation_0_to_1(), RootProgress());
                StartProgressBoundAnimation(_root.Properties, "t1", t1ScalarAnimation_0_to_1(), RootProgress());
                StartProgressBoundAnimation(_root.Properties, "t2", t2ScalarAnimation_0_to_1(), RootProgress());
                StartProgressBoundAnimation(_root.Properties, "t3", t3ScalarAnimation_0_to_1(), RootProgress());
                StartProgressBoundAnimation(_shapeVisual_01, "IsVisible", IsVisibleBooleanAnimation_0(), RootProgress());
                StartProgressBoundAnimation(_shapeVisual_02, "IsVisible", IsVisibleBooleanAnimation_0(), RootProgress());
                StartProgressBoundAnimation(_shapeVisual_03, "IsVisible", IsVisibleBooleanAnimation_1(), RootProgress());
                StartProgressBoundAnimation(_shapeVisual_04, "IsVisible", IsVisibleBooleanAnimation_1(), RootProgress());
                StartProgressBoundAnimation(_shapeVisual_05, "IsVisible", IsVisibleBooleanAnimation_2(), RootProgress());
                StartProgressBoundAnimation(_shapeVisual_06, "IsVisible", IsVisibleBooleanAnimation_2(), RootProgress());
                StartProgressBoundAnimation(_shapeVisual_14, "IsVisible", IsVisibleBooleanAnimation_3(), RootProgress());
                StartProgressBoundAnimation(_shapeVisual_15, "IsVisible", IsVisibleBooleanAnimation_3(), RootProgress());
            }

            public void DestroyAnimations()
            {
                _containerShape_00.StopAnimation("Scale");
                _containerShape_01.StopAnimation("Offset");
                _containerShape_02.StopAnimation("Scale");
                _containerShape_03.StopAnimation("Offset");
                _containerShape_04.StopAnimation("Scale");
                _containerShape_04.StopAnimation("Offset");
                _containerShape_05.StopAnimation("Scale");
                _containerShape_05.StopAnimation("Offset");
                _containerShape_06.StopAnimation("Offset");
                _containerShape_07.StopAnimation("Offset");
                _containerShape_08.StopAnimation("Offset");
                _containerShape_09.StopAnimation("Offset");
                _containerShape_10.StopAnimation("Offset");
                _containerShape_11.StopAnimation("Scale");
                _containerShape_12.StopAnimation("Scale");
                _containerShape_13.StopAnimation("RotationAngleInDegrees");
                _containerShape_13.StopAnimation("Scale");
                _containerShape_13.StopAnimation("Offset");
                _containerShape_14.StopAnimation("RotationAngleInDegrees");
                _containerShape_14.StopAnimation("Scale");
                _containerShape_14.StopAnimation("Offset");
                _containerShape_15.StopAnimation("RotationAngleInDegrees");
                _containerShape_15.StopAnimation("Scale");
                _containerShape_15.StopAnimation("Offset");
                _containerShape_16.StopAnimation("RotationAngleInDegrees");
                _containerShape_16.StopAnimation("Scale");
                _containerShape_16.StopAnimation("Offset");
                _containerShape_17.StopAnimation("RotationAngleInDegrees");
                _containerShape_17.StopAnimation("Offset");
                _containerShape_18.StopAnimation("RotationAngleInDegrees");
                _containerShape_18.StopAnimation("Scale");
                _containerShape_18.StopAnimation("Offset");
                _containerShape_19.StopAnimation("RotationAngleInDegrees");
                _containerShape_19.StopAnimation("Offset");
                _containerShape_20.StopAnimation("RotationAngleInDegrees");
                _containerShape_20.StopAnimation("Scale");
                _containerShape_20.StopAnimation("Offset");
                _containerShape_21.StopAnimation("Offset");
                _containerShape_22.StopAnimation("Scale");
                _containerShape_23.StopAnimation("Offset");
                _containerShape_24.StopAnimation("Offset");
                _containerShape_25.StopAnimation("Offset");
                _containerShape_26.StopAnimation("Offset");
                _containerShape_27.StopAnimation("Scale");
                _containerShape_28.StopAnimation("RotationAngleInDegrees");
                _containerShape_29.StopAnimation("RotationAngleInDegrees");
                _containerShape_30.StopAnimation("RotationAngleInDegrees");
                _containerShape_31.StopAnimation("RotationAngleInDegrees");
                _containerShape_32.StopAnimation("Scale");
                _containerShape_32.StopAnimation("Offset");
                _containerShape_33.StopAnimation("RotationAngleInDegrees");
                _containerShape_33.StopAnimation("Offset");
                _containerShape_34.StopAnimation("Offset");
                _containerShape_35.StopAnimation("RotationAngleInDegrees");
                _containerShape_35.StopAnimation("Offset");
                _containerShape_36.StopAnimation("RotationAngleInDegrees");
                _containerShape_36.StopAnimation("Offset");
                _containerShape_37.StopAnimation("RotationAngleInDegrees");
                _containerShape_37.StopAnimation("Offset");
                _containerShape_38.StopAnimation("RotationAngleInDegrees");
                _containerShape_38.StopAnimation("Offset");
                _containerShape_39.StopAnimation("RotationAngleInDegrees");
                _containerShape_39.StopAnimation("Scale");
                _containerShape_39.StopAnimation("Offset");
                _containerShape_40.StopAnimation("RotationAngleInDegrees");
                _containerShape_40.StopAnimation("Scale");
                _containerShape_40.StopAnimation("Offset");
                _pathGeometry_02.StopAnimation("Path");
                _pathGeometry_03.StopAnimation("Path");
                _pathGeometry_04.StopAnimation("Path");
                _pathGeometry_05.StopAnimation("Path");
                _pathGeometry_48.StopAnimation("Path");
                _spriteShape_52.StopAnimation("Offset");
                _containerVisual_09.StopAnimation("RotationAngleInDegrees");
                _containerVisual_09.StopAnimation("Offset");
                _containerVisual_10.StopAnimation("Offset");
                _root.Properties.StopAnimation("t0");
                _root.Properties.StopAnimation("t1");
                _root.Properties.StopAnimation("t2");
                _root.Properties.StopAnimation("t3");
                _shapeVisual_01.StopAnimation("IsVisible");
                _shapeVisual_02.StopAnimation("IsVisible");
                _shapeVisual_03.StopAnimation("IsVisible");
                _shapeVisual_04.StopAnimation("IsVisible");
                _shapeVisual_05.StopAnimation("IsVisible");
                _shapeVisual_06.StopAnimation("IsVisible");
                _shapeVisual_14.StopAnimation("IsVisible");
                _shapeVisual_15.StopAnimation("IsVisible");
            }

        }
    }
}

